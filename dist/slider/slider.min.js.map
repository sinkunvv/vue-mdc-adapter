{"version":3,"file":"slider.min.js","sources":["../../components/base/apply-passive.js","../../components/base/dispatch-focus-mixin.js","../../node_modules/@material/slider/constants.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/animation/index.js","../../node_modules/@material/slider/adapter.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/slider/foundation.js","../../components/base/base-plugin.js","../../components/base/auto-init.js","../../components/slider/entry.js"],"sourcesContent":["let supportsPassive_\r\n\r\n/**\r\n * Determine whether the current browser supports passive event listeners, and if so, use them.\r\n * @param {!Window=} globalObj\r\n * @param {boolean=} forceRefresh\r\n * @return {boolean|{passive: boolean}}\r\n */\r\nexport function applyPassive(globalObj = window, forceRefresh = false) {\r\n  if (supportsPassive_ === undefined || forceRefresh) {\r\n    let isSupported = false\r\n    try {\r\n      globalObj.document.addEventListener('test', null, {\r\n        get passive() {\r\n          isSupported = { passive: true }\r\n        }\r\n      })\r\n    } catch (e) {\r\n      //empty\r\n    }\r\n\r\n    supportsPassive_ = isSupported\r\n  }\r\n\r\n  return supportsPassive_\r\n}\r\n","export const DispatchFocusMixin = {\r\n  data() {\r\n    return { hasFocus: false }\r\n  },\r\n  methods: {\r\n    onMouseDown() {\r\n      this._active = true\r\n    },\r\n    onMouseUp() {\r\n      this._active = false\r\n    },\r\n    onFocusEvent() {\r\n      // dispatch async to let time to other focus event to propagate\r\n      setTimeout(() => this.dispatchFocusEvent(), 0)\r\n    },\r\n    onBlurEvent() {\r\n      // dispatch async to let time to other focus event to propagate\r\n      // also filtur blur if mousedown\r\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\r\n    },\r\n    dispatchFocusEvent() {\r\n      let hasFocus =\r\n        this.$el === document.activeElement ||\r\n        this.$el.contains(document.activeElement)\r\n      if (hasFocus != this.hasFocus) {\r\n        this.$emit(hasFocus ? 'focus' : 'blur')\r\n        this.hasFocus = hasFocus\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$el.addEventListener('focusin', this.onFocusEvent)\r\n    this.$el.addEventListener('focusout', this.onBlurEvent)\r\n    this.$el.addEventListener('mousedown', this.onMouseDown)\r\n    this.$el.addEventListener('mouseup', this.onMouseUp)\r\n  },\r\n  beforeDestroy() {\r\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\r\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\r\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\r\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-slider--active',\n  DISABLED: 'mdc-slider--disabled',\n  DISCRETE: 'mdc-slider--discrete',\n  FOCUS: 'mdc-slider--focus',\n  IN_TRANSIT: 'mdc-slider--in-transit',\n  IS_DISCRETE: 'mdc-slider--discrete',\n  HAS_TRACK_MARKER: 'mdc-slider--display-markers',\n};\n\n/** @enum {string} */\nconst strings = {\n  TRACK_SELECTOR: '.mdc-slider__track',\n  TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',\n  LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',\n  THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',\n  PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',\n  ARIA_VALUEMIN: 'aria-valuemin',\n  ARIA_VALUEMAX: 'aria-valuemax',\n  ARIA_VALUENOW: 'aria-valuenow',\n  ARIA_DISABLED: 'aria-disabled',\n  STEP_DATA_ATTR: 'data-step',\n  CHANGE_EVENT: 'MDCSlider:change',\n  INPUT_EVENT: 'MDCSlider:input',\n};\n\n/** @enum {number} */\nconst numbers = {\n  PAGE_FACTOR: 4,\n};\n\nexport {cssClasses, strings, numbers};\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Adapter for MDC Slider.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Slider into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSliderAdapter {\n  /**\n   * Returns true if className exists for the slider Element\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the slider Element\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the slider Element\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns a string if attribute name exists on the slider Element,\n   * otherwise returns null\n   * @param {string} name\n   * @return {?string}\n   */\n  getAttribute(name) {}\n\n  /**\n   * Sets attribute name on slider Element to value\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttribute(name, value) {}\n\n  /**\n   * Removes attribute name from slider Element\n   * @param {string} name\n   */\n  removeAttribute(name) {}\n\n  /**\n   * Returns the bounding client rect for the slider Element\n   * @return {?ClientRect}\n   */\n  computeBoundingRect() {}\n\n  /**\n   * Returns the tab index of the slider Element\n   * @return {number}\n   */\n  getTabIndex() {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * Deregisters an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * Emits a custom event MDCSlider:input from the root\n   */\n  notifyInput() {}\n\n  /**\n   * Emits a custom event MDCSlider:change from the root\n   */\n  notifyChange() {}\n\n  /**\n   * Sets a style property of the thumb container element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setThumbContainerStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets a style property of the track element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setTrackStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets the inner text of the pin marker to the passed value\n   * @param {number} value\n   */\n  setMarkerValue(value) {}\n\n  /**\n   * Appends the passed number of track markers to the track mark container element\n   * @param {number} numMarkers\n   */\n  appendTrackMarkers(numMarkers) {}\n\n  /**\n   * Removes all track markers fromt he track mark container element\n   */\n  removeTrackMarkers() {}\n\n  /**\n   * Sets a style property of the last track marker to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setLastTrackMarkersStyleProperty(propertyName, value) {}\n\n  /**\n   * Returns true if the root element is RTL, otherwise false\n   * @return {boolean}\n   */\n  isRTL() {}\n}\n\nexport default MDCSliderAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n *you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssClasses, strings, numbers} from './constants';\nimport MDCSliderAdapter from './adapter';\n\nimport {getCorrectEventName, getCorrectPropertyName} from '@material/animation/index';\nimport MDCFoundation from '@material/base/foundation';\n\n/** @enum {string} */\nconst KEY_IDS = {\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  HOME: 'Home',\n  END: 'End',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n};\n\n/** @enum {string} */\nconst MOVE_EVENT_MAP = {\n  'mousedown': 'mousemove',\n  'touchstart': 'touchmove',\n  'pointerdown': 'pointermove',\n};\n\nconst DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];\nconst UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];\n\n/**\n * @extends {MDCFoundation<!MDCSliderAdapter>}\n */\nclass MDCSliderFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCSliderAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSliderAdapter} */ ({\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getAttribute: (/* name: string */) => /* string|null */ null,\n      setAttribute: (/* name: string, value: string */) => {},\n      removeAttribute: (/* name: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ ({\n        top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0,\n      }),\n      getTabIndex: () => /* number */ 0,\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      notifyInput: () => {},\n      notifyChange: () => {},\n      setThumbContainerStyleProperty: (/* propertyName: string, value: string */) => {},\n      setTrackStyleProperty: (/* propertyName: string, value: string */) => {},\n      setMarkerValue: (/* value: number */) => {},\n      appendTrackMarkers: (/* numMarkers: number */) => {},\n      removeTrackMarkers: () => {},\n      setLastTrackMarkersStyleProperty: (/* propertyName: string, value: string */) => {},\n      isRTL: () => /* boolean */ false,\n    });\n  }\n\n  /**\n   * Creates a new instance of MDCSliderFoundation\n   * @param {?MDCSliderAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSliderFoundation.defaultAdapter, adapter));\n    /** @private {?ClientRect} */\n    this.rect_ = null;\n    // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'\n    // because those could be valid tabindices set by the client code.\n    this.savedTabIndex_ = NaN;\n    this.active_ = false;\n    this.inTransit_ = false;\n    this.isDiscrete_ = false;\n    this.hasTrackMarker_ = false;\n    this.handlingThumbTargetEvt_ = false;\n    this.min_ = 0;\n    this.max_ = 100;\n    this.step_ = 0;\n    this.value_ = 0;\n    this.disabled_ = false;\n    this.preventFocusState_ = false;\n    this.updateUIFrame_ = 0;\n    this.thumbContainerPointerHandler_ = () => {\n      this.handlingThumbTargetEvt_ = true;\n    };\n    this.interactionStartHandler_ = (evt) => this.handleDown_(evt);\n    this.keydownHandler_ = (evt) => this.handleKeydown_(evt);\n    this.focusHandler_ = () => this.handleFocus_();\n    this.blurHandler_ = () => this.handleBlur_();\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.isDiscrete_ = this.adapter_.hasClass(cssClasses.IS_DISCRETE);\n    this.hasTrackMarker_ = this.adapter_.hasClass(cssClasses.HAS_TRACK_MARKER);\n    DOWN_EVENTS.forEach((evtName) => this.adapter_.registerInteractionHandler(evtName, this.interactionStartHandler_));\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.registerThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.layout();\n    // At last step, provide a reasonable default value to discrete slider\n    if (this.isDiscrete_ && this.getStep() == 0) {\n      this.step_ = 1;\n    }\n  }\n\n  destroy() {\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterInteractionHandler(evtName, this.interactionStartHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  setupTrackMarker() {\n    if (this.isDiscrete_ && this.hasTrackMarker_&& this.getStep() != 0) {\n      const min = this.getMin();\n      const max = this.getMax();\n      const step = this.getStep();\n      let numMarkers = (max - min) / step;\n\n      // In case distance between max & min is indivisible to step,\n      // we place the secondary to last marker proportionally at where thumb\n      // could reach and place the last marker at max value\n      const indivisible = Math.ceil(numMarkers) !== numMarkers;\n      if (indivisible) {\n        numMarkers = Math.ceil(numMarkers);\n      }\n\n      this.adapter_.removeTrackMarkers();\n      this.adapter_.appendTrackMarkers(numMarkers);\n\n      if (indivisible) {\n        const lastStepRatio = (max - numMarkers * step) / step + 1;\n        const flex = getCorrectPropertyName(window, 'flex');\n        this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));\n      }\n    }\n  }\n\n  layout() {\n    this.rect_ = this.adapter_.computeBoundingRect();\n    this.updateUIForCurrentValue_();\n  }\n\n  /** @return {number} */\n  getValue() {\n    return this.value_;\n  }\n\n  /** @param {number} value */\n  setValue(value) {\n    this.setValue_(value, false);\n  }\n\n  /** @return {number} */\n  getMax() {\n    return this.max_;\n  }\n\n  /** @param {number} max */\n  setMax(max) {\n    if (max < this.min_) {\n      throw new Error('Cannot set max to be less than the slider\\'s minimum value');\n    }\n    this.max_ = max;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMAX, String(this.max_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getMin() {\n    return this.min_;\n  }\n\n  /** @param {number} min */\n  setMin(min) {\n    if (min > this.max_) {\n      throw new Error('Cannot set min to be greater than the slider\\'s maximum value');\n    }\n    this.min_ = min;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMIN, String(this.min_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getStep() {\n    return this.step_;\n  }\n\n  /** @param {number} step */\n  setStep(step) {\n    if (step < 0) {\n      throw new Error('Step cannot be set to a negative number');\n    }\n    if (this.isDiscrete_ && (typeof(step) !== 'number' || step < 1)) {\n      step = 1;\n    }\n    this.step_ = step;\n    this.setValue_(this.value_, false, true);\n    this.setupTrackMarker();\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.disabled_ = disabled;\n    this.toggleClass_(cssClasses.DISABLED, this.disabled_);\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setAttribute(strings.ARIA_DISABLED, 'true');\n      this.adapter_.removeAttribute('tabindex');\n    } else {\n      this.adapter_.removeAttribute(strings.ARIA_DISABLED);\n      if (!isNaN(this.savedTabIndex_)) {\n        this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));\n      }\n    }\n  }\n\n  /**\n   * Called when the user starts interacting with the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleDown_(evt) {\n    if (this.disabled_) {\n      return;\n    }\n\n    this.preventFocusState_ = true;\n    this.setInTransit_(!this.handlingThumbTargetEvt_);\n    this.handlingThumbTargetEvt_ = false;\n    this.setActive_(true);\n\n    const moveHandler = (evt) => {\n      this.handleMove_(evt);\n    };\n\n    // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers\n    // do not always fire these consistently in pairs.\n    // (See https://github.com/material-components/material-components-web/issues/1192)\n    const upHandler = () => {\n      this.handleUp_();\n      this.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n      UP_EVENTS.forEach((evtName) => this.adapter_.deregisterBodyInteractionHandler(evtName, upHandler));\n    };\n\n    this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n    UP_EVENTS.forEach((evtName) => this.adapter_.registerBodyInteractionHandler(evtName, upHandler));\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user moves the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleMove_(evt) {\n    evt.preventDefault();\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user's interaction with the slider ends\n   * @private\n   */\n  handleUp_() {\n    this.setActive_(false);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the pageX of the event\n   * @param {!Event} evt\n   * @return {number}\n   * @private\n   */\n  getPageX_(evt) {\n    if (evt.targetTouches && evt.targetTouches.length > 0) {\n      return evt.targetTouches[0].pageX;\n    }\n    return evt.pageX;\n  }\n\n  /**\n   * Sets the slider value from an event\n   * @param {!Event} evt\n   * @private\n   */\n  setValueFromEvt_(evt) {\n    const pageX = this.getPageX_(evt);\n    const value = this.computeValueFromPageX_(pageX);\n    this.setValue_(value, true);\n  }\n\n  /**\n   * Computes the new value from the pageX position\n   * @param {number} pageX\n   * @return {number}\n   */\n  computeValueFromPageX_(pageX) {\n    const {max_: max, min_: min} = this;\n    const xPos = pageX - this.rect_.left;\n    let pctComplete = xPos / this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      pctComplete = 1 - pctComplete;\n    }\n    // Fit the percentage complete between the range [min,max]\n    // by remapping from [0, 1] to [min, min+(max-min)].\n    return min + pctComplete * (max - min);\n  }\n\n  /**\n   * Handles keydown events\n   * @param {!Event} evt\n   */\n  handleKeydown_(evt) {\n    const keyId = this.getKeyId_(evt);\n    const value = this.getValueForKeyId_(keyId);\n    if (isNaN(value)) {\n      return;\n    }\n\n    // Prevent page from scrolling due to key presses that would normally scroll the page\n    evt.preventDefault();\n    this.adapter_.addClass(cssClasses.FOCUS);\n    this.setValue_(value, true);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the computed name of the event\n   * @param {!Event} kbdEvt\n   * @return {string}\n   */\n  getKeyId_(kbdEvt) {\n    if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {\n      return KEY_IDS.ARROW_LEFT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {\n      return KEY_IDS.ARROW_RIGHT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {\n      return KEY_IDS.ARROW_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {\n      return KEY_IDS.ARROW_DOWN;\n    }\n    if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {\n      return KEY_IDS.HOME;\n    }\n    if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {\n      return KEY_IDS.END;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {\n      return KEY_IDS.PAGE_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {\n      return KEY_IDS.PAGE_DOWN;\n    }\n\n    return '';\n  }\n\n  /**\n   * Computes the value given a keyboard key ID\n   * @param {string} keyId\n   * @return {number}\n   */\n  getValueForKeyId_(keyId) {\n    const {max_: max, min_: min, step_: step} = this;\n    let delta = step || (max - min) / 100;\n    const valueNeedsToBeFlipped = this.adapter_.isRTL() && (\n      keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT\n    );\n    if (valueNeedsToBeFlipped) {\n      delta = -delta;\n    }\n\n    switch (keyId) {\n    case KEY_IDS.ARROW_LEFT:\n    case KEY_IDS.ARROW_DOWN:\n      return this.value_ - delta;\n    case KEY_IDS.ARROW_RIGHT:\n    case KEY_IDS.ARROW_UP:\n      return this.value_ + delta;\n    case KEY_IDS.HOME:\n      return this.min_;\n    case KEY_IDS.END:\n      return this.max_;\n    case KEY_IDS.PAGE_UP:\n      return this.value_ + delta * numbers.PAGE_FACTOR;\n    case KEY_IDS.PAGE_DOWN:\n      return this.value_ - delta * numbers.PAGE_FACTOR;\n    default:\n      return NaN;\n    }\n  }\n\n  handleFocus_() {\n    if (this.preventFocusState_) {\n      return;\n    }\n    this.adapter_.addClass(cssClasses.FOCUS);\n  }\n\n  handleBlur_() {\n    this.preventFocusState_ = false;\n    this.adapter_.removeClass(cssClasses.FOCUS);\n  }\n\n  /**\n   * Sets the value of the slider\n   * @param {number} value\n   * @param {boolean} shouldFireInput\n   * @param {boolean=} force\n   */\n  setValue_(value, shouldFireInput, force = false) {\n    if (value === this.value_ && !force) {\n      return;\n    }\n\n    const {min_: min, max_: max} = this;\n    const valueSetToBoundary = value === min || value === max;\n    if (this.step_ && !valueSetToBoundary) {\n      value = this.quantize_(value);\n    }\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    this.value_ = value;\n    this.adapter_.setAttribute(strings.ARIA_VALUENOW, String(this.value_));\n    this.updateUIForCurrentValue_();\n\n    if (shouldFireInput) {\n      this.adapter_.notifyInput();\n      if (this.isDiscrete_) {\n        this.adapter_.setMarkerValue(value);\n      }\n    }\n  }\n\n  /**\n   * Calculates the quantized value\n   * @param {number} value\n   * @return {number}\n   */\n  quantize_(value) {\n    const numSteps = Math.round(value / this.step_);\n    const quantizedVal = numSteps * this.step_;\n    return quantizedVal;\n  }\n\n  updateUIForCurrentValue_() {\n    const {max_: max, min_: min, value_: value} = this;\n    const pctComplete = (value - min) / (max - min);\n    let translatePx = pctComplete * this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      translatePx = this.rect_.width - translatePx;\n    }\n\n    const transformProp = getCorrectPropertyName(window, 'transform');\n    const transitionendEvtName = getCorrectEventName(window, 'transitionend');\n\n    if (this.inTransit_) {\n      const onTransitionEnd = () => {\n        this.setInTransit_(false);\n        this.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n      };\n      this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n    }\n\n    this.updateUIFrame_ = requestAnimationFrame(() => {\n      // NOTE(traviskaufman): It would be nice to use calc() here,\n      // but IE cannot handle calcs in transforms correctly.\n      // See: https://goo.gl/NC2itk\n      // Also note that the -50% offset is used to center the slider thumb.\n      this.adapter_.setThumbContainerStyleProperty(transformProp, `translateX(${translatePx}px) translateX(-50%)`);\n      this.adapter_.setTrackStyleProperty(transformProp, `scaleX(${pctComplete})`);\n    });\n  }\n\n  /**\n   * Toggles the active state of the slider\n   * @param {boolean} active\n   */\n  setActive_(active) {\n    this.active_ = active;\n    this.toggleClass_(cssClasses.ACTIVE, this.active_);\n  }\n\n  /**\n   * Toggles the inTransit state of the slider\n   * @param {boolean} inTransit\n   */\n  setInTransit_(inTransit) {\n    this.inTransit_ = inTransit;\n    this.toggleClass_(cssClasses.IN_TRANSIT, this.inTransit_);\n  }\n\n  /**\n   * Conditionally adds or removes a class based on shouldBePresent\n   * @param {string} className\n   * @param {boolean} shouldBePresent\n   */\n  toggleClass_(className, shouldBePresent) {\n    if (shouldBePresent) {\n      this.adapter_.addClass(className);\n    } else {\n      this.adapter_.removeClass(className);\n    }\n  }\n}\n\nexport default MDCSliderFoundation;\n","export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","export function autoInit(plugin) {\r\n  // Auto-install\r\n  let _Vue = null\r\n  if (typeof window !== 'undefined') {\r\n    _Vue = window.Vue\r\n  } else if (typeof global !== 'undefined') {\r\n    /*global global*/\r\n    _Vue = global.Vue\r\n  }\r\n  if (_Vue) {\r\n    _Vue.use(plugin)\r\n  }\r\n}\r\n","import './styles.scss'\r\nimport { autoInit } from '../base'\r\nimport plugin from './index.js'\r\nexport default plugin\r\n\r\nautoInit(plugin)\r\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","DispatchFocusMixin","hasFocus","_active","_this","dispatchFocusEvent","setTimeout","_this2","this","$el","activeElement","contains","$emit","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","cssClasses","Math","floor","random","toString","strings","numbers","eventTypeMap","className","name","value","type","handler","propertyName","numMarkers","cssPropertyMap","getAnimationName","windowObj","eventType","hasProperShape","eventFoundInMaps","map","el","styleProperty","style","noPrefix","webkitPrefix","getJavaScriptEventName","getCorrectPropertyName","MDCFoundation","adapter","adapter_","KEY_IDS","MOVE_EVENT_MAP","DOWN_EVENTS","UP_EVENTS","MDCSliderFoundation","babelHelpers.extends","defaultAdapter","rect_","savedTabIndex_","NaN","active_","inTransit_","isDiscrete_","hasTrackMarker_","handlingThumbTargetEvt_","min_","max_","step_","value_","disabled_","preventFocusState_","updateUIFrame_","thumbContainerPointerHandler_","interactionStartHandler_","evt","handleDown_","keydownHandler_","handleKeydown_","focusHandler_","handleFocus_","blurHandler_","handleBlur_","resizeHandler_","layout","right","bottom","left","width","height","hasClass","IS_DISCRETE","HAS_TRACK_MARKER","forEach","evtName","registerInteractionHandler","registerThumbContainerInteractionHandler","registerResizeHandler","getStep","deregisterInteractionHandler","_this3","deregisterThumbContainerInteractionHandler","deregisterResizeHandler","min","getMin","max","getMax","step","indivisible","ceil","removeTrackMarkers","appendTrackMarkers","lastStepRatio","flex","setLastTrackMarkersStyleProperty","String","computeBoundingRect","updateUIForCurrentValue_","setValue_","Error","setAttribute","ARIA_VALUEMAX","setupTrackMarker","ARIA_VALUEMIN","disabled","toggleClass_","DISABLED","getTabIndex","ARIA_DISABLED","removeAttribute","isNaN","setInTransit_","setActive_","moveHandler","handleMove_","upHandler","handleUp_","deregisterBodyInteractionHandler","_this4","registerBodyInteractionHandler","setValueFromEvt_","preventDefault","notifyChange","targetTouches","length","pageX","getPageX_","computeValueFromPageX_","pctComplete","isRTL","keyId","getKeyId_","getValueForKeyId_","addClass","FOCUS","kbdEvt","key","keyCode","delta","PAGE_FACTOR","removeClass","shouldFireInput","force","valueSetToBoundary","quantize_","ARIA_VALUENOW","notifyInput","setMarkerValue","round","translatePx","transformProp","transitionendEvtName","onTransitionEnd","requestAnimationFrame","setThumbContainerStyleProperty","setTrackStyleProperty","active","ACTIVE","inTransit","IN_TRANSIT","shouldBePresent","components","component","plugin","_Vue","Vue","global","use"],"mappings":"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"}
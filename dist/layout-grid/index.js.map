{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../components/layout-grid/mdc-layout-grid.vue","../../components/layout-grid/mdc-layout-cell.vue","../../components/layout-grid/mdc-layout-inner-grid.vue","../../components/layout-grid/index.js"],"sourcesContent":["export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","/* global CustomEvent */\r\n\r\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\r\n  let evt\r\n  if (typeof CustomEvent === 'function') {\r\n    evt = new CustomEvent(evtType, {\r\n      detail: evtData,\r\n      bubbles: shouldBubble\r\n    })\r\n  } else {\r\n    evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\r\n  }\r\n  el.dispatchEvent(evt)\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","<template>\r\n  <div :class=\"classes\">\r\n    <div class=\"mdc-layout-grid__inner\">\r\n      <slot/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-layout-grid',\r\n  props: {\r\n    'fixed-column-width': Boolean,\r\n    'align-left': Boolean,\r\n    'align-right': Boolean\r\n  },\r\n  computed: {\r\n    classes() {\r\n      return {\r\n        'mdc-layout-grid': true,\r\n        'mdc-layout-grid--fixed-column-width': this.fixedColumnWidth,\r\n        'mdc-layout-grid--align-left': this.alignLeft,\r\n        'mdc-layout-grid--align-right': this.alignRight\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div \r\n    :class=\"classes\" \r\n    class=\"mdc-layout-cell mdc-layout-grid__cell\">\r\n    <slot/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst spanOptions = {\r\n  type: [String, Number],\r\n  default: null,\r\n  validator: function(value) {\r\n    var num = Number(value)\r\n    return isFinite(num) && num <= 12 && num > 0\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'mdc-layout-cell',\r\n  props: {\r\n    span: spanOptions,\r\n    order: spanOptions,\r\n    phone: spanOptions,\r\n    tablet: spanOptions,\r\n    desktop: spanOptions,\r\n    align: {\r\n      type: String,\r\n      validator: function(value) {\r\n        return ['top', 'bottom', 'middle'].indexOf(value) !== -1\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    classes() {\r\n      let classes = []\r\n\r\n      if (this.span) {\r\n        classes.push(`mdc-layout-grid__cell--span-${this.span}`)\r\n      }\r\n\r\n      if (this.order) {\r\n        classes.push(`mdc-layout-grid__cell--order-${this.order}`)\r\n      }\r\n\r\n      if (this.phone) {\r\n        classes.push(`mdc-layout-grid__cell--span-${this.phone}-phone`)\r\n      }\r\n\r\n      if (this.tablet) {\r\n        classes.push(`mdc-layout-grid__cell--span-${this.tablet}-tablet`)\r\n      }\r\n\r\n      if (this.desktop) {\r\n        classes.push(`mdc-layout-grid__cell--span-${this.desktop}-desktop`)\r\n      }\r\n\r\n      if (this.align) {\r\n        classes.push(`mdc-layout-grid__cell--align-${this.align}`)\r\n      }\r\n\r\n      return classes\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-layout-inner-grid mdc-layout-grid__inner\">\r\n    <slot/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-layout-inner-grid'\r\n}\r\n</script>\r\n","import { BasePlugin } from '../base'\r\nimport mdcLayoutGrid from './mdc-layout-grid.vue'\r\nimport mdcLayoutCell from './mdc-layout-cell.vue'\r\nimport mdcLayoutInnerGrid from './mdc-layout-inner-grid.vue'\r\n\r\nexport { mdcLayoutGrid, mdcLayoutCell, mdcLayoutInnerGrid }\r\n\r\nexport default BasePlugin({\r\n  mdcLayoutGrid,\r\n  mdcLayoutCell,\r\n  mdcLayoutInnerGrid\r\n})\r\n"],"names":["BasePlugin","components","key","component","name","scope","Math","floor","random","toString"],"mappings":";;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,UAApB,EAAgC;SAC9B;aACI,QADJ;aAEI,qBAAM;WACR,IAAIC,GAAT,IAAgBD,UAAhB,EAA4B;YACtBE,YAAYF,WAAWC,GAAX,CAAhB;WACGC,SAAH,CAAaA,UAAUC,IAAvB,EAA6BD,SAA7B;;KALC;;GAAP;;;ACDF;;ACAA,IAAME,QACJC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBF,KAAKC,KAAL,CAAW,UAAX,CAA3B,EAAmDE,QAAnD,KAAgE,GADlE;;;;;;;;;;;ACSA;;;;;;;;;;;;;;;;;CAAA;;;AANY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMZ;;;;;;;CAAA;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;;;AAfY,+BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIZ;;CAAA;;;AAJY,+BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIZ,YAAeT,WAAW;8BAAA;8BAAA;;CAAX,CAAf;;;;;"}
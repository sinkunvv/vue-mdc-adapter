{"version":3,"file":"checkbox.min.js","sources":["../../components/base/apply-passive.js","../../components/base/custom-element.js","../../components/base/dispatch-focus-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/selection-control/node_modules/@material/ripple/constants.js","../../node_modules/@material/selection-control/node_modules/@material/ripple/adapter.js","../../node_modules/@material/selection-control/node_modules/@material/ripple/util.js","../../node_modules/@material/selection-control/node_modules/@material/ripple/foundation.js","../../node_modules/@material/selection-control/node_modules/@material/ripple/index.js","../../node_modules/@material/checkbox/adapter.js","../../node_modules/@material/checkbox/constants.js","../../node_modules/@material/checkbox/foundation.js","../../node_modules/@material/form-field/adapter.js","../../node_modules/@material/form-field/constants.js","../../node_modules/@material/form-field/foundation.js","../../node_modules/@material/animation/index.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/ripple/mdc-ripple-base.js","../../components/base/base-plugin.js","../../components/base/auto-init.js","../../components/checkbox/entry.js"],"sourcesContent":["let supportsPassive_\r\n\r\n/**\r\n * Determine whether the current browser supports passive event listeners, and if so, use them.\r\n * @param {!Window=} globalObj\r\n * @param {boolean=} forceRefresh\r\n * @return {boolean|{passive: boolean}}\r\n */\r\nexport function applyPassive(globalObj = window, forceRefresh = false) {\r\n  if (supportsPassive_ === undefined || forceRefresh) {\r\n    let isSupported = false\r\n    try {\r\n      globalObj.document.addEventListener('test', null, {\r\n        get passive() {\r\n          isSupported = { passive: true }\r\n        }\r\n      })\r\n    } catch (e) {\r\n      //empty\r\n    }\r\n\r\n    supportsPassive_ = isSupported\r\n  }\r\n\r\n  return supportsPassive_\r\n}\r\n","export const CustomElement = {\r\n  functional: true,\r\n  render(createElement, context) {\r\n    return createElement(\r\n      context.props.is || context.props.tag || 'div',\r\n      context.data,\r\n      context.children\r\n    )\r\n  }\r\n}\r\n\r\nexport const CustomElementMixin = {\r\n  components: {\r\n    CustomElement\r\n  }\r\n}\r\n","export const DispatchFocusMixin = {\r\n  data() {\r\n    return { hasFocus: false }\r\n  },\r\n  methods: {\r\n    onMouseDown() {\r\n      this._active = true\r\n    },\r\n    onMouseUp() {\r\n      this._active = false\r\n    },\r\n    onFocusEvent() {\r\n      // dispatch async to let time to other focus event to propagate\r\n      setTimeout(() => this.dispatchFocusEvent(), 0)\r\n    },\r\n    onBlurEvent() {\r\n      // dispatch async to let time to other focus event to propagate\r\n      // also filtur blur if mousedown\r\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\r\n    },\r\n    dispatchFocusEvent() {\r\n      let hasFocus =\r\n        this.$el === document.activeElement ||\r\n        this.$el.contains(document.activeElement)\r\n      if (hasFocus != this.hasFocus) {\r\n        this.$emit(hasFocus ? 'focus' : 'blur')\r\n        this.hasFocus = hasFocus\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$el.addEventListener('focusin', this.onFocusEvent)\r\n    this.$el.addEventListener('focusout', this.onBlurEvent)\r\n    this.$el.addEventListener('mousedown', this.onMouseDown)\r\n    this.$el.addEventListener('mouseup', this.onMouseUp)\r\n  },\r\n  beforeDestroy() {\r\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\r\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\r\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\r\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\r\n  }\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  supportsPressRipple_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    const supportsPressRipple = this.supportsPressRipple_();\n\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.addClass(ROOT);\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal_();\n        }\n      });\n    }\n  }\n\n  /** @override */\n  destroy() {\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n        this.adapter_.removeClass(FG_ACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.removeClass(ROOT);\n        this.adapter_.removeClass(UNBOUNDED);\n        this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  }\n\n  /**\n   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n   * @private\n   */\n  registerRootHandlers_(supportsPressRipple) {\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n      });\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /**\n   * @return {!MDCRippleFoundation}\n   * @override\n   */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  /** @override */\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCCheckboxAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the input element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setNativeControlAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the input element.\n   * @param {string} attr\n   */\n  removeNativeControlAttr(attr) {}\n\n  /** @param {!EventListener} handler */\n  registerAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  registerChangeHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterChangeHandler(handler) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n\n  forceLayout() {}\n\n  /** @return {boolean} */\n  isAttachedToDOM() {}\n}\n\nexport default MDCCheckboxAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nconst ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nconst cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n  ARIA_CHECKED_ATTR: 'aria-checked',\n  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  ANIM_END_LATCH_MS: 250,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCCheckboxAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/** @const {!Array<string>} */\nconst CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\nclass MDCCheckboxFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCCheckboxAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCCheckboxAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlAttr: (/* attr: string, value: string */) => {},\n      removeNativeControlAttr: (/* attr: string */) => {},\n      registerAnimationEndHandler: (/* handler: EventListener */) => {},\n      deregisterAnimationEndHandler: (/* handler: EventListener */) => {},\n      registerChangeHandler: (/* handler: EventListener */) => {},\n      deregisterChangeHandler: (/* handler: EventListener */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n      forceLayout: () => {},\n      isAttachedToDOM: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));\n\n    /** @private {string} */\n    this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    this.animEndLatchTimer_ = 0;\n\n    this.animEndHandler_ = /** @private {!EventListener} */ (\n      () => this.handleAnimationEnd());\n\n    this.changeHandler_ = /** @private {!EventListener} */ (\n      () => this.handleChange());\n  }\n\n  /** @override */\n  init() {\n    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());\n    this.updateAriaChecked_();\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.registerChangeHandler(this.changeHandler_);\n    this.installPropertyChangeHooks_();\n  }\n\n  /** @override */\n  destroy() {\n    this.adapter_.deregisterChangeHandler(this.changeHandler_);\n    this.uninstallPropertyChangeHooks_();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isIndeterminate() {\n    return this.getNativeControl_().indeterminate;\n  }\n\n  /** @param {boolean} indeterminate */\n  setIndeterminate(indeterminate) {\n    this.getNativeControl_().indeterminate = indeterminate;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * Handles the animationend event for the checkbox\n   */\n  handleAnimationEnd() {\n    clearTimeout(this.animEndLatchTimer_);\n    this.animEndLatchTimer_ = setTimeout(() => {\n      this.adapter_.removeClass(this.currentAnimationClass_);\n      this.adapter_.deregisterAnimationEndHandler(this.animEndHandler_);\n    }, numbers.ANIM_END_LATCH_MS);\n  }\n\n  /**\n   * Handles the change event for the checkbox\n   */\n  handleChange() {\n    this.transitionCheckState_();\n  }\n\n  /** @private */\n  installPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (validDescriptor(desc)) {\n        const nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */ ({\n          get: desc.get,\n          set: (state) => {\n            desc.set.call(nativeCb, state);\n            this.transitionCheckState_();\n          },\n          configurable: desc.configurable,\n          enumerable: desc.enumerable,\n        });\n        Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n      }\n    });\n  }\n\n  /** @private */\n  uninstallPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = /** @type {!ObjectPropertyDescriptor} */ (\n        Object.getOwnPropertyDescriptor(cbProto, controlState));\n      if (validDescriptor(desc)) {\n        Object.defineProperty(nativeCb, controlState, desc);\n      }\n    });\n  }\n\n  /** @private */\n  transitionCheckState_() {\n    const nativeCb = this.adapter_.getNativeControl();\n    if (!nativeCb) {\n      return;\n    }\n    const oldState = this.currentCheckState_;\n    const newState = this.determineCheckState_(nativeCb);\n    if (oldState === newState) {\n      return;\n    }\n\n    this.updateAriaChecked_();\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.adapter_.registerAnimationEndHandler(this.animEndHandler_);\n    }\n  }\n\n  /**\n   * @param {!MDCSelectionControlState} nativeCb\n   * @return {string}\n   * @private\n   */\n  determineCheckState_(nativeCb) {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (nativeCb.indeterminate) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  }\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n  getTransitionAnimationClass_(oldState, newState) {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n    case TRANSITION_STATE_INIT:\n      if (newState === TRANSITION_STATE_UNCHECKED) {\n        return '';\n      }\n    // fallthrough\n    case TRANSITION_STATE_UNCHECKED:\n      return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n    case TRANSITION_STATE_CHECKED:\n      return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n    // TRANSITION_STATE_INDETERMINATE\n    default:\n      return newState === TRANSITION_STATE_CHECKED ?\n        ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  updateAriaChecked_() {\n    // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n    if (this.isIndeterminate()) {\n      this.adapter_.setNativeControlAttr(\n        strings.ARIA_CHECKED_ATTR, strings.ARIA_CHECKED_INDETERMINATE_VALUE);\n    } else {\n      this.adapter_.removeNativeControlAttr(strings.ARIA_CHECKED_ATTR);\n    }\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      indeterminate: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\nexport default MDCCheckboxFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Form Field. Provides an interface for managing\n * - event handlers\n * - ripple activation\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCFormFieldAdapter {\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  activateInputRipple() {}\n\n  deactivateInputRipple() {}\n}\n\nexport default MDCFormFieldAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-form-field',\n};\n\n/** @enum {string} */\nconst strings = {\n  LABEL_SELECTOR: '.mdc-form-field > label',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFormFieldAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFormFieldAdapter>}\n */\nclass MDCFormFieldFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCFormFieldAdapter} */\n  static get defaultAdapter() {\n    return {\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      activateInputRipple: () => {},\n      deactivateInputRipple: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCFormFieldFoundation.defaultAdapter, adapter));\n\n    /** @private {!EventListener} */\n    this.clickHandler_ = /** @type {!EventListener} */ (\n      () => this.handleClick_());\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n  }\n\n  /** @private */\n  handleClick_() {\n    this.adapter_.activateInputRipple();\n    requestAnimationFrame(() => this.adapter_.deactivateInputRipple());\n  }\n}\n\nexport default MDCFormFieldFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n        // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n        this.layoutInternal_();\n      }\n    });\n  }\n\n  /** @override */\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.registerResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\r\nimport {\r\n  supportsCssVariables,\r\n  getMatchesProperty,\r\n  applyPassive\r\n} from '@material/ripple/util'\r\n\r\nexport class RippleBase extends MDCRippleFoundation {\r\n  static get MATCHES() {\r\n    /* global HTMLElement */\r\n    return (\r\n      RippleBase._matches ||\r\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\r\n    )\r\n  }\r\n\r\n  static isSurfaceActive(ref) {\r\n    return ref[RippleBase.MATCHES](':active')\r\n  }\r\n\r\n  constructor(vm, options) {\r\n    super(\r\n      Object.assign(\r\n        {\r\n          browserSupportsCssVars: () => {\r\n            return supportsCssVariables(window)\r\n          },\r\n          isUnbounded: () => {\r\n            return false\r\n          },\r\n          isSurfaceActive: () => {\r\n            return vm.$el[RippleBase.MATCHES](':active')\r\n          },\r\n          isSurfaceDisabled: () => {\r\n            return vm.disabled\r\n          },\r\n          addClass(className) {\r\n            vm.$set(vm.classes, className, true)\r\n          },\r\n          removeClass(className) {\r\n            vm.$delete(vm.classes, className)\r\n          },\r\n          containsEventTarget: target => vm.$el.contains(target),\r\n          registerInteractionHandler: (evt, handler) => {\r\n            vm.$el.addEventListener(evt, handler, applyPassive())\r\n          },\r\n          deregisterInteractionHandler: (evt, handler) => {\r\n            vm.$el.removeEventListener(evt, handler, applyPassive())\r\n          },\r\n          registerDocumentInteractionHandler: (evtType, handler) =>\r\n            document.documentElement.addEventListener(\r\n              evtType,\r\n              handler,\r\n              applyPassive()\r\n            ),\r\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\r\n            document.documentElement.removeEventListener(\r\n              evtType,\r\n              handler,\r\n              applyPassive()\r\n            ),\r\n          registerResizeHandler: handler => {\r\n            return window.addEventListener('resize', handler)\r\n          },\r\n          deregisterResizeHandler: handler => {\r\n            return window.removeEventListener('resize', handler)\r\n          },\r\n          updateCssVariable: (varName, value) => {\r\n            vm.$set(vm.styles, varName, value)\r\n          },\r\n          computeBoundingRect: () => {\r\n            return vm.$el.getBoundingClientRect()\r\n          },\r\n          getWindowPageOffset: () => {\r\n            return { x: window.pageXOffset, y: window.pageYOffset }\r\n          }\r\n        },\r\n        options\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nexport const RippleMixin = {\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ripple = new RippleBase(this)\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.ripple.destroy()\r\n  }\r\n}\r\n","export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","export function autoInit(plugin) {\r\n  // Auto-install\r\n  let _Vue = null\r\n  if (typeof window !== 'undefined') {\r\n    _Vue = window.Vue\r\n  } else if (typeof global !== 'undefined') {\r\n    /*global global*/\r\n    _Vue = global.Vue\r\n  }\r\n  if (_Vue) {\r\n    _Vue.use(plugin)\r\n  }\r\n}\r\n","import './styles.scss'\r\nimport { autoInit } from '../base'\r\nimport plugin from './index.js'\r\nexport default plugin\r\n\r\nautoInit(plugin)\r\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","CustomElementMixin","createElement","context","props","is","tag","data","children","DispatchFocusMixin","hasFocus","_active","_this","dispatchFocusEvent","setTimeout","_this2","this","$el","activeElement","contains","$emit","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","scope","Math","floor","random","toString","VMAUniqueIdMixin","vma_uid_","_uid","MDCFoundation","adapter","adapter_","MDCComponent","root","foundation","root_","args","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","evtType","handler","evtData","shouldBubble","evt","CustomEvent","createEvent","initCustomEvent","dispatchEvent","cssClasses","className","target","varName","value","strings","numbers","supportsCssVariables_","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","babelHelpers.extends","defaultAdapter","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","supportsPressRipple","supportsPressRipple_","registerRootHandlers_","ROOT","UNBOUNDED","addClass","isUnbounded","layoutInternal_","FG_ACTIVATION","removeClass","removeCssVars_","deregisterRootHandlers_","deregisterDeactivationHandlers_","forEach","type","registerInteractionHandler","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","deregisterInteractionHandler","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","checkElementMadeActive_","animateActivation_","key","keyCode","isSurfaceActive","event","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","requestAnimationFrame","maxDim","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","_this16","BG_FOCUSED","_this17","RippleCapableSurface","disabled","unbounded_","setUnbounded","activate","deactivate","MDCRipple","createAdapter","dataset","Boolean","setUnbounded_","ripple","instance","HTMLElementPrototype","MATCHES","HTMLElement","prototype","filter","p","pop","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","util","classList","add","documentElement","style","setProperty","getBoundingClientRect","pageXOffset","pageYOffset","attr","CB_PROTO_PROPS","MDCCheckboxFoundation","currentCheckState_","TRANSITION_STATE_INIT","currentAnimationClass_","animEndLatchTimer_","animEndHandler_","handleAnimationEnd","changeHandler_","handleChange","determineCheckState_","getNativeControl_","updateAriaChecked_","UPGRADED","registerChangeHandler","installPropertyChangeHooks_","deregisterChangeHandler","uninstallPropertyChangeHooks_","checked","indeterminate","DISABLED","deregisterAnimationEndHandler","ANIM_END_LATCH_MS","transitionCheckState_","nativeCb","cbProto","Object","getPrototypeOf","controlState","desc","getOwnPropertyDescriptor","validDescriptor","nativeCbDesc","get","set","call","configurable","enumerable","defineProperty","getNativeControl","oldState","newState","forceLayout","getTransitionAnimationClass_","isAttachedToDOM","registerAnimationEndHandler","TRANSITION_STATE_INDETERMINATE","TRANSITION_STATE_CHECKED","TRANSITION_STATE_UNCHECKED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_CHECKED_INDETERMINATE","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","isIndeterminate","setNativeControlAttr","ARIA_CHECKED_ATTR","ARIA_CHECKED_INDETERMINATE_VALUE","removeNativeControlAttr","inputPropDesc","MDCFormFieldFoundation","clickHandler_","handleClick_","activateInputRipple","deactivateInputRipple","eventTypeMap","cssPropertyMap","getAnimationName","eventType","hasProperShape","eventFoundInMaps","map","el","styleProperty","noPrefix","webkitPrefix","getJavaScriptEventName","getCorrectEventName","isSupported_","RippleBase","vm","options","$set","classes","$delete","styles","ref","_matches","components","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}
{"version":3,"file":"vue-mdc-adapter.min.js","sources":["../components/base/apply-passive.js","../components/base/base-plugin.js","../components/base/custom-element.js","../components/base/custom-link.js","../components/base/custom-event.js","../components/base/custom-button.js","../components/base/custom-icon.js","../components/base/dispatch-event-mixin.js","../components/base/dispatch-focus-mixin.js","../components/base/uniqueid-mixin.js","../node_modules/@material/base/foundation.js","../node_modules/@material/ripple/constants.js","../node_modules/@material/ripple/adapter.js","../node_modules/@material/ripple/util.js","../node_modules/@material/ripple/foundation.js","../components/ripple/mdc-ripple-base.js","../components/ripple/index.js","../components/button/index.js","../components/card/index.js","../node_modules/@material/base/component.js","../node_modules/@material/selection-control/node_modules/@material/ripple/constants.js","../node_modules/@material/selection-control/node_modules/@material/ripple/adapter.js","../node_modules/@material/selection-control/node_modules/@material/ripple/util.js","../node_modules/@material/selection-control/node_modules/@material/ripple/foundation.js","../node_modules/@material/selection-control/node_modules/@material/ripple/index.js","../node_modules/@material/checkbox/adapter.js","../node_modules/@material/checkbox/constants.js","../node_modules/@material/checkbox/foundation.js","../node_modules/@material/form-field/adapter.js","../node_modules/@material/form-field/constants.js","../node_modules/@material/form-field/foundation.js","../node_modules/@material/animation/index.js","../components/checkbox/index.js","../node_modules/@material/chips/chip/constants.js","../node_modules/@material/chips/chip/adapter.js","../node_modules/@material/chips/chip/foundation.js","../node_modules/@material/chips/chip-set/constants.js","../node_modules/@material/chips/chip-set/adapter.js","../node_modules/@material/chips/chip-set/foundation.js","../components/chips/index.js","../node_modules/@material/dialog/constants.js","../node_modules/@material/dialog/foundation.js","../node_modules/tabbable/index.js","../node_modules/focus-trap/index.js","../node_modules/@material/dialog/util.js","../components/dialog/index.js","../node_modules/@material/drawer/slidable/constants.js","../node_modules/@material/drawer/slidable/foundation.js","../node_modules/@material/drawer/persistent/constants.js","../node_modules/@material/drawer/persistent/foundation.js","../node_modules/@material/drawer/util.js","../node_modules/@material/drawer/temporary/constants.js","../node_modules/@material/drawer/temporary/foundation.js","../components/drawer/index.js","../components/elevation/index.js","../components/fab/index.js","../node_modules/@material/grid-list/constants.js","../node_modules/@material/grid-list/foundation.js","../components/grid-list/index.js","../components/icon/index.js","../node_modules/@material/icon-toggle/constants.js","../node_modules/@material/icon-toggle/adapter.js","../node_modules/@material/icon-toggle/foundation.js","../components/icon-toggle/index.js","../components/layout-app/index.js","../components/layout-grid/index.js","../node_modules/@material/linear-progress/constants.js","../node_modules/@material/linear-progress/foundation.js","../components/linear-progress/index.js","../components/list/index.js","../node_modules/@material/menu/constants.js","../node_modules/@material/menu/adapter.js","../node_modules/@material/menu/foundation.js","../node_modules/@material/menu/util.js","../components/menu/index.js","../node_modules/@material/radio/constants.js","../node_modules/@material/radio/adapter.js","../node_modules/@material/radio/foundation.js","../components/radio/index.js","../node_modules/@material/select/constants.js","../node_modules/@material/select/adapter.js","../node_modules/@material/select/foundation.js","../node_modules/@material/floating-label/constants.js","../node_modules/@material/floating-label/adapter.js","../node_modules/@material/floating-label/foundation.js","../node_modules/@material/line-ripple/constants.js","../node_modules/@material/line-ripple/adapter.js","../node_modules/@material/line-ripple/foundation.js","../node_modules/@material/notched-outline/constants.js","../node_modules/@material/notched-outline/adapter.js","../node_modules/@material/notched-outline/foundation.js","../components/select/index.js","../node_modules/@material/slider/constants.js","../node_modules/@material/slider/foundation.js","../node_modules/@material/slider/adapter.js","../components/slider/index.js","../node_modules/@material/snackbar/constants.js","../node_modules/@material/snackbar/foundation.js","../components/snackbar/index.js","../node_modules/@material/switch/constants.js","../node_modules/@material/switch/adapter.js","../node_modules/@material/switch/foundation.js","../components/switch/index.js","../node_modules/@material/tabs/tab/constants.js","../node_modules/@material/tabs/tab/foundation.js","../node_modules/@material/tabs/tab-bar/constants.js","../node_modules/@material/tabs/tab-bar/foundation.js","../components/tabs/index.js","../node_modules/@material/textfield/helper-text/constants.js","../node_modules/@material/textfield/helper-text/adapter.js","../node_modules/@material/textfield/helper-text/foundation.js","../node_modules/@material/textfield/icon/constants.js","../node_modules/@material/textfield/icon/adapter.js","../node_modules/@material/textfield/icon/foundation.js","../node_modules/@material/textfield/constants.js","../node_modules/@material/textfield/adapter.js","../node_modules/@material/textfield/foundation.js","../components/textfield/index.js","../components/theme/index.js","../node_modules/@material/toolbar/constants.js","../node_modules/@material/toolbar/foundation.js","../components/toolbar/index.js","../node_modules/@material/top-app-bar/constants.js","../node_modules/@material/top-app-bar/foundation.js","../node_modules/@material/top-app-bar/adapter.js","../node_modules/@material/top-app-bar/short/foundation.js","../components/top-app-bar/index.js","../components/typography/mdc-typography.js","../components/typography/index.js","../components/index.js","../components/base/auto-init.js","../components/entry.js"],"sourcesContent":["let supportsPassive_\r\n\r\n/**\r\n * Determine whether the current browser supports passive event listeners, and if so, use them.\r\n * @param {!Window=} globalObj\r\n * @param {boolean=} forceRefresh\r\n * @return {boolean|{passive: boolean}}\r\n */\r\nexport function applyPassive(globalObj = window, forceRefresh = false) {\r\n  if (supportsPassive_ === undefined || forceRefresh) {\r\n    let isSupported = false\r\n    try {\r\n      globalObj.document.addEventListener('test', null, {\r\n        get passive() {\r\n          isSupported = { passive: true }\r\n        }\r\n      })\r\n    } catch (e) {\r\n      //empty\r\n    }\r\n\r\n    supportsPassive_ = isSupported\r\n  }\r\n\r\n  return supportsPassive_\r\n}\r\n","export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","export const CustomElement = {\r\n  functional: true,\r\n  render(createElement, context) {\r\n    return createElement(\r\n      context.props.is || context.props.tag || 'div',\r\n      context.data,\r\n      context.children\r\n    )\r\n  }\r\n}\r\n\r\nexport const CustomElementMixin = {\r\n  components: {\r\n    CustomElement\r\n  }\r\n}\r\n","export const CustomLink = {\r\n  name: 'custom-link',\r\n  functional: true,\r\n  props: {\r\n    tag: { type: String, default: 'a' },\r\n    link: Object\r\n  },\r\n  render(h, context) {\r\n    let element\r\n    let data = Object.assign({}, context.data)\r\n\r\n    if (context.props.link && context.parent.$router) {\r\n      // router-link case\r\n      element = context.parent.$root.$options.components['router-link']\r\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\r\n      if (data.on.click) {\r\n        data.nativeOn = { click: data.on.click }\r\n      }\r\n    } else {\r\n      // element fallback\r\n      element = context.props.tag\r\n    }\r\n\r\n    return h(element, data, context.children)\r\n  }\r\n}\r\n\r\nexport const CustomLinkMixin = {\r\n  props: {\r\n    to: [String, Object],\r\n    exact: Boolean,\r\n    append: Boolean,\r\n    replace: Boolean,\r\n    activeClass: String,\r\n    exactActiveClass: String\r\n  },\r\n  computed: {\r\n    link() {\r\n      return (\r\n        this.to && {\r\n          to: this.to,\r\n          exact: this.exact,\r\n          append: this.append,\r\n          replace: this.replace,\r\n          activeClass: this.activeClass,\r\n          exactActiveClass: this.exactActiveClass\r\n        }\r\n      )\r\n    }\r\n  },\r\n  components: {\r\n    CustomLink\r\n  }\r\n}\r\n","/* global CustomEvent */\r\n\r\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\r\n  let evt\r\n  if (typeof CustomEvent === 'function') {\r\n    evt = new CustomEvent(evtType, {\r\n      detail: evtData,\r\n      bubbles: shouldBubble\r\n    })\r\n  } else {\r\n    evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\r\n  }\r\n  el.dispatchEvent(evt)\r\n}\r\n","export const CustomButton = {\r\n  name: 'custom-button',\r\n  functional: true,\r\n  props: {\r\n    link: Object\r\n  },\r\n  render(h, context) {\r\n    let element\r\n    let data = Object.assign({}, context.data)\r\n\r\n    if (context.props.link && context.parent.$router) {\r\n      // router-link case\r\n      element = context.parent.$root.$options.components['router-link']\r\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\r\n      data.attrs.role = 'button'\r\n      if (data.on.click) {\r\n        data.nativeOn = { click: data.on.click }\r\n      }\r\n    } else if (data.attrs && data.attrs.href) {\r\n      // href case\r\n      element = 'a'\r\n      data.attrs.role = 'button'\r\n    } else {\r\n      // button fallback\r\n      element = 'button'\r\n    }\r\n\r\n    return h(element, data, context.children)\r\n  }\r\n}\r\n\r\nexport const CustomButtonMixin = {\r\n  props: {\r\n    href: String,\r\n    disabled: Boolean,\r\n    to: [String, Object],\r\n    exact: Boolean,\r\n    append: Boolean,\r\n    replace: Boolean,\r\n    activeClass: String,\r\n    exactActiveClass: String\r\n  },\r\n  computed: {\r\n    link() {\r\n      return (\r\n        this.to && {\r\n          to: this.to,\r\n          exact: this.exact,\r\n          append: this.append,\r\n          replace: this.replace,\r\n          activeClass: this.activeClass,\r\n          exactActiveClass: this.exactActiveClass\r\n        }\r\n      )\r\n    }\r\n  },\r\n  components: {\r\n    CustomButton\r\n  }\r\n}\r\n","export function extractIconProp(iconProp) {\r\n  if (typeof iconProp === 'string') {\r\n    return {\r\n      classes: { 'material-icons': true },\r\n      content: iconProp\r\n    }\r\n  } else if (iconProp instanceof Array) {\r\n    return {\r\n      classes: iconProp.reduce(\r\n        (result, value) => Object.assign(result, { [value]: true }),\r\n        {}\r\n      )\r\n    }\r\n  } else if (typeof iconProp === 'object') {\r\n    return {\r\n      classes: iconProp.className\r\n        .split(' ')\r\n        .reduce(\r\n          (result, value) => Object.assign(result, { [value]: true }),\r\n          {}\r\n        ),\r\n      content: iconProp.textContent\r\n    }\r\n  }\r\n}\r\n","export const DispatchEventMixin = {\r\n  props: {\r\n    event: String,\r\n    'event-target': Object,\r\n    'event-args': Array\r\n  },\r\n  methods: {\r\n    dispatchEvent(evt) {\r\n      evt && this.$emit(evt.type, evt)\r\n      if (this.event) {\r\n        let target = this.eventTarget || this.$root\r\n        let args = this.eventArgs || []\r\n        target.$emit(this.event, ...args)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    listeners() {\r\n      return {\r\n        ...this.$listeners,\r\n        click: e => this.dispatchEvent(e)\r\n      }\r\n    }\r\n  }\r\n}\r\n","export const DispatchFocusMixin = {\r\n  data() {\r\n    return { hasFocus: false }\r\n  },\r\n  methods: {\r\n    onMouseDown() {\r\n      this._active = true\r\n    },\r\n    onMouseUp() {\r\n      this._active = false\r\n    },\r\n    onFocusEvent() {\r\n      // dispatch async to let time to other focus event to propagate\r\n      setTimeout(() => this.dispatchFocusEvent(), 0)\r\n    },\r\n    onBlurEvent() {\r\n      // dispatch async to let time to other focus event to propagate\r\n      // also filtur blur if mousedown\r\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\r\n    },\r\n    dispatchFocusEvent() {\r\n      let hasFocus =\r\n        this.$el === document.activeElement ||\r\n        this.$el.contains(document.activeElement)\r\n      if (hasFocus != this.hasFocus) {\r\n        this.$emit(hasFocus ? 'focus' : 'blur')\r\n        this.hasFocus = hasFocus\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$el.addEventListener('focusin', this.onFocusEvent)\r\n    this.$el.addEventListener('focusout', this.onBlurEvent)\r\n    this.$el.addEventListener('mousedown', this.onMouseDown)\r\n    this.$el.addEventListener('mouseup', this.onMouseUp)\r\n  },\r\n  beforeDestroy() {\r\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\r\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\r\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\r\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\r\n  }\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n        // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n        this.layoutInternal_();\n      }\n    });\n  }\n\n  /** @override */\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.registerResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\r\nimport {\r\n  supportsCssVariables,\r\n  getMatchesProperty,\r\n  applyPassive\r\n} from '@material/ripple/util'\r\n\r\nexport class RippleBase extends MDCRippleFoundation {\r\n  static get MATCHES() {\r\n    /* global HTMLElement */\r\n    return (\r\n      RippleBase._matches ||\r\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\r\n    )\r\n  }\r\n\r\n  static isSurfaceActive(ref) {\r\n    return ref[RippleBase.MATCHES](':active')\r\n  }\r\n\r\n  constructor(vm, options) {\r\n    super(\r\n      Object.assign(\r\n        {\r\n          browserSupportsCssVars: () => {\r\n            return supportsCssVariables(window)\r\n          },\r\n          isUnbounded: () => {\r\n            return false\r\n          },\r\n          isSurfaceActive: () => {\r\n            return vm.$el[RippleBase.MATCHES](':active')\r\n          },\r\n          isSurfaceDisabled: () => {\r\n            return vm.disabled\r\n          },\r\n          addClass(className) {\r\n            vm.$set(vm.classes, className, true)\r\n          },\r\n          removeClass(className) {\r\n            vm.$delete(vm.classes, className)\r\n          },\r\n          containsEventTarget: target => vm.$el.contains(target),\r\n          registerInteractionHandler: (evt, handler) => {\r\n            vm.$el.addEventListener(evt, handler, applyPassive())\r\n          },\r\n          deregisterInteractionHandler: (evt, handler) => {\r\n            vm.$el.removeEventListener(evt, handler, applyPassive())\r\n          },\r\n          registerDocumentInteractionHandler: (evtType, handler) =>\r\n            document.documentElement.addEventListener(\r\n              evtType,\r\n              handler,\r\n              applyPassive()\r\n            ),\r\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\r\n            document.documentElement.removeEventListener(\r\n              evtType,\r\n              handler,\r\n              applyPassive()\r\n            ),\r\n          registerResizeHandler: handler => {\r\n            return window.addEventListener('resize', handler)\r\n          },\r\n          deregisterResizeHandler: handler => {\r\n            return window.removeEventListener('resize', handler)\r\n          },\r\n          updateCssVariable: (varName, value) => {\r\n            vm.$set(vm.styles, varName, value)\r\n          },\r\n          computeBoundingRect: () => {\r\n            return vm.$el.getBoundingClientRect()\r\n          },\r\n          getWindowPageOffset: () => {\r\n            return { x: window.pageXOffset, y: window.pageYOffset }\r\n          }\r\n        },\r\n        options\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nexport const RippleMixin = {\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ripple = new RippleBase(this)\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.ripple.destroy()\r\n  }\r\n}\r\n","import { BasePlugin } from '../base'\r\nimport mdcRipple from './mdc-ripple.vue'\r\n\r\nexport * from './mdc-ripple-base.js'\r\n\r\nexport { mdcRipple }\r\n\r\nexport default BasePlugin({\r\n  mdcRipple\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcButton from './mdc-button.vue'\r\nimport mdcButtonBase from './mdc-button-base.vue'\r\n\r\nexport { mdcButtonBase, mdcButton }\r\n\r\nexport default BasePlugin({\r\n  mdcButton\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcCard from './mdc-card.vue'\r\nimport mdcCardPrimaryAction from './mdc-card-primary-action.vue'\r\nimport mdcCardMedia from './mdc-card-media.vue'\r\nimport mdcCardHeader from './mdc-card-header.vue'\r\nimport mdcCardTitle from './mdc-card-title.vue'\r\nimport mdcCardSubtitle from './mdc-card-subtitle.vue'\r\nimport mdcCardText from './mdc-card-text.vue'\r\nimport mdcCardActions from './mdc-card-actions.vue'\r\nimport mdcCardActionButtons from './mdc-card-action-buttons.vue'\r\nimport mdcCardActionButton from './mdc-card-action-button.vue'\r\nimport mdcCardActionIcons from './mdc-card-action-icons.vue'\r\nimport mdcCardActionIcon from './mdc-card-action-icon.vue'\r\n\r\nexport {\r\n  mdcCard,\r\n  mdcCardPrimaryAction,\r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcCard,\r\n  mdcCardPrimaryAction,\r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon\r\n})\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  supportsPressRipple_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    const supportsPressRipple = this.supportsPressRipple_();\n\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.addClass(ROOT);\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal_();\n        }\n      });\n    }\n  }\n\n  /** @override */\n  destroy() {\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n        this.adapter_.removeClass(FG_ACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter_.removeClass(ROOT);\n        this.adapter_.removeClass(UNBOUNDED);\n        this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  }\n\n  /**\n   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n   * @private\n   */\n  registerRootHandlers_(supportsPressRipple) {\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n      });\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /**\n   * @return {!MDCRippleFoundation}\n   * @override\n   */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  /** @override */\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCCheckboxAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the input element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setNativeControlAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the input element.\n   * @param {string} attr\n   */\n  removeNativeControlAttr(attr) {}\n\n  /** @param {!EventListener} handler */\n  registerAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  registerChangeHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterChangeHandler(handler) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n\n  forceLayout() {}\n\n  /** @return {boolean} */\n  isAttachedToDOM() {}\n}\n\nexport default MDCCheckboxAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nconst ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nconst cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n  ARIA_CHECKED_ATTR: 'aria-checked',\n  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  ANIM_END_LATCH_MS: 250,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCCheckboxAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/** @const {!Array<string>} */\nconst CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\nclass MDCCheckboxFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCCheckboxAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCCheckboxAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlAttr: (/* attr: string, value: string */) => {},\n      removeNativeControlAttr: (/* attr: string */) => {},\n      registerAnimationEndHandler: (/* handler: EventListener */) => {},\n      deregisterAnimationEndHandler: (/* handler: EventListener */) => {},\n      registerChangeHandler: (/* handler: EventListener */) => {},\n      deregisterChangeHandler: (/* handler: EventListener */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n      forceLayout: () => {},\n      isAttachedToDOM: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));\n\n    /** @private {string} */\n    this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    this.animEndLatchTimer_ = 0;\n\n    this.animEndHandler_ = /** @private {!EventListener} */ (\n      () => this.handleAnimationEnd());\n\n    this.changeHandler_ = /** @private {!EventListener} */ (\n      () => this.handleChange());\n  }\n\n  /** @override */\n  init() {\n    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());\n    this.updateAriaChecked_();\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.registerChangeHandler(this.changeHandler_);\n    this.installPropertyChangeHooks_();\n  }\n\n  /** @override */\n  destroy() {\n    this.adapter_.deregisterChangeHandler(this.changeHandler_);\n    this.uninstallPropertyChangeHooks_();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isIndeterminate() {\n    return this.getNativeControl_().indeterminate;\n  }\n\n  /** @param {boolean} indeterminate */\n  setIndeterminate(indeterminate) {\n    this.getNativeControl_().indeterminate = indeterminate;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * Handles the animationend event for the checkbox\n   */\n  handleAnimationEnd() {\n    clearTimeout(this.animEndLatchTimer_);\n    this.animEndLatchTimer_ = setTimeout(() => {\n      this.adapter_.removeClass(this.currentAnimationClass_);\n      this.adapter_.deregisterAnimationEndHandler(this.animEndHandler_);\n    }, numbers.ANIM_END_LATCH_MS);\n  }\n\n  /**\n   * Handles the change event for the checkbox\n   */\n  handleChange() {\n    this.transitionCheckState_();\n  }\n\n  /** @private */\n  installPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (validDescriptor(desc)) {\n        const nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */ ({\n          get: desc.get,\n          set: (state) => {\n            desc.set.call(nativeCb, state);\n            this.transitionCheckState_();\n          },\n          configurable: desc.configurable,\n          enumerable: desc.enumerable,\n        });\n        Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n      }\n    });\n  }\n\n  /** @private */\n  uninstallPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = /** @type {!ObjectPropertyDescriptor} */ (\n        Object.getOwnPropertyDescriptor(cbProto, controlState));\n      if (validDescriptor(desc)) {\n        Object.defineProperty(nativeCb, controlState, desc);\n      }\n    });\n  }\n\n  /** @private */\n  transitionCheckState_() {\n    const nativeCb = this.adapter_.getNativeControl();\n    if (!nativeCb) {\n      return;\n    }\n    const oldState = this.currentCheckState_;\n    const newState = this.determineCheckState_(nativeCb);\n    if (oldState === newState) {\n      return;\n    }\n\n    this.updateAriaChecked_();\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.adapter_.registerAnimationEndHandler(this.animEndHandler_);\n    }\n  }\n\n  /**\n   * @param {!MDCSelectionControlState} nativeCb\n   * @return {string}\n   * @private\n   */\n  determineCheckState_(nativeCb) {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (nativeCb.indeterminate) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  }\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n  getTransitionAnimationClass_(oldState, newState) {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n    case TRANSITION_STATE_INIT:\n      if (newState === TRANSITION_STATE_UNCHECKED) {\n        return '';\n      }\n    // fallthrough\n    case TRANSITION_STATE_UNCHECKED:\n      return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n    case TRANSITION_STATE_CHECKED:\n      return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n    // TRANSITION_STATE_INDETERMINATE\n    default:\n      return newState === TRANSITION_STATE_CHECKED ?\n        ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  updateAriaChecked_() {\n    // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n    if (this.isIndeterminate()) {\n      this.adapter_.setNativeControlAttr(\n        strings.ARIA_CHECKED_ATTR, strings.ARIA_CHECKED_INDETERMINATE_VALUE);\n    } else {\n      this.adapter_.removeNativeControlAttr(strings.ARIA_CHECKED_ATTR);\n    }\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      indeterminate: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\nexport default MDCCheckboxFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Form Field. Provides an interface for managing\n * - event handlers\n * - ripple activation\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCFormFieldAdapter {\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  activateInputRipple() {}\n\n  deactivateInputRipple() {}\n}\n\nexport default MDCFormFieldAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-form-field',\n};\n\n/** @enum {string} */\nconst strings = {\n  LABEL_SELECTOR: '.mdc-form-field > label',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFormFieldAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFormFieldAdapter>}\n */\nclass MDCFormFieldFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCFormFieldAdapter} */\n  static get defaultAdapter() {\n    return {\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      activateInputRipple: () => {},\n      deactivateInputRipple: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCFormFieldFoundation.defaultAdapter, adapter));\n\n    /** @private {!EventListener} */\n    this.clickHandler_ = /** @type {!EventListener} */ (\n      () => this.handleClick_());\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n  }\n\n  /** @private */\n  handleClick_() {\n    this.adapter_.activateInputRipple();\n    requestAnimationFrame(() => this.adapter_.deactivateInputRipple());\n  }\n}\n\nexport default MDCFormFieldFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","import { BasePlugin } from '../base'\r\nimport mdcCheckbox from './mdc-checkbox.vue'\r\n\r\nexport { mdcCheckbox }\r\n\r\nexport default BasePlugin({\r\n  mdcCheckbox\r\n})\r\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n  INTERACTION_EVENT: 'MDCChip:interaction',\n  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n  REMOVAL_EVENT: 'MDCChip:removal',\n  CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKMARK: 'mdc-chip__checkmark',\n  CHIP_EXIT: 'mdc-chip--exit',\n  HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n  LEADING_ICON: 'mdc-chip__icon--leading',\n  TRAILING_ICON: 'mdc-chip__icon--trailing',\n  SELECTED: 'mdc-chip--selected',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipAdapter {\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the leading icon element.\n   * @param {string} className\n   */\n  addClassToLeadingIcon(className) {}\n\n  /**\n   * Removes a class from the leading icon element.\n   * @param {string} className\n   */\n  removeClassFromLeadingIcon(className) {}\n\n  /**\n   * Returns true if target has className, false otherwise.\n   * @param {!EventTarget} target\n   * @param {string} className\n   * @return {boolean}\n   */\n  eventTargetHasClass(target, className) {}\n\n  /**\n   * Emits a custom \"MDCChip:interaction\" event denoting the chip has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyInteraction() {}\n\n  /**\n   * Emits a custom \"MDCChip:trailingIconInteraction\" event denoting the trailing icon has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyTrailingIconInteraction() {}\n\n  /**\n   * Emits a custom event \"MDCChip:removal\" denoting the chip will be removed.\n   */\n  notifyRemoval() {}\n\n  /**\n   * Returns the computed property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getComputedStyleValue(propertyName) {}\n\n  /**\n   * Sets the property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyleProperty(propertyName, value) {}\n}\n\nexport default MDCChipAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCChipAdapter>}\n * @final\n */\nclass MDCChipFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      addClassToLeadingIcon: () => {},\n      removeClassFromLeadingIcon: () => {},\n      eventTargetHasClass: () => {},\n      notifyInteraction: () => {},\n      notifyTrailingIconInteraction: () => {},\n      notifyRemoval: () => {},\n      getComputedStyleValue: () => {},\n      setStyleProperty: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));\n\n    /**\n     * Whether a trailing icon click should immediately trigger exit/removal of the chip.\n     * @private {boolean}\n     * */\n    this.shouldRemoveOnTrailingIconClick_ = true;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isSelected() {\n    return this.adapter_.hasClass(cssClasses.SELECTED);\n  }\n\n  /**\n   * @param {boolean} selected\n   */\n  setSelected(selected) {\n    if (selected) {\n      this.adapter_.addClass(cssClasses.SELECTED);\n    } else {\n      this.adapter_.removeClass(cssClasses.SELECTED);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  getShouldRemoveOnTrailingIconClick() {\n    return this.shouldRemoveOnTrailingIconClick_;\n  }\n\n  /**\n   * @param {boolean} shouldRemove\n   */\n  setShouldRemoveOnTrailingIconClick(shouldRemove) {\n    this.shouldRemoveOnTrailingIconClick_ = shouldRemove;\n  }\n\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n  beginExit() {\n    this.adapter_.addClass(cssClasses.CHIP_EXIT);\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyInteraction();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Handle transition end event on the chip when it is about to be removed.\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHIP_EXIT)) {\n      if (evt.propertyName === 'width') {\n        this.adapter_.notifyRemoval();\n      } else if (evt.propertyName === 'opacity') {\n        // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n        const chipWidth = this.adapter_.getComputedStyleValue('width');\n\n        // On the next frame (once we get the computed width), explicitly set the chip's width\n        // to its current pixel width, so we aren't transitioning out of 'auto'.\n        requestAnimationFrame(() => {\n          this.adapter_.setStyleProperty('width', chipWidth);\n\n          // To mitigate jitter, start transitioning padding and margin before width.\n          this.adapter_.setStyleProperty('padding', '0');\n          this.adapter_.setStyleProperty('margin', '0');\n\n          // On the next frame (once width is explicitly set), transition width to 0.\n          requestAnimationFrame(() => {\n            this.adapter_.setStyleProperty('width', '0');\n          });\n        });\n      }\n      return;\n    }\n\n    // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n    if (evt.propertyName !== 'opacity') {\n      return;\n    }\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.LEADING_ICON) &&\n        this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    } else if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHECKMARK) &&\n               !this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   * @param {!Event} evt\n   */\n  handleTrailingIconInteraction(evt) {\n    evt.stopPropagation();\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyTrailingIconInteraction();\n      if (this.shouldRemoveOnTrailingIconClick_) {\n        this.beginExit();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   detail: {\n *     chip: {foundation: !MDCChipFoundation},\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipInteractionEventType;\n\nexport {MDCChipFoundation, MDCChipInteractionEventType};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHOICE: 'mdc-chip-set--choice',\n  FILTER: 'mdc-chip-set--filter',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line no-unused-vars\nimport {MDCChipInteractionEventType} from '../chip/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip Set.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip Set into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipSetAdapter {\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Removes the chip object from the chip set.\n   * @param {!Object} chip\n   */\n  removeChip(chip) {}\n}\n\nexport default MDCChipSetAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipSetAdapter from './adapter';\n// eslint-disable-next-line no-unused-vars\nimport {MDCChipFoundation, MDCChipInteractionEventType} from '../chip/foundation';\nimport {strings, cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCChipSetAdapter>}\n * @final\n */\nclass MDCChipSetFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipSetAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipSetAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipSetAdapter} */ ({\n      hasClass: () => {},\n      removeChip: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipSetAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));\n\n    /**\n     * The selected chips in the set. Only used for choice chip set or filter chip set.\n     * @private {!Array<!MDCChipFoundation>}\n     */\n    this.selectedChips_ = [];\n  }\n\n  /**\n   * Selects the given chip. Deselects all other chips if the chip set is of the choice variant.\n   * @param {!MDCChipFoundation} chipFoundation\n   */\n  select(chipFoundation) {\n    if (this.adapter_.hasClass(cssClasses.CHOICE)) {\n      this.deselectAll_();\n    }\n    chipFoundation.setSelected(true);\n    this.selectedChips_.push(chipFoundation);\n  }\n\n  /**\n   * Deselects the given chip.\n   * @param {!MDCChipFoundation} chipFoundation\n   */\n  deselect(chipFoundation) {\n    const index = this.selectedChips_.indexOf(chipFoundation);\n    if (index >= 0) {\n      this.selectedChips_.splice(index, 1);\n    }\n    chipFoundation.setSelected(false);\n  }\n\n  /** Deselects all selected chips. */\n  deselectAll_() {\n    this.selectedChips_.forEach((chipFoundation) => {\n      chipFoundation.setSelected(false);\n    });\n    this.selectedChips_.length = 0;\n  }\n\n  /**\n   * Handles a chip interaction event\n   * @param {!MDCChipInteractionEventType} evt\n   * @private\n   */\n  handleChipInteraction(evt) {\n    const chipFoundation = evt.detail.chip.foundation;\n    if (this.adapter_.hasClass(cssClasses.CHOICE) || this.adapter_.hasClass(cssClasses.FILTER)) {\n      if (chipFoundation.isSelected()) {\n        this.deselect(chipFoundation);\n      } else {\n        this.select(chipFoundation);\n      }\n    }\n  }\n\n  /**\n   * Handles the event when a chip is removed.\n   * @param {!MDCChipInteractionEventType} evt\n   * @private\n   */\n  handleChipRemoval(evt) {\n    const {chip} = evt.detail;\n    this.deselect(chip.foundation);\n    this.adapter_.removeChip(chip);\n  }\n}\n\nexport default MDCChipSetFoundation;\n","import { BasePlugin } from '../base'\r\nimport mdcChip from './mdc-chip.vue'\r\nimport mdcChipSet from './mdc-chip-set.vue'\r\n\r\nexport { mdcChip, mdcChipSet }\r\n\r\nexport default BasePlugin({\r\n  mdcChip,\r\n  mdcChipSet\r\n})\r\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  ROOT: 'mdc-dialog',\n  OPEN: 'mdc-dialog--open',\n  ANIMATING: 'mdc-dialog--animating',\n  BACKDROP: 'mdc-dialog__backdrop',\n  SCROLL_LOCK: 'mdc-dialog-scroll-lock',\n  ACCEPT_BTN: 'mdc-dialog__footer__button--accept',\n  CANCEL_BTN: 'mdc-dialog__footer__button--cancel',\n};\n\nconst strings = {\n  OPEN_DIALOG_SELECTOR: '.mdc-dialog--open',\n  DIALOG_SURFACE_SELECTOR: '.mdc-dialog__surface',\n  ACCEPT_SELECTOR: '.mdc-dialog__footer__button--accept',\n  ACCEPT_EVENT: 'MDCDialog:accept',\n  CANCEL_EVENT: 'MDCDialog:cancel',\n};\n\nconst numbers = {\n  DIALOG_ANIMATION_TIME_MS: 120,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCDialogFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      notifyAccept: () => {},\n      notifyCancel: () => {},\n      trapFocusOnSurface: () => {},\n      untrapFocusOnSurface: () => {},\n      isDialog: (/* el: Element */) => /* boolean */ false,\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCDialogFoundation.defaultAdapter, adapter));\n    this.isOpen_ = false;\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.BACKDROP)) {\n        this.cancel(true);\n      }\n    };\n    this.dialogClickHandler_ = (evt) => this.handleDialogClick_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.cancel(true);\n      }\n    };\n\n    this.timerId_ = 0;\n    this.animationTimerEnd_ = (evt) => this.handleAnimationTimerEnd_(evt);\n  };\n\n  destroy() {\n    // Ensure that dialog is cleaned up when destroyed\n    if (this.isOpen_) {\n      this.close();\n    }\n    // Final cleanup of animating class in case the timer has not completed.\n    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    clearTimeout(this.timerId_);\n  }\n\n  open() {\n    this.isOpen_ = true;\n    this.disableScroll_();\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerSurfaceInteractionHandler('click', this.dialogClickHandler_);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n    clearTimeout(this.timerId_);\n    this.timerId_ = setTimeout(this.animationTimerEnd_, MDCDialogFoundation.numbers.DIALOG_ANIMATION_TIME_MS);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);\n  }\n\n  close() {\n    this.isOpen_ = false;\n    this.enableScroll_();\n    this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.adapter_.untrapFocusOnSurface();\n    clearTimeout(this.timerId_);\n    this.timerId_ = setTimeout(this.animationTimerEnd_, MDCDialogFoundation.numbers.DIALOG_ANIMATION_TIME_MS);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  accept(shouldNotify) {\n    if (shouldNotify) {\n      this.adapter_.notifyAccept();\n    }\n\n    this.close();\n  }\n\n  cancel(shouldNotify) {\n    if (shouldNotify) {\n      this.adapter_.notifyCancel();\n    }\n\n    this.close();\n  }\n\n  handleDialogClick_(evt) {\n    const {target} = evt;\n    if (this.adapter_.eventTargetHasClass(target, cssClasses.ACCEPT_BTN)) {\n      this.accept(true);\n    } else if (this.adapter_.eventTargetHasClass(target, cssClasses.CANCEL_BTN)) {\n      this.cancel(true);\n    }\n  }\n\n  handleAnimationTimerEnd_() {\n    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    if (this.isOpen_) {\n      this.adapter_.trapFocusOnSurface();\n    }\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","module.exports = function(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var basicTabbables = [];\n  var orderedTabbables = [];\n\n  // A node is \"available\" if\n  // - it's computed style\n  var isUnavailable = createIsUnavailable(elementDocument);\n\n  var candidateSelectors = [\n    'input',\n    'select',\n    'a[href]',\n    'textarea',\n    'button',\n    '[tabindex]',\n  ];\n\n  var candidates = el.querySelectorAll(candidateSelectors.join(','));\n\n  if (options.includeContainer) {\n    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n    if (\n      candidateSelectors.some(function(candidateSelector) {\n        return matches.call(el, candidateSelector);\n      })\n    ) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var candidate, candidateIndexAttr, candidateIndex;\n  for (var i = 0, l = candidates.length; i < l; i++) {\n    candidate = candidates[i];\n    candidateIndexAttr = parseInt(candidate.getAttribute('tabindex'), 10)\n    candidateIndex = isNaN(candidateIndexAttr) ? candidate.tabIndex : candidateIndexAttr;\n\n    if (\n      candidateIndex < 0\n      || (candidate.tagName === 'INPUT' && candidate.type === 'hidden')\n      || candidate.disabled\n      || isUnavailable(candidate, elementDocument)\n    ) {\n      continue;\n    }\n\n    if (candidateIndex === 0) {\n      basicTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        index: i,\n        tabIndex: candidateIndex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(function(a, b) {\n      return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;\n    })\n    .map(function(a) {\n      return a.node\n    });\n\n  Array.prototype.push.apply(tabbableNodes, basicTabbables);\n\n  return tabbableNodes;\n}\n\nfunction createIsUnavailable(elementDocument) {\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed\n  var isOffCache = [];\n\n  // \"off\" means `display: none;`, as opposed to \"hidden\",\n  // which means `visibility: hidden;`. getComputedStyle\n  // accurately reflects visiblity in context but not\n  // \"off\" state, so we need to recursively check parents.\n\n  function isOff(node, nodeComputedStyle) {\n    if (node === elementDocument.documentElement) return false;\n\n    // Find the cached node (Array.prototype.find not available in IE9)\n    for (var i = 0, length = isOffCache.length; i < length; i++) {\n      if (isOffCache[i][0] === node) return isOffCache[i][1];\n    }\n\n    nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = isOff(node.parentNode);\n    }\n\n    isOffCache.push([node, result]);\n\n    return result;\n  }\n\n  return function isUnavailable(node) {\n    if (node === elementDocument.documentElement) return false;\n\n    var computedStyle = elementDocument.defaultView.getComputedStyle(node);\n\n    if (isOff(node, computedStyle)) return true;\n\n    return computedStyle.visibility === 'hidden';\n  }\n}\n","var tabbable = require('tabbable');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var tabbableNodes = [];\n  var firstTabbableNode = null;\n  var lastTabbableNode = null;\n  var nodeFocusedBeforeActivation = null;\n  var active = false;\n  var paused = false;\n  var tabEvent = null;\n\n  var container = (typeof element === 'string')\n    ? document.querySelector(element)\n    : element;\n\n  var config = userOptions || {};\n  config.returnFocusOnDeactivate = (userOptions && userOptions.returnFocusOnDeactivate !== undefined)\n    ? userOptions.returnFocusOnDeactivate\n    : true;\n  config.escapeDeactivates = (userOptions && userOptions.escapeDeactivates !== undefined)\n    ? userOptions.escapeDeactivates\n    : true;\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause,\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (active) return;\n\n    var defaultedActivateOptions = {\n      onActivate: (activateOptions && activateOptions.onActivate !== undefined)\n        ? activateOptions.onActivate\n        : config.onActivate,\n    };\n\n    active = true;\n    paused = false;\n    nodeFocusedBeforeActivation = document.activeElement;\n\n    if (defaultedActivateOptions.onActivate) {\n      defaultedActivateOptions.onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!active) return;\n\n    var defaultedDeactivateOptions = {\n      returnFocus: (deactivateOptions && deactivateOptions.returnFocus !== undefined)\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate,\n      onDeactivate: (deactivateOptions && deactivateOptions.onDeactivate !== undefined)\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate,\n    };\n\n    removeListeners();\n\n    if (defaultedDeactivateOptions.onDeactivate) {\n      defaultedDeactivateOptions.onDeactivate();\n    }\n\n    if (defaultedDeactivateOptions.returnFocus) {\n      setTimeout(function () {\n        tryFocus(nodeFocusedBeforeActivation);\n      }, 0);\n    }\n\n    active = false;\n    paused = false;\n    return this;\n  }\n\n  function pause() {\n    if (paused || !active) return;\n    paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!paused || !active) return;\n    paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!active) return;\n\n    // There can be only one listening focus trap at a time\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n    listeningFocusTrap = trap;\n\n    updateTabbableNodes();\n    // Ensure that the focused element doesn't capture the event that caused the focus trap activation\n    setTimeout(function () {\n      tryFocus(firstFocusNode());\n    }, 0);\n    document.addEventListener('focus', checkFocus, true);\n    document.addEventListener('click', checkClick, true);\n    document.addEventListener('mousedown', checkPointerDown, true);\n    document.addEventListener('touchstart', checkPointerDown, true);\n    document.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!active || listeningFocusTrap !== trap) return;\n\n    document.removeEventListener('focus', checkFocus, true);\n    document.removeEventListener('click', checkClick, true);\n    document.removeEventListener('mousedown', checkPointerDown, true);\n    document.removeEventListener('touchstart', checkPointerDown, true);\n    document.removeEventListener('keydown', checkKey, true);\n\n    listeningFocusTrap = null;\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = document.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function firstFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(document.activeElement)) {\n      node = document.activeElement;\n    } else {\n      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('You can\\'t have a focus-trap without at least one focusable element');\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event\n  function checkPointerDown(e) {\n    if (config.clickOutsideDeactivates && !container.contains(e.target)) {\n      deactivate({ returnFocus: false });\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function checkFocus(e) {\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    // Checking for a blur method here resolves a Firefox issue (#15)\n    if (typeof e.target.blur === 'function') e.target.blur();\n\n    if (tabEvent) {\n      readjustFocus(tabEvent);\n    }\n  }\n\n  function checkKey(e) {\n    if (e.key === 'Tab' || e.keyCode === 9) {\n      handleTab(e);\n    }\n\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      deactivate();\n    }\n  }\n\n  function handleTab(e) {\n    updateTabbableNodes();\n\n    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {\n      return tabEvent = e;\n    }\n\n    e.preventDefault();\n    var currentFocusIndex = tabbableNodes.indexOf(e.target);\n\n    if (e.shiftKey) {\n      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {\n        return tryFocus(lastTabbableNode);\n      }\n      return tryFocus(tabbableNodes[currentFocusIndex - 1]);\n    }\n\n    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);\n\n    tryFocus(tabbableNodes[currentFocusIndex + 1]);\n  }\n\n  function updateTabbableNodes() {\n    tabbableNodes = tabbable(container);\n    firstTabbableNode = tabbableNodes[0];\n    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];\n  }\n\n  function readjustFocus(e) {\n    if (e.shiftKey) return tryFocus(lastTabbableNode);\n\n    tryFocus(firstTabbableNode);\n  }\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction tryFocus(node) {\n  if (!node || !node.focus) return;\n  if (node === document.activeElement)  return;\n\n  node.focus();\n  if (node.tagName.toLowerCase() === 'input') {\n    node.select();\n  }\n}\n\nmodule.exports = focusTrap;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createFocusTrap from 'focus-trap';\n\nexport function createFocusTrapInstance(surfaceEl, acceptButtonEl, focusTrapFactory = createFocusTrap) {\n  return focusTrapFactory(surfaceEl, {\n    initialFocus: acceptButtonEl,\n    clickOutsideDeactivates: true,\n  });\n}\n","import { BasePlugin } from '../base'\r\nimport mdcDialog from './mdc-dialog.vue'\r\n\r\nexport { mdcDialog }\r\n\r\nexport default BasePlugin({\r\n  mdcDialog\r\n})\r\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const FOCUSABLE_ELEMENTS =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), ' +\n  'button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n\nexport class MDCSlidableDrawerFoundation extends MDCFoundation {\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      hasNecessaryDom: () => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      setTranslateX: (/* value: number | null */) => {},\n      getFocusableElements: () => /* NodeList */ {},\n      saveElementTabState: (/* el: Element */) => {},\n      restoreElementTabState: (/* el: Element */) => {},\n      makeElementUntabbable: (/* el: Element */) => {},\n      notifyOpen: () => {},\n      notifyClose: () => {},\n      isRtl: () => /* boolean */ false,\n      getDrawerWidth: () => /* number */ 0,\n    };\n  }\n\n  constructor(adapter, rootCssClass, animatingCssClass, openCssClass) {\n    super(Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, adapter));\n\n    this.rootCssClass_ = rootCssClass;\n    this.animatingCssClass_ = animatingCssClass;\n    this.openCssClass_ = openCssClass;\n\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n\n    this.inert_ = false;\n\n    this.componentTouchStartHandler_ = (evt) => this.handleTouchStart_(evt);\n    this.componentTouchMoveHandler_ = (evt) => this.handleTouchMove_(evt);\n    this.componentTouchEndHandler_ = (evt) => this.handleTouchEnd_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.close();\n      }\n    };\n  }\n\n  init() {\n    const ROOT = this.rootCssClass_;\n    const OPEN = this.openCssClass_;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    } else {\n      this.detabinate_();\n      this.isOpen_ = false;\n    }\n\n    this.adapter_.registerDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.registerInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.registerInteractionHandler('touchend', this.componentTouchEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.deregisterInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.deregisterInteractionHandler('touchend', this.componentTouchEndHandler_);\n    // Deregister the document keydown handler just in case the component is destroyed while the menu is open.\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n  }\n\n  open() {\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.addClass(this.openCssClass_);\n    this.retabinate_();\n    // Debounce multiple calls\n    if (!this.isOpen_) {\n      this.adapter_.notifyOpen();\n    }\n    this.isOpen_ = true;\n  }\n\n  close() {\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.removeClass(this.openCssClass_);\n    this.detabinate_();\n    // Debounce multiple calls\n    if (this.isOpen_) {\n      this.adapter_.notifyClose();\n    }\n    this.isOpen_ = false;\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   *  Render all children of the drawer inert when it's closed.\n   */\n  detabinate_() {\n    if (this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.saveElementTabState(elements[i]);\n        this.adapter_.makeElementUntabbable(elements[i]);\n      }\n    }\n\n    this.inert_ = true;\n  }\n\n  /**\n   *  Make all children of the drawer tabbable again when it's open.\n   */\n  retabinate_() {\n    if (!this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.restoreElementTabState(elements[i]);\n      }\n    }\n\n    this.inert_ = false;\n  }\n\n  handleTouchStart_(evt) {\n    if (!this.adapter_.hasClass(this.openCssClass_)) {\n      return;\n    }\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.direction_ = this.adapter_.isRtl() ? -1 : 1;\n    this.drawerWidth_ = this.adapter_.getDrawerWidth();\n    this.startX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n    this.currentX_ = this.startX_;\n\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n  }\n\n  handleTouchMove_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.currentX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n  }\n\n  handleTouchEnd_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.prepareForTouchEnd_();\n\n    // Did the user close the drawer by more than 50%?\n    if (Math.abs(this.newPosition_ / this.drawerWidth_) >= 0.5) {\n      this.close();\n    } else {\n      // Triggering an open here means we'll get a nice animation back to the fully open state.\n      this.open();\n    }\n  }\n\n  prepareForTouchEnd_() {\n    cancelAnimationFrame(this.updateRaf_);\n    this.adapter_.setTranslateX(null);\n  }\n\n  updateDrawer_() {\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n    this.adapter_.setTranslateX(this.newPosition_);\n  }\n\n  get newPosition_() {\n    let newPos = null;\n\n    if (this.direction_ === 1) {\n      newPos = Math.min(0, this.currentX_ - this.startX_);\n    } else {\n      newPos = Math.max(0, this.currentX_ - this.startX_);\n    }\n\n    return newPos;\n  }\n\n  isRootTransitioningEventTarget_() {\n    // Classes extending MDCSlidableDrawerFoundation should implement this method to return true or false\n    // if the event target is the root event target currently transitioning.\n    return false;\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.isRootTransitioningEventTarget_(evt.target)) {\n      this.adapter_.removeClass(this.animatingCssClass_);\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n    }\n  };\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--persistent',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--persistent .mdc-drawer__drawer',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCPersistentDrawer:open',\n  CLOSE_EVENT: 'MDCPersistentDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCPersistentDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      isDrawer: () => false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCPersistentDrawerFoundation.defaultAdapter, adapter),\n      MDCPersistentDrawerFoundation.cssClasses.ROOT,\n      MDCPersistentDrawerFoundation.cssClasses.ANIMATING,\n      MDCPersistentDrawerFoundation.cssClasses.OPEN);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TAB_DATA = 'data-mdc-tabindex';\nconst TAB_DATA_HANDLED = 'data-mdc-tabindex-handled';\n\nlet storedTransformPropertyName_;\nlet supportsPassive_;\n\n// Remap touch events to pointer events, if the browser doesn't support touch events.\nexport function remapEvent(eventName, globalObj = window) {\n  if (!('ontouchstart' in globalObj.document)) {\n    switch (eventName) {\n    case 'touchstart':\n      return 'pointerdown';\n    case 'touchmove':\n      return 'pointermove';\n    case 'touchend':\n      return 'pointerup';\n    default:\n      return eventName;\n    }\n  }\n\n  return eventName;\n}\n\n// Choose the correct transform property to use on the current browser.\nexport function getTransformPropertyName(globalObj = window, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : '-webkit-transform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n// Determine whether the current browser supports CSS properties.\nexport function supportsCssCustomProperties(globalObj = window) {\n  if ('CSS' in globalObj) {\n    return globalObj.CSS.supports('(--color: red)');\n  }\n  return false;\n}\n\n// Determine whether the current browser supports passive event listeners, and if so, use them.\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n// Save the tab state for an element.\nexport function saveElementTabState(el) {\n  if (el.hasAttribute('tabindex')) {\n    el.setAttribute(TAB_DATA, el.getAttribute('tabindex'));\n  }\n  el.setAttribute(TAB_DATA_HANDLED, true);\n}\n\n// Restore the tab state for an element, if it was saved.\nexport function restoreElementTabState(el) {\n  // Only modify elements we've already handled, in case anything was dynamically added since we saved state.\n  if (el.hasAttribute(TAB_DATA_HANDLED)) {\n    if (el.hasAttribute(TAB_DATA)) {\n      el.setAttribute('tabindex', el.getAttribute(TAB_DATA));\n      el.removeAttribute(TAB_DATA);\n    } else {\n      el.removeAttribute('tabindex');\n    }\n    el.removeAttribute(TAB_DATA_HANDLED);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--temporary',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n  SCROLL_LOCK: 'mdc-drawer-scroll-lock',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--temporary .mdc-drawer__drawer',\n  OPACITY_VAR_NAME: '--mdc-temporary-drawer-opacity',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCTemporaryDrawer:open',\n  CLOSE_EVENT: 'MDCTemporaryDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTemporaryDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      isDrawer: () => false,\n      updateCssVariable: (/* value: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCTemporaryDrawerFoundation.defaultAdapter, adapter),\n      MDCTemporaryDrawerFoundation.cssClasses.ROOT,\n      MDCTemporaryDrawerFoundation.cssClasses.ANIMATING,\n      MDCTemporaryDrawerFoundation.cssClasses.OPEN);\n\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.ROOT)) {\n        this.close(true);\n      }\n    };\n  }\n\n  init() {\n    super.init();\n\n    // Make browser aware of custom property being used in this element.\n    // Workaround for certain types of hard-to-reproduce heisenbugs.\n    this.adapter_.updateCssVariable(0);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.enableScroll_();\n  }\n\n  open() {\n    this.disableScroll_();\n    // Make sure custom property values are cleared before starting.\n    this.adapter_.updateCssVariable('');\n\n    super.open();\n  }\n\n  close() {\n    // Make sure custom property values are cleared before making any changes.\n    this.adapter_.updateCssVariable('');\n\n    super.close();\n  }\n\n  prepareForTouchEnd_() {\n    super.prepareForTouchEnd_();\n\n    this.adapter_.updateCssVariable('');\n  }\n\n  updateDrawer_() {\n    super.updateDrawer_();\n\n    const newOpacity = Math.max(0, 1 + this.direction_ * (this.newPosition_ / this.drawerWidth_));\n    this.adapter_.updateCssVariable(newOpacity);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n\n  handleTransitionEnd_(evt) {\n    super.handleTransitionEnd_(evt);\n    if (!this.isOpen_) {\n      this.enableScroll_();\n    }\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","import { BasePlugin } from '../base'\r\nimport mdcDrawer from './mdc-drawer.vue'\r\nimport mdcDrawerLayout from './mdc-drawer-layout.vue'\r\nimport mdcDrawerHeader from './mdc-drawer-header.vue'\r\nimport mdcDrawerList from './mdc-drawer-list.vue'\r\nimport mdcDrawerItem from './mdc-drawer-item.vue'\r\nimport mdcDrawerDivider from './mdc-drawer-divider.vue'\r\n\r\nexport {\r\n  mdcDrawer,\r\n  mdcDrawerLayout,\r\n  mdcDrawerHeader,\r\n  mdcDrawerList,\r\n  mdcDrawerItem,\r\n  mdcDrawerDivider\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcDrawer,\r\n  mdcDrawerLayout,\r\n  mdcDrawerHeader,\r\n  mdcDrawerList,\r\n  mdcDrawerItem,\r\n  mdcDrawerDivider\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcElevation from './mdc-elevation.vue'\r\n\r\nexport { mdcElevation }\r\n\r\nexport default BasePlugin({\r\n  mdcElevation\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcFAB from './mdc-fab.vue'\r\n\r\nexport { mdcFAB }\r\n\r\nexport default BasePlugin({\r\n  mdcFAB\r\n})\r\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const strings = {\n  TILES_SELECTOR: '.mdc-grid-list__tiles',\n  TILE_SELECTOR: '.mdc-grid-tile',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {strings} from './constants';\n\nexport default class MDCGridListFoundation extends MDCFoundation {\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      getOffsetWidth: () => /* number */ 0,\n      getNumberOfTiles: () => /* number */ 0,\n      getOffsetWidthForTileAtIndex: (/* index: number */) => /* number */ 0,\n      setStyleForTilesElement: (/* property: string, value: string */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n    };\n  }\n  constructor(adapter) {\n    super(Object.assign(MDCGridListFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.alignCenter();\n    this.resizeFrame_ = 0;\n  }\n  init() {\n    this.alignCenter();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n  alignCenter() {\n    if (this.resizeFrame_ !== 0) {\n      cancelAnimationFrame(this.resizeFrame_);\n    }\n    this.resizeFrame_ = requestAnimationFrame(() => {\n      this.alignCenter_();\n      this.resizeFrame_ = 0;\n    });\n  }\n  alignCenter_() {\n    if (this.adapter_.getNumberOfTiles() == 0) {\n      return;\n    }\n    const gridWidth = this.adapter_.getOffsetWidth();\n    const itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);\n    const tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);\n    this.adapter_.setStyleForTilesElement('width', `${tilesWidth}px`);\n  }\n}\n","import { BasePlugin } from '../base'\r\nimport mdcGridList from './mdc-grid-list.vue'\r\nimport mdcGridTile from './mdc-grid-tile.vue'\r\n\r\nexport { mdcGridList, mdcGridTile }\r\n\r\nexport default BasePlugin({\r\n  mdcGridList,\r\n  mdcGridTile\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcIcon from './mdc-icon.vue'\r\n\r\nexport { mdcIcon }\r\n\r\nexport default BasePlugin({\r\n  mdcIcon\r\n})\r\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCIconToggleAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {string} text */\n  setText(text) {}\n\n  /** @return {number} */\n  getTabIndex() {}\n\n  /** @param {number} tabIndex */\n  setTabIndex(tabIndex) {}\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getAttr(name) {}\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttr(name, value) {}\n\n  /** @param {string} name */\n  rmAttr(name) {}\n\n  /** @param {!IconToggleEvent} evtData */\n  notifyChange(evtData) {}\n}\n\n/**\n * @typedef {{\n *   isOn: boolean,\n * }}\n */\nlet IconToggleEvent;\n\nexport {MDCIconToggleAdapter, IconToggleEvent};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconToggleAdapter, IconToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\nclass MDCIconToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      setText: (/* text: string */) => {},\n      getTabIndex: () => /* number */ 0,\n      setTabIndex: (/* tabIndex: number */) => {},\n      getAttr: (/* name: string */) => /* string */ '',\n      setAttr: (/* name: string, value: string */) => {},\n      rmAttr: (/* name: string */) => {},\n      notifyChange: (/* evtData: IconToggleEvent */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.on_ = false;\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n\n    /** @private {number} */\n    this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    this.toggleOffData_ = null;\n\n    this.clickHandler_ = /** @private {!EventListener} */ (\n      () => this.toggleFromEvt_());\n\n    /** @private {boolean} */\n    this.isHandlingKeydown_ = false;\n\n    this.keydownHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    });\n\n    this.keyupHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = false;\n        this.toggleFromEvt_();\n      }\n    });\n  }\n\n  init() {\n    this.refreshToggleData();\n    this.savedTabIndex_ = this.adapter_.getTabIndex();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  refreshToggleData() {\n    const {DATA_TOGGLE_ON, DATA_TOGGLE_OFF} = MDCIconToggleFoundation.strings;\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  /** @private */\n  toggleFromEvt_() {\n    this.toggle();\n    const {on_: isOn} = this;\n    this.adapter_.notifyChange(/** @type {!IconToggleEvent} */ ({isOn}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.on_;\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.on_) {\n    this.on_ = isOn;\n\n    const {ARIA_LABEL, ARIA_PRESSED} = MDCIconToggleFoundation.strings;\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    const {cssClass: classToRemove} =\n        this.on_ ? this.toggleOffData_ : this.toggleOnData_;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    const {content, label, cssClass} = this.on_ ? this.toggleOnData_ : this.toggleOffData_;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  }\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n  parseJsonDataAttr_(dataAttr) {\n    const val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return /** @type {!IconToggleState} */ (JSON.parse(val));\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} isDisabled */\n  setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    const {DISABLED} = MDCIconToggleFoundation.cssClasses;\n    const {ARIA_DISABLED} = MDCIconToggleFoundation.strings;\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {boolean} */\n  isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  }\n}\n\n/**\n * @typedef {{\n *   key: string,\n *   keyCode: number\n * }}\n */\nlet KeyboardKey;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n\n/** @record */\nclass IconToggleState {}\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\nexport default MDCIconToggleFoundation;\n","import { BasePlugin } from '../base'\r\nimport mdcIConToggle from './mdc-icon-toggle.vue'\r\n\r\nexport { mdcIConToggle }\r\n\r\nexport default BasePlugin({\r\n  mdcIConToggle\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcLayoutApp from './mdc-layout-app.vue'\r\n\r\nexport { mdcLayoutApp }\r\n\r\nexport default BasePlugin({\r\n  mdcLayoutApp\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcLayoutGrid from './mdc-layout-grid.vue'\r\nimport mdcLayoutCell from './mdc-layout-cell.vue'\r\nimport mdcLayoutInnerGrid from './mdc-layout-inner-grid.vue'\r\n\r\nexport { mdcLayoutGrid, mdcLayoutCell, mdcLayoutInnerGrid }\r\n\r\nexport default BasePlugin({\r\n  mdcLayoutGrid,\r\n  mdcLayoutCell,\r\n  mdcLayoutInnerGrid\r\n})\r\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  CLOSED_CLASS: 'mdc-linear-progress--closed',\n  INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',\n  REVERSED_CLASS: 'mdc-linear-progress--reversed',\n};\n\nexport const strings = {\n  PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',\n  BUFFER_SELECTOR: '.mdc-linear-progress__buffer',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {transformStyleProperties} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCLinearProgressFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      getPrimaryBar: () => /* el: Element */ {},\n      getBuffer: () => /* el: Element */ {},\n      hasClass: (/* className: string */) => false,\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* el: Element, styleProperty: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCLinearProgressFoundation.defaultAdapter, adapter));\n  }\n\n  init() {\n    this.determinate_ = !this.adapter_.hasClass(cssClasses.INDETERMINATE_CLASS);\n    this.reverse_ = this.adapter_.hasClass(cssClasses.REVERSED_CLASS);\n    this.progress_ = 0;\n  }\n\n  setDeterminate(isDeterminate) {\n    this.determinate_ = isDeterminate;\n    if (this.determinate_) {\n      this.adapter_.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);\n    } else {\n      this.adapter_.addClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), 1);\n      this.setScale_(this.adapter_.getBuffer(), 1);\n    }\n  }\n\n  setProgress(value) {\n    this.progress_ = value;\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getPrimaryBar(), value);\n    }\n  }\n\n  setBuffer(value) {\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getBuffer(), value);\n    }\n  }\n\n  setReverse(isReversed) {\n    this.reverse_ = isReversed;\n    if (this.reverse_) {\n      this.adapter_.addClass(cssClasses.REVERSED_CLASS);\n    } else {\n      this.adapter_.removeClass(cssClasses.REVERSED_CLASS);\n    }\n  }\n\n  open() {\n    this.adapter_.removeClass(cssClasses.CLOSED_CLASS);\n  }\n\n  close() {\n    this.adapter_.addClass(cssClasses.CLOSED_CLASS);\n  }\n\n  setScale_(el, scaleValue) {\n    const value = 'scaleX(' + scaleValue + ')';\n    transformStyleProperties.forEach((transformStyleProperty) => {\n      this.adapter_.setStyle(el, transformStyleProperty, value);\n    });\n  }\n}\n","import { BasePlugin } from '../base'\r\nimport mdcLinearProgress from './mdc-linear-progress.vue'\r\n\r\nexport { mdcLinearProgress }\r\n\r\nexport default BasePlugin({\r\n  mdcLinearProgress\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcList from './mdc-list.vue'\r\nimport mdcListItem from './mdc-list-item.vue'\r\nimport mdcListDivider from './mdc-list-divider.vue'\r\nimport mdcListGroup from './mdc-list-group.vue'\r\nimport mdcListGroupHeader from './mdc-list-group-header.vue'\r\nimport mdcListGroupDivider from './mdc-list-group-divider.vue'\r\n\r\nexport {\r\n  mdcList,\r\n  mdcListItem,\r\n  mdcListDivider,\r\n  mdcListGroup,\r\n  mdcListGroupHeader,\r\n  mdcListGroupDivider\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcList,\r\n  mdcListItem,\r\n  mdcListDivider,\r\n  mdcListGroup,\r\n  mdcListGroupHeader,\r\n  mdcListGroupDivider\r\n})\r\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  OPEN: 'mdc-menu--open',\n  ANIMATING_OPEN: 'mdc-menu--animating-open',\n  ANIMATING_CLOSED: 'mdc-menu--animating-closed',\n  SELECTED_LIST_ITEM: 'mdc-list-item--selected',\n};\n\n/** @enum {string} */\nconst strings = {\n  ITEMS_SELECTOR: '.mdc-menu__items',\n  SELECTED_EVENT: 'MDCMenu:selected',\n  CANCEL_EVENT: 'MDCMenu:cancel',\n  ARIA_DISABLED_ATTR: 'aria-disabled',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Amount of time to wait before triggering a selected event on the menu. Note that this time\n  // will most likely be bumped up once interactive lists are supported to allow for the ripple to\n  // animate before closing the menu\n  SELECTED_TRIGGER_DELAY: 50,\n  // Total duration of menu open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_WIDTH_RATIO: 0.67,\n  // Ratio of vertical offset to menu height for switching from corner to mid-way origin positioning.\n  OFFSET_TO_MENU_HEIGHT_RATIO: 0.1,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Menu. Provides an interface for managing\n * - classes\n * - dom\n * - focus\n * - position\n * - dimensions\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCMenuAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /** @return {boolean} */\n  hasNecessaryDom() {}\n\n  /**\n   * @param {EventTarget} target\n   * @param {string} attributeName\n   * @return {string}\n   */\n  getAttributeForEventTarget(target, attributeName) {}\n\n  /** @return {{ width: number, height: number }} */\n  getInnerDimensions() {}\n\n  /** @return {boolean} */\n  hasAnchor() {}\n\n  /** @return {{width: number, height: number, top: number, right: number, bottom: number, left: number}} */\n  getAnchorDimensions() {}\n\n  /** @return {{ width: number, height: number }} */\n  getWindowDimensions() {}\n\n  /** @return {number} */\n  getNumberOfItems() {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerBodyClickHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterBodyClickHandler(handler) {}\n\n  /**\n   * @param {EventTarget} target\n   * @return {number}\n   */\n  getIndexForEventTarget(target) {}\n\n  /** @param {{index: number}} evtData */\n  notifySelected(evtData) {}\n\n  notifyCancel() {}\n\n  saveFocus() {}\n\n  restoreFocus() {}\n\n  /** @return {boolean} */\n  isFocused() {}\n\n  focus() {}\n\n  /** @return {number} */\n  getFocusedItemIndex() /* number */ {}\n\n  /** @param {number} index */\n  focusItemAtIndex(index) {}\n\n  /** @return {boolean} */\n  isRtl() {}\n\n  /** @param {string} origin */\n  setTransformOrigin(origin) {}\n\n  /** @param {{\n  *   top: (string|undefined),\n  *   right: (string|undefined),\n  *   bottom: (string|undefined),\n  *   left: (string|undefined)\n  * }} position */\n  setPosition(position) {}\n\n  /** @param {string} height */\n  setMaxHeight(height) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttrForOptionAtIndex(index, attr, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   */\n  rmAttrForOptionAtIndex(index, attr) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForOptionAtIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  rmClassForOptionAtIndex(index, className) {}\n}\n\nexport {MDCMenuAdapter};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   menuHeight: number,\n *   menuWidth: number,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasNecessaryDom: () => false,\n      getAttributeForEventTarget: () => {},\n      getInnerDimensions: () => ({}),\n      hasAnchor: () => false,\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getNumberOfItems: () => 0,\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      registerBodyClickHandler: () => {},\n      deregisterBodyClickHandler: () => {},\n      getIndexForEventTarget: () => 0,\n      notifySelected: () => {},\n      notifyCancel: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFocused: () => false,\n      focus: () => {},\n      getFocusedItemIndex: () => -1,\n      focusItemAtIndex: () => {},\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      setPosition: () => {},\n      setMaxHeight: () => {},\n      setAttrForOptionAtIndex: () => {},\n      rmAttrForOptionAtIndex: () => {},\n      addClassForOptionAtIndex: () => {},\n      rmClassForOptionAtIndex: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event)} */\n    this.clickHandler_ = (evt) => this.handlePossibleSelected_(evt);\n    /** @private {function(!Event)} */\n    this.keydownHandler_ = (evt) => this.handleKeyboardDown_(evt);\n    /** @private {function(!Event)} */\n    this.keyupHandler_ = (evt) => this.handleKeyboardUp_(evt);\n    /** @private {function(!Event)} */\n    this.documentClickHandler_ = (evt) => this.handleDocumentClick_(evt);\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.selectedTriggerTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {number} */\n    this.itemHeight_;\n    /** @private {Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {number} */\n    this.selectedIndex_ = -1;\n    /** @private {boolean} */\n    this.rememberSelection_ = false;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n\n    // A keyup event on the menu needs to have a corresponding keydown\n    // event on the menu. If the user opens the menu with a keydown event on a\n    // button, the menu will only get the key up event causing buggy behavior with selected elements.\n    /** @private {boolean} */\n    this.keyDownWithinMenu_ = false;\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    clearTimeout(this.selectedTriggerTimerId_);\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin 4-plet of margins from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /** @param {boolean} rememberSelection */\n  setRememberSelection(rememberSelection) {\n    this.rememberSelection_ = rememberSelection;\n    this.setSelectedIndex(-1);\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * @param {?number} focusIndex\n   * @private\n   */\n  focusOnOpen_(focusIndex) {\n    if (focusIndex === null) {\n      // If this instance of MDCMenu remembers selections, and the user has\n      // made a selection, then focus the last selected item\n      if (this.rememberSelection_ && this.selectedIndex_ >= 0) {\n        this.adapter_.focusItemAtIndex(this.selectedIndex_);\n        return;\n      }\n\n      this.adapter_.focus();\n      // If that doesn't work, focus first item instead.\n      if (!this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      }\n    } else {\n      this.adapter_.focusItemAtIndex(focusIndex);\n    }\n  }\n\n  /**\n   * Handle clicks and cancel the menu if not a child list-item\n   * @param {!Event} evt\n   * @private\n   */\n  handleDocumentClick_(evt) {\n    let el = evt.target;\n\n    while (el && el !== document.documentElement) {\n      if (this.adapter_.getIndexForEventTarget(el) !== -1) {\n        return;\n      }\n      el = el.parentNode;\n    }\n\n    this.adapter_.notifyCancel();\n    this.close(evt);\n  };\n\n  /**\n   * Handle keys that we want to repeat on hold (tab and arrows).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardDown_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key, shiftKey} = evt;\n    const isTab = key === 'Tab' || keyCode === 9;\n    const isArrowUp = key === 'ArrowUp' || keyCode === 38;\n    const isArrowDown = key === 'ArrowDown' || keyCode === 40;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    // The menu needs to know if the keydown event was triggered on the menu\n    this.keyDownWithinMenu_ = isEnter || isSpace;\n\n    const focusedItemIndex = this.adapter_.getFocusedItemIndex();\n    const lastItemIndex = this.adapter_.getNumberOfItems() - 1;\n\n    if (shiftKey && isTab && focusedItemIndex === 0) {\n      this.adapter_.focusItemAtIndex(lastItemIndex);\n      evt.preventDefault();\n      return false;\n    }\n\n    if (!shiftKey && isTab && focusedItemIndex === lastItemIndex) {\n      this.adapter_.focusItemAtIndex(0);\n      evt.preventDefault();\n      return false;\n    }\n\n    // Ensure Arrow{Up,Down} and space do not cause inadvertent scrolling\n    if (isArrowUp || isArrowDown || isSpace) {\n      evt.preventDefault();\n    }\n\n    if (isArrowUp) {\n      if (focusedItemIndex === 0 || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(lastItemIndex);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex - 1);\n      }\n    } else if (isArrowDown) {\n      if (focusedItemIndex === lastItemIndex || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex + 1);\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle keys that we don't want to repeat on hold (Enter, Space, Escape).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardUp_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key} = evt;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEscape = key === 'Escape' || keyCode === 27;\n\n    if (isEnter || isSpace) {\n      // If the keydown event didn't occur on the menu, then it should\n      // disregard the possible selected event.\n      if (this.keyDownWithinMenu_) {\n        this.handlePossibleSelected_(evt);\n      }\n      this.keyDownWithinMenu_ = false;\n    }\n\n    if (isEscape) {\n      this.adapter_.notifyCancel();\n      this.close();\n    }\n\n    return true;\n  }\n\n  /**\n   * @param {!Event} evt\n   * @private\n   */\n  handlePossibleSelected_(evt) {\n    if (this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true') {\n      return;\n    }\n    const targetIndex = this.adapter_.getIndexForEventTarget(evt.target);\n    if (targetIndex < 0) {\n      return;\n    }\n    // Debounce multiple selections\n    if (this.selectedTriggerTimerId_) {\n      return;\n    }\n    this.selectedTriggerTimerId_ = setTimeout(() => {\n      this.selectedTriggerTimerId_ = 0;\n      this.close();\n      if (this.rememberSelection_) {\n        this.setSelectedIndex(targetIndex);\n      }\n      this.adapter_.notifySelected({index: targetIndex});\n    }, numbers.SELECTED_TRIGGER_DELAY);\n  }\n\n  /**\n   * @return {AutoLayoutMeasurements} Measurements used to position menu popup.\n   */\n  getAutoLayoutMeasurements_() {\n    const anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n\n    return {\n      viewport: viewport,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      menuHeight: this.dimensions_.height,\n      menuWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu.\n   * @return {Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, menuHeight, menuWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = menuHeight - availableTop;\n    const bottomOverflow = menuHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = menuWidth - availableLeft;\n    const rightOverflow = menuWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return corner;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Horizontal offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    let x = 0;\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n      x = rightOffset;\n    } else {\n      const leftOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n      x = leftOffset;\n    }\n    return x;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Vertical offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {viewport, viewportDistance, anchorHeight, menuHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuFoundation.numbers;\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const canOverlapVertically = !avoidVerticalOverlap;\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to bottom\n      // anchor corner. Bottom margin is ignored in such cases.\n      if (canOverlapVertically && menuHeight > viewportDistance.top + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.top + anchorHeight));\n      }\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to top\n      // anchor corners. Top margin is ignored in that case.\n      if (canOverlapVertically && menuHeight > viewportDistance.bottom + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.bottom + anchorHeight));\n      }\n    }\n    return y;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Maximum height of the menu, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n\n    // When maximum height is not specified, it is handled from css.\n    if (this.anchorCorner_ & CornerBit.BOTTOM) {\n      if (isBottomAligned) {\n        maxHeight = viewportDistance.top + this.anchorMargin_.top;\n      } else {\n        maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    if (!this.adapter_.hasAnchor()) {\n      return;\n    }\n\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuHeight = this.getMenuMaxHeight_(corner);\n    let verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    const position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset + 'px' : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset + 'px' : '0',\n    };\n    const {anchorWidth, menuHeight, menuWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu, otherwise keep corner.\n    if (anchorWidth / menuWidth > numbers.ANCHOR_TO_MENU_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // Adjust vertical origin when menu is positioned with significant offset from anchor. This is done so that\n    // scale animation is \"anchored\" on the anchor.\n    if (!(this.anchorCorner_ & CornerBit.BOTTOM) &&\n        Math.abs(verticalOffset / menuHeight) > numbers.OFFSET_TO_MENU_HEIGHT_RATIO) {\n      const verticalOffsetPercent = Math.abs(verticalOffset / menuHeight) * 100;\n      const originPercent = (corner & CornerBit.BOTTOM) ? 100 - verticalOffsetPercent : verticalOffsetPercent;\n      verticalAlignment = Math.round(originPercent * 100) / 100 + '%';\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuHeight ? maxMenuHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Open the menu.\n   * @param {{focusIndex: ?number}=} options\n   */\n  open({focusIndex = null} = {}) {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.OPEN);\n      this.focusOnOpen_(focusIndex);\n      this.adapter_.registerBodyClickHandler(this.documentClickHandler_);\n      if (!this.quickOpen_) {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu.\n   * @param {Event=} evt\n   */\n  close(evt = null) {\n    const targetIsDisabled = evt ?\n      this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true' :\n      false;\n\n    if (targetIsDisabled) {\n      return;\n    }\n\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuFoundation.cssClasses.OPEN);\n      if (!this.quickOpen_) {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n    this.isOpen_ = false;\n    this.adapter_.restoreFocus();\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /** @return {number} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /**\n   * @param {number} index Index of the item to set as selected.\n   */\n  setSelectedIndex(index) {\n    if (index === this.selectedIndex_) {\n      return;\n    }\n\n    const prevSelectedIndex = this.selectedIndex_;\n    if (prevSelectedIndex >= 0) {\n      this.adapter_.rmAttrForOptionAtIndex(prevSelectedIndex, 'aria-selected');\n      this.adapter_.rmClassForOptionAtIndex(prevSelectedIndex, cssClasses.SELECTED_LIST_ITEM);\n    }\n\n    this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfItems() ? index : -1;\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');\n      this.adapter_.addClassForOptionAtIndex(this.selectedIndex_, cssClasses.SELECTED_LIST_ITEM);\n    }\n  }\n}\n\nexport {MDCMenuFoundation, AnchorMargin};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n/**\n * Clamps a value between the minimum and the maximum, returning the clamped value.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(value, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, value));\n}\n\n\n/**\n * Returns the easing value to apply at time t, for a given cubic bezier curve.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Parameters are as follows:\n * - time: The current time in the animation, scaled between 0 and 1.\n * - x1: The x value of control point P1.\n * - y1: The y value of control point P1.\n * - x2: The x value of control point P2.\n * - y2: The y value of control point P2.\n * @param {number} time\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nfunction bezierProgress(time, x1, y1, x2, y2) {\n  return getBezierCoordinate_(solvePositionFromXValue_(time, x1, x2), y1, y2);\n}\n\n/**\n * Compute a single coordinate at a position point between 0 and 1.\n * c1 and c2 are the matching coordinate on control points P1 and P2, respectively.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} t\n * @param {number} c1\n * @param {number} c2\n * @return {number}\n */\nfunction getBezierCoordinate_(t, c1, c2) {\n  // Special case start and end.\n  if (t === 0 || t === 1) {\n    return t;\n  }\n\n  // Step one - from 4 points to 3\n  let ic0 = t * c1;\n  let ic1 = c1 + t * (c2 - c1);\n  const ic2 = c2 + t * (1 - c2);\n\n  // Step two - from 3 points to 2\n  ic0 += t * (ic1 - ic0);\n  ic1 += t * (ic2 - ic1);\n\n  // Final step - last point\n  return ic0 + t * (ic1 - ic0);\n}\n\n/**\n * Project a point onto the Bezier curve, from a given X. Calculates the position t along the curve.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} xVal\n * @param {number} x1\n * @param {number} x2\n * @return {number}\n */\nfunction solvePositionFromXValue_(xVal, x1, x2) {\n  const EPSILON = 1e-6;\n  const MAX_ITERATIONS = 8;\n\n  if (xVal <= 0) {\n    return 0;\n  } else if (xVal >= 1) {\n    return 1;\n  }\n\n  // Initial estimate of t using linear interpolation.\n  let t = xVal;\n\n  // Try gradient descent to solve for t. If it works, it is very fast.\n  let tMin = 0;\n  let tMax = 1;\n  let value = 0;\n  for (let i = 0; i < MAX_ITERATIONS; i++) {\n    value = getBezierCoordinate_(t, x1, x2);\n    const derivative = (getBezierCoordinate_(t + EPSILON, x1, x2) - value) / EPSILON;\n    if (Math.abs(value - xVal) < EPSILON) {\n      return t;\n    } else if (Math.abs(derivative) < EPSILON) {\n      break;\n    } else {\n      if (value < xVal) {\n        tMin = t;\n      } else {\n        tMax = t;\n      }\n      t -= (value - xVal) / derivative;\n    }\n  }\n\n  // If the gradient descent got stuck in a local minimum, e.g. because\n  // the derivative was close to 0, use a Dichotomy refinement instead.\n  // We limit the number of interations to 8.\n  for (let i = 0; Math.abs(value - xVal) > EPSILON && i < MAX_ITERATIONS; i++) {\n    if (value < xVal) {\n      tMin = t;\n      t = (t + tMax) / 2;\n    } else {\n      tMax = t;\n      t = (t + tMin) / 2;\n    }\n    value = getBezierCoordinate_(t, x1, x2);\n  }\n  return t;\n}\n\nexport {getTransformPropertyName, clamp, bezierProgress};\n","import { BasePlugin } from '../base'\r\nimport mdcMenu from './mdc-menu.vue'\r\nimport mdcMenuItem from './mdc-menu-item.vue'\r\nimport mdcMenuDivider from './mdc-menu-divider.vue'\r\nimport mdcMenuAnchor from './mdc-menu-anchor.vue'\r\n\r\nexport { mdcMenu, mdcMenuItem, mdcMenuDivider, mdcMenuAnchor }\r\n\r\nexport default BasePlugin({\r\n  mdcMenu,\r\n  mdcMenuItem,\r\n  mdcMenuDivider,\r\n  mdcMenuAnchor\r\n})\r\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-radio',\n  DISABLED: 'mdc-radio--disabled',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Radio. Provides an interface for managing\n * - classes\n * - dom\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRadioAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n}\n\nexport default MDCRadioAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCRadioAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCRadioAdapter>}\n */\nclass MDCRadioFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCRadioAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCRadioAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n    });\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    const {DISABLED} = MDCRadioFoundation.cssClasses;\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\nexport default MDCRadioFoundation;\n","import { BasePlugin } from '../base'\r\nimport mdcRadio from './mdc-radio.vue'\r\n\r\nexport { mdcRadio }\r\n\r\nexport default BasePlugin({\r\n  mdcRadio\r\n})\r\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  OUTLINED: 'mdc-select--outlined',\n};\n\n/** @enum {string} */\nconst strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCSelectAdapter {\n  /**\n   * Adds class to root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Activates the bottom line, showing a focused state.\n   */\n  activateBottomLine() {}\n\n  /**\n   * Deactivates the bottom line.\n   */\n  deactivateBottomLine() {}\n\n  /**\n   * Returns the selected value of the select element.\n   * @return {string}\n   */\n  getValue() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Floats label determined based off of the shouldFloat argument.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns width of label in pixels, if the label exists.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Updates SVG Path and outline element based on the\n   * label element width and RTL context, if the outline exists.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  notchOutline(labelWidth, isRtl) {}\n\n  /**\n   * Closes notch in outline element, if the outline exists.\n   */\n  closeOutline() {}\n}\n\nexport default MDCSelectAdapter;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n/* eslint-disable no-unused-vars */\nimport MDCSelectAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectAdapter>}\n * @final\n */\nclass MDCSelectFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => false,\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      getValue: () => {},\n      isRtl: () => false,\n      hasLabel: () => false,\n      floatLabel: (/* value: boolean */) => {},\n      getLabelWidth: () => {},\n      hasOutline: () => false,\n      notchOutline: (/* labelWidth: number, isRtl: boolean */) => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Updates the styles of the select to show the disasbled state.\n   * @param {boolean} disabled\n   */\n  updateDisabledStyle(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /**\n   * Handles value changes, via change event or programmatic updates.\n   */\n  handleChange() {\n    const optionHasValue = this.adapter_.getValue().length > 0;\n    this.adapter_.floatLabel(optionHasValue);\n    this.notchOutline(optionHasValue);\n  }\n\n  /**\n   * Handles focus events from root element.\n   */\n  handleFocus() {\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n  }\n\n  /**\n   * Handles blur events from root element.\n   */\n  handleBlur() {\n    this.handleChange();\n    this.adapter_.deactivateBottomLine();\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const labelScale = numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n}\n\nexport default MDCSelectFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","import { BasePlugin } from '../base'\r\nimport mdcSelect from './mdc-select.vue'\r\n\r\nexport { mdcSelect }\r\n\r\nexport default BasePlugin({\r\n  mdcSelect\r\n})\r\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-slider--active',\n  DISABLED: 'mdc-slider--disabled',\n  DISCRETE: 'mdc-slider--discrete',\n  FOCUS: 'mdc-slider--focus',\n  IN_TRANSIT: 'mdc-slider--in-transit',\n  IS_DISCRETE: 'mdc-slider--discrete',\n  HAS_TRACK_MARKER: 'mdc-slider--display-markers',\n};\n\n/** @enum {string} */\nconst strings = {\n  TRACK_SELECTOR: '.mdc-slider__track',\n  TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',\n  LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',\n  THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',\n  PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',\n  ARIA_VALUEMIN: 'aria-valuemin',\n  ARIA_VALUEMAX: 'aria-valuemax',\n  ARIA_VALUENOW: 'aria-valuenow',\n  ARIA_DISABLED: 'aria-disabled',\n  STEP_DATA_ATTR: 'data-step',\n  CHANGE_EVENT: 'MDCSlider:change',\n  INPUT_EVENT: 'MDCSlider:input',\n};\n\n/** @enum {number} */\nconst numbers = {\n  PAGE_FACTOR: 4,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n *you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssClasses, strings, numbers} from './constants';\nimport MDCSliderAdapter from './adapter';\n\nimport {getCorrectEventName, getCorrectPropertyName} from '@material/animation/index';\nimport MDCFoundation from '@material/base/foundation';\n\n/** @enum {string} */\nconst KEY_IDS = {\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  HOME: 'Home',\n  END: 'End',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n};\n\n/** @enum {string} */\nconst MOVE_EVENT_MAP = {\n  'mousedown': 'mousemove',\n  'touchstart': 'touchmove',\n  'pointerdown': 'pointermove',\n};\n\nconst DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];\nconst UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];\n\n/**\n * @extends {MDCFoundation<!MDCSliderAdapter>}\n */\nclass MDCSliderFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCSliderAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSliderAdapter} */ ({\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getAttribute: (/* name: string */) => /* string|null */ null,\n      setAttribute: (/* name: string, value: string */) => {},\n      removeAttribute: (/* name: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ ({\n        top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0,\n      }),\n      getTabIndex: () => /* number */ 0,\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      notifyInput: () => {},\n      notifyChange: () => {},\n      setThumbContainerStyleProperty: (/* propertyName: string, value: string */) => {},\n      setTrackStyleProperty: (/* propertyName: string, value: string */) => {},\n      setMarkerValue: (/* value: number */) => {},\n      appendTrackMarkers: (/* numMarkers: number */) => {},\n      removeTrackMarkers: () => {},\n      setLastTrackMarkersStyleProperty: (/* propertyName: string, value: string */) => {},\n      isRTL: () => /* boolean */ false,\n    });\n  }\n\n  /**\n   * Creates a new instance of MDCSliderFoundation\n   * @param {?MDCSliderAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSliderFoundation.defaultAdapter, adapter));\n    /** @private {?ClientRect} */\n    this.rect_ = null;\n    // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'\n    // because those could be valid tabindices set by the client code.\n    this.savedTabIndex_ = NaN;\n    this.active_ = false;\n    this.inTransit_ = false;\n    this.isDiscrete_ = false;\n    this.hasTrackMarker_ = false;\n    this.handlingThumbTargetEvt_ = false;\n    this.min_ = 0;\n    this.max_ = 100;\n    this.step_ = 0;\n    this.value_ = 0;\n    this.disabled_ = false;\n    this.preventFocusState_ = false;\n    this.updateUIFrame_ = 0;\n    this.thumbContainerPointerHandler_ = () => {\n      this.handlingThumbTargetEvt_ = true;\n    };\n    this.interactionStartHandler_ = (evt) => this.handleDown_(evt);\n    this.keydownHandler_ = (evt) => this.handleKeydown_(evt);\n    this.focusHandler_ = () => this.handleFocus_();\n    this.blurHandler_ = () => this.handleBlur_();\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.isDiscrete_ = this.adapter_.hasClass(cssClasses.IS_DISCRETE);\n    this.hasTrackMarker_ = this.adapter_.hasClass(cssClasses.HAS_TRACK_MARKER);\n    DOWN_EVENTS.forEach((evtName) => this.adapter_.registerInteractionHandler(evtName, this.interactionStartHandler_));\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.registerThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.layout();\n    // At last step, provide a reasonable default value to discrete slider\n    if (this.isDiscrete_ && this.getStep() == 0) {\n      this.step_ = 1;\n    }\n  }\n\n  destroy() {\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterInteractionHandler(evtName, this.interactionStartHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  setupTrackMarker() {\n    if (this.isDiscrete_ && this.hasTrackMarker_&& this.getStep() != 0) {\n      const min = this.getMin();\n      const max = this.getMax();\n      const step = this.getStep();\n      let numMarkers = (max - min) / step;\n\n      // In case distance between max & min is indivisible to step,\n      // we place the secondary to last marker proportionally at where thumb\n      // could reach and place the last marker at max value\n      const indivisible = Math.ceil(numMarkers) !== numMarkers;\n      if (indivisible) {\n        numMarkers = Math.ceil(numMarkers);\n      }\n\n      this.adapter_.removeTrackMarkers();\n      this.adapter_.appendTrackMarkers(numMarkers);\n\n      if (indivisible) {\n        const lastStepRatio = (max - numMarkers * step) / step + 1;\n        const flex = getCorrectPropertyName(window, 'flex');\n        this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));\n      }\n    }\n  }\n\n  layout() {\n    this.rect_ = this.adapter_.computeBoundingRect();\n    this.updateUIForCurrentValue_();\n  }\n\n  /** @return {number} */\n  getValue() {\n    return this.value_;\n  }\n\n  /** @param {number} value */\n  setValue(value) {\n    this.setValue_(value, false);\n  }\n\n  /** @return {number} */\n  getMax() {\n    return this.max_;\n  }\n\n  /** @param {number} max */\n  setMax(max) {\n    if (max < this.min_) {\n      throw new Error('Cannot set max to be less than the slider\\'s minimum value');\n    }\n    this.max_ = max;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMAX, String(this.max_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getMin() {\n    return this.min_;\n  }\n\n  /** @param {number} min */\n  setMin(min) {\n    if (min > this.max_) {\n      throw new Error('Cannot set min to be greater than the slider\\'s maximum value');\n    }\n    this.min_ = min;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMIN, String(this.min_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getStep() {\n    return this.step_;\n  }\n\n  /** @param {number} step */\n  setStep(step) {\n    if (step < 0) {\n      throw new Error('Step cannot be set to a negative number');\n    }\n    if (this.isDiscrete_ && (typeof(step) !== 'number' || step < 1)) {\n      step = 1;\n    }\n    this.step_ = step;\n    this.setValue_(this.value_, false, true);\n    this.setupTrackMarker();\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.disabled_ = disabled;\n    this.toggleClass_(cssClasses.DISABLED, this.disabled_);\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setAttribute(strings.ARIA_DISABLED, 'true');\n      this.adapter_.removeAttribute('tabindex');\n    } else {\n      this.adapter_.removeAttribute(strings.ARIA_DISABLED);\n      if (!isNaN(this.savedTabIndex_)) {\n        this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));\n      }\n    }\n  }\n\n  /**\n   * Called when the user starts interacting with the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleDown_(evt) {\n    if (this.disabled_) {\n      return;\n    }\n\n    this.preventFocusState_ = true;\n    this.setInTransit_(!this.handlingThumbTargetEvt_);\n    this.handlingThumbTargetEvt_ = false;\n    this.setActive_(true);\n\n    const moveHandler = (evt) => {\n      this.handleMove_(evt);\n    };\n\n    // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers\n    // do not always fire these consistently in pairs.\n    // (See https://github.com/material-components/material-components-web/issues/1192)\n    const upHandler = () => {\n      this.handleUp_();\n      this.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n      UP_EVENTS.forEach((evtName) => this.adapter_.deregisterBodyInteractionHandler(evtName, upHandler));\n    };\n\n    this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n    UP_EVENTS.forEach((evtName) => this.adapter_.registerBodyInteractionHandler(evtName, upHandler));\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user moves the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleMove_(evt) {\n    evt.preventDefault();\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user's interaction with the slider ends\n   * @private\n   */\n  handleUp_() {\n    this.setActive_(false);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the pageX of the event\n   * @param {!Event} evt\n   * @return {number}\n   * @private\n   */\n  getPageX_(evt) {\n    if (evt.targetTouches && evt.targetTouches.length > 0) {\n      return evt.targetTouches[0].pageX;\n    }\n    return evt.pageX;\n  }\n\n  /**\n   * Sets the slider value from an event\n   * @param {!Event} evt\n   * @private\n   */\n  setValueFromEvt_(evt) {\n    const pageX = this.getPageX_(evt);\n    const value = this.computeValueFromPageX_(pageX);\n    this.setValue_(value, true);\n  }\n\n  /**\n   * Computes the new value from the pageX position\n   * @param {number} pageX\n   * @return {number}\n   */\n  computeValueFromPageX_(pageX) {\n    const {max_: max, min_: min} = this;\n    const xPos = pageX - this.rect_.left;\n    let pctComplete = xPos / this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      pctComplete = 1 - pctComplete;\n    }\n    // Fit the percentage complete between the range [min,max]\n    // by remapping from [0, 1] to [min, min+(max-min)].\n    return min + pctComplete * (max - min);\n  }\n\n  /**\n   * Handles keydown events\n   * @param {!Event} evt\n   */\n  handleKeydown_(evt) {\n    const keyId = this.getKeyId_(evt);\n    const value = this.getValueForKeyId_(keyId);\n    if (isNaN(value)) {\n      return;\n    }\n\n    // Prevent page from scrolling due to key presses that would normally scroll the page\n    evt.preventDefault();\n    this.adapter_.addClass(cssClasses.FOCUS);\n    this.setValue_(value, true);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the computed name of the event\n   * @param {!Event} kbdEvt\n   * @return {string}\n   */\n  getKeyId_(kbdEvt) {\n    if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {\n      return KEY_IDS.ARROW_LEFT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {\n      return KEY_IDS.ARROW_RIGHT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {\n      return KEY_IDS.ARROW_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {\n      return KEY_IDS.ARROW_DOWN;\n    }\n    if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {\n      return KEY_IDS.HOME;\n    }\n    if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {\n      return KEY_IDS.END;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {\n      return KEY_IDS.PAGE_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {\n      return KEY_IDS.PAGE_DOWN;\n    }\n\n    return '';\n  }\n\n  /**\n   * Computes the value given a keyboard key ID\n   * @param {string} keyId\n   * @return {number}\n   */\n  getValueForKeyId_(keyId) {\n    const {max_: max, min_: min, step_: step} = this;\n    let delta = step || (max - min) / 100;\n    const valueNeedsToBeFlipped = this.adapter_.isRTL() && (\n      keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT\n    );\n    if (valueNeedsToBeFlipped) {\n      delta = -delta;\n    }\n\n    switch (keyId) {\n    case KEY_IDS.ARROW_LEFT:\n    case KEY_IDS.ARROW_DOWN:\n      return this.value_ - delta;\n    case KEY_IDS.ARROW_RIGHT:\n    case KEY_IDS.ARROW_UP:\n      return this.value_ + delta;\n    case KEY_IDS.HOME:\n      return this.min_;\n    case KEY_IDS.END:\n      return this.max_;\n    case KEY_IDS.PAGE_UP:\n      return this.value_ + delta * numbers.PAGE_FACTOR;\n    case KEY_IDS.PAGE_DOWN:\n      return this.value_ - delta * numbers.PAGE_FACTOR;\n    default:\n      return NaN;\n    }\n  }\n\n  handleFocus_() {\n    if (this.preventFocusState_) {\n      return;\n    }\n    this.adapter_.addClass(cssClasses.FOCUS);\n  }\n\n  handleBlur_() {\n    this.preventFocusState_ = false;\n    this.adapter_.removeClass(cssClasses.FOCUS);\n  }\n\n  /**\n   * Sets the value of the slider\n   * @param {number} value\n   * @param {boolean} shouldFireInput\n   * @param {boolean=} force\n   */\n  setValue_(value, shouldFireInput, force = false) {\n    if (value === this.value_ && !force) {\n      return;\n    }\n\n    const {min_: min, max_: max} = this;\n    const valueSetToBoundary = value === min || value === max;\n    if (this.step_ && !valueSetToBoundary) {\n      value = this.quantize_(value);\n    }\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    this.value_ = value;\n    this.adapter_.setAttribute(strings.ARIA_VALUENOW, String(this.value_));\n    this.updateUIForCurrentValue_();\n\n    if (shouldFireInput) {\n      this.adapter_.notifyInput();\n      if (this.isDiscrete_) {\n        this.adapter_.setMarkerValue(value);\n      }\n    }\n  }\n\n  /**\n   * Calculates the quantized value\n   * @param {number} value\n   * @return {number}\n   */\n  quantize_(value) {\n    const numSteps = Math.round(value / this.step_);\n    const quantizedVal = numSteps * this.step_;\n    return quantizedVal;\n  }\n\n  updateUIForCurrentValue_() {\n    const {max_: max, min_: min, value_: value} = this;\n    const pctComplete = (value - min) / (max - min);\n    let translatePx = pctComplete * this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      translatePx = this.rect_.width - translatePx;\n    }\n\n    const transformProp = getCorrectPropertyName(window, 'transform');\n    const transitionendEvtName = getCorrectEventName(window, 'transitionend');\n\n    if (this.inTransit_) {\n      const onTransitionEnd = () => {\n        this.setInTransit_(false);\n        this.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n      };\n      this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n    }\n\n    this.updateUIFrame_ = requestAnimationFrame(() => {\n      // NOTE(traviskaufman): It would be nice to use calc() here,\n      // but IE cannot handle calcs in transforms correctly.\n      // See: https://goo.gl/NC2itk\n      // Also note that the -50% offset is used to center the slider thumb.\n      this.adapter_.setThumbContainerStyleProperty(transformProp, `translateX(${translatePx}px) translateX(-50%)`);\n      this.adapter_.setTrackStyleProperty(transformProp, `scaleX(${pctComplete})`);\n    });\n  }\n\n  /**\n   * Toggles the active state of the slider\n   * @param {boolean} active\n   */\n  setActive_(active) {\n    this.active_ = active;\n    this.toggleClass_(cssClasses.ACTIVE, this.active_);\n  }\n\n  /**\n   * Toggles the inTransit state of the slider\n   * @param {boolean} inTransit\n   */\n  setInTransit_(inTransit) {\n    this.inTransit_ = inTransit;\n    this.toggleClass_(cssClasses.IN_TRANSIT, this.inTransit_);\n  }\n\n  /**\n   * Conditionally adds or removes a class based on shouldBePresent\n   * @param {string} className\n   * @param {boolean} shouldBePresent\n   */\n  toggleClass_(className, shouldBePresent) {\n    if (shouldBePresent) {\n      this.adapter_.addClass(className);\n    } else {\n      this.adapter_.removeClass(className);\n    }\n  }\n}\n\nexport default MDCSliderFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Adapter for MDC Slider.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Slider into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSliderAdapter {\n  /**\n   * Returns true if className exists for the slider Element\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the slider Element\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the slider Element\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns a string if attribute name exists on the slider Element,\n   * otherwise returns null\n   * @param {string} name\n   * @return {?string}\n   */\n  getAttribute(name) {}\n\n  /**\n   * Sets attribute name on slider Element to value\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttribute(name, value) {}\n\n  /**\n   * Removes attribute name from slider Element\n   * @param {string} name\n   */\n  removeAttribute(name) {}\n\n  /**\n   * Returns the bounding client rect for the slider Element\n   * @return {?ClientRect}\n   */\n  computeBoundingRect() {}\n\n  /**\n   * Returns the tab index of the slider Element\n   * @return {number}\n   */\n  getTabIndex() {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * Deregisters an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * Emits a custom event MDCSlider:input from the root\n   */\n  notifyInput() {}\n\n  /**\n   * Emits a custom event MDCSlider:change from the root\n   */\n  notifyChange() {}\n\n  /**\n   * Sets a style property of the thumb container element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setThumbContainerStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets a style property of the track element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setTrackStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets the inner text of the pin marker to the passed value\n   * @param {number} value\n   */\n  setMarkerValue(value) {}\n\n  /**\n   * Appends the passed number of track markers to the track mark container element\n   * @param {number} numMarkers\n   */\n  appendTrackMarkers(numMarkers) {}\n\n  /**\n   * Removes all track markers fromt he track mark container element\n   */\n  removeTrackMarkers() {}\n\n  /**\n   * Sets a style property of the last track marker to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setLastTrackMarkersStyleProperty(propertyName, value) {}\n\n  /**\n   * Returns true if the root element is RTL, otherwise false\n   * @return {boolean}\n   */\n  isRTL() {}\n}\n\nexport default MDCSliderAdapter;\n","import { BasePlugin } from '../base'\r\nimport mdcSlider from './mdc-slider.vue'\r\n\r\nexport { mdcSlider }\r\n\r\nexport default BasePlugin({\r\n  mdcSlider\r\n})\r\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  ROOT: 'mdc-snackbar',\n  TEXT: 'mdc-snackbar__text',\n  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',\n  ACTION_BUTTON: 'mdc-snackbar__action-button',\n  ACTIVE: 'mdc-snackbar--active',\n  MULTILINE: 'mdc-snackbar--multiline',\n  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom',\n};\n\nexport const strings = {\n  TEXT_SELECTOR: '.mdc-snackbar__text',\n  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',\n  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',\n  SHOW_EVENT: 'MDCSnackbar:show',\n  HIDE_EVENT: 'MDCSnackbar:hide',\n};\n\nexport const numbers = {\n  MESSAGE_TIMEOUT: 2750,\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setAriaHidden: () => {},\n      unsetAriaHidden: () => {},\n      setActionAriaHidden: () => {},\n      unsetActionAriaHidden: () => {},\n      setActionText: (/* actionText: string */) => {},\n      setMessageText: (/* message: string */) => {},\n      setFocus: () => {},\n      visibilityIsHidden: () => /* boolean */ false,\n      registerCapturedBlurHandler: (/* handler: EventListener */) => {},\n      deregisterCapturedBlurHandler: (/* handler: EventListener */) => {},\n      registerVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      deregisterVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      registerCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerActionClickHandler: (/* handler: EventListener */) => {},\n      deregisterActionClickHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyShow: () => {},\n      notifyHide: () => {},\n    };\n  }\n\n  get active() {\n    return this.active_;\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    this.active_ = false;\n    this.actionWasClicked_ = false;\n    this.dismissOnAction_ = true;\n    this.firstFocus_ = true;\n    this.pointerDownRecognized_ = false;\n    this.snackbarHasFocus_ = false;\n    this.snackbarData_ = null;\n    this.queue_ = [];\n    this.actionClickHandler_ = () => {\n      this.actionWasClicked_ = true;\n      this.invokeAction_();\n    };\n    this.visibilitychangeHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = true;\n\n      if (!this.adapter_.visibilityIsHidden()) {\n        setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n      }\n    };\n    this.interactionHandler_ = (evt) => {\n      if (evt.type == 'touchstart' || evt.type == 'mousedown') {\n        this.pointerDownRecognized_ = true;\n      }\n      this.handlePossibleTabKeyboardFocus_(evt);\n\n      if (evt.type == 'focus') {\n        this.pointerDownRecognized_ = false;\n      }\n    };\n    this.blurHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = false;\n      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n    };\n  }\n\n  init() {\n    this.adapter_.registerActionClickHandler(this.actionClickHandler_);\n    this.adapter_.setAriaHidden();\n    this.adapter_.setActionAriaHidden();\n  }\n\n  destroy() {\n    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);\n    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);\n    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.deregisterCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  dismissesOnAction() {\n    return this.dismissOnAction_;\n  }\n\n  setDismissOnAction(dismissOnAction) {\n    this.dismissOnAction_ = !!dismissOnAction;\n  }\n\n  show(data) {\n    if (!data) {\n      throw new Error(\n        'Please provide a data object with at least a message to display.');\n    }\n    if (!data.message) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data.actionHandler && !data.actionText) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queue_.push(data);\n      return;\n    }\n    clearTimeout(this.timeoutId_);\n    this.snackbarData_ = data;\n    this.firstFocus_ = true;\n    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);\n    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.registerCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n\n    const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n    this.adapter_.setMessageText(this.snackbarData_.message);\n\n    if (this.snackbarData_.multiline) {\n      this.adapter_.addClass(MULTILINE);\n      if (this.snackbarData_.actionOnBottom) {\n        this.adapter_.addClass(ACTION_ON_BOTTOM);\n      }\n    }\n\n    if (this.snackbarData_.actionHandler) {\n      this.adapter_.setActionText(this.snackbarData_.actionText);\n      this.actionHandler_ = this.snackbarData_.actionHandler;\n      this.setActionHidden_(false);\n    } else {\n      this.setActionHidden_(true);\n      this.actionHandler_ = null;\n      this.adapter_.setActionText(null);\n    }\n\n    this.active_ = true;\n    this.adapter_.addClass(ACTIVE);\n    this.adapter_.unsetAriaHidden();\n    this.adapter_.notifyShow();\n\n    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n  }\n\n  handlePossibleTabKeyboardFocus_() {\n    const hijackFocus =\n      this.firstFocus_ && !this.pointerDownRecognized_;\n\n    if (hijackFocus) {\n      this.setFocusOnAction_();\n    }\n\n    this.firstFocus_ = false;\n  }\n\n  setFocusOnAction_() {\n    this.adapter_.setFocus();\n    this.snackbarHasFocus_ = true;\n    this.firstFocus_ = false;\n  }\n\n  invokeAction_() {\n    try {\n      if (!this.actionHandler_) {\n        return;\n      }\n\n      this.actionHandler_();\n    } finally {\n      if (this.dismissOnAction_) {\n        this.cleanup_();\n      }\n    }\n  }\n\n  cleanup_() {\n    const allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;\n\n    if (allowDismissal) {\n      const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n      this.adapter_.removeClass(ACTIVE);\n\n      const handler = () => {\n        clearTimeout(this.timeoutId_);\n        this.adapter_.deregisterTransitionEndHandler(handler);\n        this.adapter_.removeClass(MULTILINE);\n        this.adapter_.removeClass(ACTION_ON_BOTTOM);\n        this.setActionHidden_(true);\n        this.adapter_.setAriaHidden();\n        this.active_ = false;\n        this.snackbarHasFocus_ = false;\n        this.adapter_.notifyHide();\n        this.showNext_();\n      };\n\n      this.adapter_.registerTransitionEndHandler(handler);\n    }\n  }\n\n  showNext_() {\n    if (!this.queue_.length) {\n      return;\n    }\n    this.show(this.queue_.shift());\n  }\n\n  setActionHidden_(isHidden) {\n    if (isHidden) {\n      this.adapter_.setActionAriaHidden();\n    } else {\n      this.adapter_.unsetActionAriaHidden();\n    }\n  }\n}\n","import { BasePlugin } from '../base'\r\nimport mdcSnackbar from './mdc-snackbar.vue'\r\n\r\nexport { mdcSnackbar }\r\n\r\nexport default BasePlugin({\r\n  mdcSnackbar\r\n})\r\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKED: 'mdc-switch--checked',\n  DISABLED: 'mdc-switch--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-switch__native-control',\n  RIPPLE_SURFACE_SELECTOR: '.mdc-switch__thumb-underlay',\n};\n\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Switch. Provides an interface for managing\n * - classes\n * - dom\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCSwitchAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {boolean} checked */\n  setNativeControlChecked(checked) {}\n\n  /** @return {boolean} checked */\n  isNativeControlChecked() {}\n\n  /** @param {boolean} disabled */\n  setNativeControlDisabled(disabled) {}\n\n  /** @return {boolean} disabled */\n  isNativeControlDisabled() {}\n}\n\nexport default MDCSwitchAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSwitchAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSwitchAdapter>}\n */\nclass MDCSwitchFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return {!MDCSwitchAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSwitchAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlChecked: (/* checked: boolean */) => {},\n      isNativeControlChecked: () => /* boolean */ {},\n      setNativeControlDisabled: (/* disabled: boolean */) => {},\n      isNativeControlDisabled: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSwitchFoundation.defaultAdapter, adapter));\n  }\n\n  /** @override */\n  init() {\n    // Do an initial state update based on the state of the native control.\n    this.handleChange();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.adapter_.isNativeControlChecked();\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.adapter_.setNativeControlChecked(checked);\n    this.updateCheckedStyling_(checked);\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.adapter_.isNativeControlDisabled();\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.adapter_.setNativeControlDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /**\n   * Handles the change event for the switch native control.\n   */\n  handleChange() {\n    this.updateCheckedStyling_(this.isChecked());\n  }\n\n  /**\n   * Updates the styling of the switch based on its checked state.\n   * @param {boolean} checked\n   * @private\n   */\n  updateCheckedStyling_(checked) {\n    if (checked) {\n      this.adapter_.addClass(cssClasses.CHECKED);\n    } else {\n      this.adapter_.removeClass(cssClasses.CHECKED);\n    }\n  }\n}\n\nexport default MDCSwitchFoundation;\n","import { BasePlugin } from '../base'\r\nimport mdcSwitch from './mdc-switch.vue'\r\n\r\nexport { mdcSwitch }\r\n\r\nexport default BasePlugin({\r\n  mdcSwitch\r\n})\r\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\nexport const strings = {\n  SELECTED_EVENT: 'MDCTab:selected',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTabFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getOffsetWidth: () => /* number */ 0,\n      getOffsetLeft: () => /* number */ 0,\n      notifySelected: () => {},\n    };\n  }\n\n  constructor(adapter = {}) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    this.computedWidth_ = 0;\n    this.computedLeft_ = 0;\n    this.isActive_ = false;\n    this.preventDefaultOnClick_ = false;\n\n    this.clickHandler_ = (evt) => {\n      if (this.preventDefaultOnClick_) {\n        evt.preventDefault();\n      }\n      this.adapter_.notifySelected();\n    };\n\n    this.keydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Enter' || evt.keyCode === 13) {\n        this.adapter_.notifySelected();\n      }\n    };\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  getComputedWidth() {\n    return this.computedWidth_;\n  }\n\n  getComputedLeft() {\n    return this.computedLeft_;\n  }\n\n  isActive() {\n    return this.isActive_;\n  }\n\n  setActive(isActive) {\n    this.isActive_ = isActive;\n    if (this.isActive_) {\n      this.adapter_.addClass(cssClasses.ACTIVE);\n    } else {\n      this.adapter_.removeClass(cssClasses.ACTIVE);\n    }\n  }\n\n  preventsDefaultOnClick() {\n    return this.preventDefaultOnClick_;\n  }\n\n  setPreventDefaultOnClick(preventDefaultOnClick) {\n    this.preventDefaultOnClick_ = preventDefaultOnClick;\n  }\n\n  measureSelf() {\n    this.computedWidth_ = this.adapter_.getOffsetWidth();\n    this.computedLeft_ = this.adapter_.getOffsetLeft();\n  }\n}\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  UPGRADED: 'mdc-tab-bar-upgraded',\n};\n\nexport const strings = {\n  TAB_SELECTOR: '.mdc-tab',\n  INDICATOR_SELECTOR: '.mdc-tab-bar__indicator',\n  CHANGE_EVENT: 'MDCTabBar:change',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {getCorrectPropertyName} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTabBarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      bindOnMDCTabSelectedEvent: () => {},\n      unbindOnMDCTabSelectedEvent: () => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getOffsetWidth: () => /* number */ 0,\n      setStyleForIndicator: (/* propertyName: string, value: string */) => {},\n      getOffsetWidthForIndicator: () => /* number */ 0,\n      notifyChange: (/* evtData: {activeTabIndex: number} */) => {},\n      getNumberOfTabs: () => /* number */ 0,\n      isTabActiveAtIndex: (/* index: number */) => /* boolean */ false,\n      setTabActiveAtIndex: (/* index: number, isActive: true */) => {},\n      isDefaultPreventedOnClickForTabAtIndex: (/* index: number */) => /* boolean */ false,\n      setPreventDefaultOnClickForTabAtIndex: (/* index: number, preventDefaultOnClick: boolean */) => {},\n      measureTabAtIndex: (/* index: number */) => {},\n      getComputedWidthForTabAtIndex: (/* index: number */) => /* number */ 0,\n      getComputedLeftForTabAtIndex: (/* index: number */) => /* number */ 0,\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    this.isIndicatorShown_ = false;\n    this.computedWidth_ = 0;\n    this.computedLeft_ = 0;\n    this.activeTabIndex_ = 0;\n    this.layoutFrame_ = 0;\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.bindOnMDCTabSelectedEvent();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    const activeTabIndex = this.findActiveTabIndex_();\n    if (activeTabIndex >= 0) {\n      this.activeTabIndex_ = activeTabIndex;\n    }\n    this.layout();\n  }\n\n  destroy() {\n    this.adapter_.removeClass(cssClasses.UPGRADED);\n    this.adapter_.unbindOnMDCTabSelectedEvent();\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  layoutInternal_() {\n    this.forEachTabIndex_((index) => this.adapter_.measureTabAtIndex(index));\n    this.computedWidth_ = this.adapter_.getOffsetWidth();\n    this.layoutIndicator_();\n  }\n\n  layoutIndicator_() {\n    const isIndicatorFirstRender = !this.isIndicatorShown_;\n\n    // Ensure that indicator appears in the right position immediately for correct first render.\n    if (isIndicatorFirstRender) {\n      this.adapter_.setStyleForIndicator('transition', 'none');\n    }\n\n    const translateAmtForActiveTabLeft = this.adapter_.getComputedLeftForTabAtIndex(this.activeTabIndex_);\n    const scaleAmtForActiveTabWidth =\n      this.adapter_.getComputedWidthForTabAtIndex(this.activeTabIndex_) / this.adapter_.getOffsetWidth();\n\n    const transformValue = `translateX(${translateAmtForActiveTabLeft}px) scale(${scaleAmtForActiveTabWidth}, 1)`;\n    this.adapter_.setStyleForIndicator(getCorrectPropertyName(window, 'transform'), transformValue);\n\n    if (isIndicatorFirstRender) {\n      // Force layout so that transform styles to take effect.\n      this.adapter_.getOffsetWidthForIndicator();\n      this.adapter_.setStyleForIndicator('transition', '');\n      this.adapter_.setStyleForIndicator('visibility', 'visible');\n      this.isIndicatorShown_ = true;\n    }\n  }\n\n  findActiveTabIndex_() {\n    let activeTabIndex = -1;\n    this.forEachTabIndex_((index) => {\n      if (this.adapter_.isTabActiveAtIndex(index)) {\n        activeTabIndex = index;\n        return true;\n      }\n    });\n    return activeTabIndex;\n  }\n\n  forEachTabIndex_(iterator) {\n    const numTabs = this.adapter_.getNumberOfTabs();\n    for (let index = 0; index < numTabs; index++) {\n      const shouldBreak = iterator(index);\n      if (shouldBreak) {\n        break;\n      }\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  switchToTabAtIndex(index, shouldNotify) {\n    if (index === this.activeTabIndex_) {\n      return;\n    }\n\n    if (index < 0 || index >= this.adapter_.getNumberOfTabs()) {\n      throw new Error(`Out of bounds index specified for tab: ${index}`);\n    }\n\n    const prevActiveTabIndex = this.activeTabIndex_;\n    this.activeTabIndex_ = index;\n    requestAnimationFrame(() => {\n      if (prevActiveTabIndex >= 0) {\n        this.adapter_.setTabActiveAtIndex(prevActiveTabIndex, false);\n      }\n      this.adapter_.setTabActiveAtIndex(this.activeTabIndex_, true);\n      this.layoutIndicator_();\n      if (shouldNotify) {\n        this.adapter_.notifyChange({activeTabIndex: this.activeTabIndex_});\n      }\n    });\n  }\n\n  getActiveTabIndex() {\n    return this.findActiveTabIndex_();\n  }\n}\n","import { BasePlugin } from '../base'\r\nimport mdcTab from './mdc-tab.vue'\r\nimport mdcTabBar from './mdc-tab-bar.vue'\r\n\r\nexport { mdcTab, mdcTabBar }\r\n\r\nexport default BasePlugin({\r\n  mdcTab,\r\n  mdcTabBar\r\n})\r\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Gets the value of an attribute on the icon element.\n   * @param {string} attr\n   * @return {string}\n   */\n  getAttr(attr) {}\n\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the icon element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content of the icon element.\n   * @param {string} content\n   */\n  setContent(content) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  UPGRADED: 'mdc-text-field--upgraded',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  BOX: 'mdc-text-field--box',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\nexport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Registers a validation attribute change listener on the input element.\n   * Handler accepts list of attribute names.\n   * @param {function(!Array<string>): undefined} handler\n   * @return {!MutationObserver}\n   */\n  registerValidationAttributeChangeHandler(handler) {}\n\n  /**\n   * Disconnects a validation attribute observer on the input element.\n   * @param {!MutationObserver} observer\n   */\n  deregisterValidationAttributeChangeHandler(observer) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n\n  /**\n   * Only implement if label exists.\n   * Shakes label if shouldShake is true.\n   * @param {boolean} shouldShake\n   */\n  shakeLabel(shouldShake) {}\n\n  /**\n   * Only implement if label exists.\n   * Floats the label above the input element if shouldFloat is true.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Only implement if label exists.\n   * Returns width of label in pixels.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * Updates SVG Path and outline element based on the\n   * label element width and RTL context.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  notchOutline(labelWidth, isRtl) {}\n\n  /**\n   * Only implement if outline element exists.\n   * Closes notch in outline element.\n   */\n  closeOutline() {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n/* eslint-enable no-unused-vars */\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\nimport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return this.isFocused_ || !!this.getValue() || this.isBadInput_();\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (attributesList) => this.handleValidationAttributeChange(attributesList);\n\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    // Ensure label does not collide with any pre-filled value.\n    if (this.adapter_.hasLabel() && (this.getValue() || this.isBadInput_())) {\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ =\n        this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {!Array<string>} attributesList\n   */\n  handleValidationAttributeChange(attributesList) {\n    attributesList.some((attributeName) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    this.notchOutline(this.shouldFloat);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const input = this.getNativeInput_();\n    const shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n    if (shouldRemoveLabelFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useCustomValidityChecking_\n      ? this.isValid_ : this.isNativeInputValid_();\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.useCustomValidityChecking_ = true;\n    this.isValid_ = isValid;\n    // Retrieve from the getter to ensure correct logic is applied.\n    isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the icon.\n   * @param {string} label\n   */\n  setIconAriaLabel(label) {\n    if (this.icon_) {\n      this.icon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the icon.\n   * @param {string} content\n   */\n  setIconContent(content) {\n    if (this.icon_) {\n      this.icon_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","import { BasePlugin } from '../base'\r\nimport mdcTextField from './mdc-textfield.vue'\r\n\r\nexport { mdcTextField }\r\n\r\nexport default BasePlugin({\r\n  mdcTextField\r\n})\r\n","import { BasePlugin } from '../base'\r\nimport mdcTheme from './mdc-theme.vue'\r\n\r\nexport { mdcTheme }\r\n\r\nexport default BasePlugin({\r\n  mdcTheme\r\n})\r\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  FIXED: 'mdc-toolbar--fixed',\n  FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',\n  FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',\n  TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',\n  FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',\n  FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',\n  FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized',\n};\n\nexport const strings = {\n  TITLE_SELECTOR: '.mdc-toolbar__title',\n  ICON_SELECTOR: '.mdc-toolbar__icon',\n  FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',\n  CHANGE_EVENT: 'MDCToolbar:change',\n};\n\nexport const numbers = {\n  MAX_TITLE_SIZE: 2.125,\n  MIN_TITLE_SIZE: 1.25,\n  TOOLBAR_ROW_HEIGHT: 64,\n  TOOLBAR_ROW_MOBILE_HEIGHT: 56,\n  TOOLBAR_MOBILE_BREAKPOINT: 600,\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCToolbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportWidth: () => /* number */ 0,\n      getViewportScrollY: () => /* number */ 0,\n      getOffsetHeight: () => /* number */ 0,\n      getFirstRowElementOffsetHeight: () => /* number */ 0,\n      notifyChange: (/* evtData: {flexibleExpansionRatio: number} */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      setStyleForTitleElement: (/* property: string, value: string */) => {},\n      setStyleForFlexibleRowElement: (/* property: string, value: string */) => {},\n      setStyleForFixedAdjustElement: (/* property: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCToolbarFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.checkRowHeight_();\n    this.scrollHandler_ = () => this.updateToolbarStyles_();\n    this.checkRowHeightFrame_ = 0;\n    this.scrollFrame_ = 0;\n    this.executedLastChange_ = false;\n\n    this.calculations_ = {\n      toolbarRowHeight: 0,\n      // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.\n      toolbarRatio: 0, // The ratio of toolbar height to row height\n      flexibleExpansionRatio: 0, // The ratio of flexible space height to row height\n      maxTranslateYRatio: 0, // The ratio of max toolbar move up distance to row height\n      scrollThresholdRatio: 0, // The ratio of max scrollTop that we should listen to to row height\n      // Derived Heights based on the above key ratios.\n      toolbarHeight: 0,\n      flexibleExpansionHeight: 0, // Flexible row minus toolbar height (derived)\n      maxTranslateYDistance: 0, // When toolbar only fix last row (derived)\n      scrollThreshold: 0,\n    };\n    // Toolbar fixed behavior\n    // If toolbar is fixed\n    this.fixed_ = false;\n    // If fixed is targeted only at the last row\n    this.fixedLastrow_ = false;\n    // Toolbar flexible behavior\n    // If the first row is flexible\n    this.hasFlexibleRow_ = false;\n    // If use the default behavior\n    this.useFlexDefaultBehavior_ = false;\n  }\n\n  init() {\n    this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);\n    this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;\n    this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);\n    if (this.hasFlexibleRow_) {\n      this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);\n    }\n    this.initKeyRatio_();\n    this.setKeyHeights_();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  updateAdjustElementStyles() {\n    if (this.fixed_) {\n      this.adapter_.setStyleForFixedAdjustElement('margin-top', `${this.calculations_.toolbarHeight}px`);\n    }\n  }\n\n  getFlexibleExpansionRatio_(scrollTop) {\n    // To prevent division by zero when there is no flexibleExpansionHeight\n    const delta = 0.0001;\n    return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));\n  }\n\n  checkRowHeight_() {\n    cancelAnimationFrame(this.checkRowHeightFrame_);\n    this.checkRowHeightFrame_ = requestAnimationFrame(() => this.setKeyHeights_());\n  }\n\n  setKeyHeights_() {\n    const newToolbarRowHeight = this.getRowHeight_();\n    if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {\n      this.calculations_.toolbarRowHeight = newToolbarRowHeight;\n      this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.flexibleExpansionHeight =\n        this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.maxTranslateYDistance =\n        this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.scrollThreshold =\n        this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;\n      this.updateAdjustElementStyles();\n      this.updateToolbarStyles_();\n    }\n  }\n\n  updateToolbarStyles_() {\n    cancelAnimationFrame(this.scrollFrame_);\n    this.scrollFrame_ = requestAnimationFrame(() => {\n      const scrollTop = this.adapter_.getViewportScrollY();\n      const hasScrolledOutOfThreshold = this.scrolledOutOfThreshold_(scrollTop);\n\n      if (hasScrolledOutOfThreshold && this.executedLastChange_) {\n        return;\n      }\n\n      const flexibleExpansionRatio = this.getFlexibleExpansionRatio_(scrollTop);\n\n      this.updateToolbarFlexibleState_(flexibleExpansionRatio);\n      if (this.fixedLastrow_) {\n        this.updateToolbarFixedState_(scrollTop);\n      }\n      if (this.hasFlexibleRow_) {\n        this.updateFlexibleRowElementStyles_(flexibleExpansionRatio);\n      }\n      this.executedLastChange_ = hasScrolledOutOfThreshold;\n      this.adapter_.notifyChange({flexibleExpansionRatio: flexibleExpansionRatio});\n    });\n  }\n\n  scrolledOutOfThreshold_(scrollTop) {\n    return scrollTop > this.calculations_.scrollThreshold;\n  }\n\n  initKeyRatio_() {\n    const toolbarRowHeight = this.getRowHeight_();\n    const firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;\n    this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;\n    this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;\n    this.calculations_.maxTranslateYRatio =\n      this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;\n    this.calculations_.scrollThresholdRatio =\n      (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;\n  }\n\n  getRowHeight_() {\n    const breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;\n    return this.adapter_.getViewportWidth() < breakpoint ?\n      MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;\n  }\n\n  updateToolbarFlexibleState_(flexibleExpansionRatio) {\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    if (flexibleExpansionRatio === 1) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    } else if (flexibleExpansionRatio === 0) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    }\n  }\n\n  updateToolbarFixedState_(scrollTop) {\n    const translateDistance = Math.max(0, Math.min(\n      scrollTop - this.calculations_.flexibleExpansionHeight,\n      this.calculations_.maxTranslateYDistance));\n    this.adapter_.setStyle('transform', `translateY(${-translateDistance}px)`);\n\n    if (translateDistance === this.calculations_.maxTranslateYDistance) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    } else {\n      this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    }\n  }\n\n  updateFlexibleRowElementStyles_(flexibleExpansionRatio) {\n    if (this.fixed_) {\n      const height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;\n      this.adapter_.setStyleForFlexibleRowElement('height',\n        `${height + this.calculations_.toolbarRowHeight}px`);\n    }\n    if (this.useFlexDefaultBehavior_) {\n      this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);\n    }\n  }\n\n  updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {\n    const maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;\n    const minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;\n    const currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;\n\n    this.adapter_.setStyleForTitleElement('font-size', `${currentTitleSize}rem`);\n  }\n}\n","import { BasePlugin } from '../base'\r\nimport mdcToolbar from './mdc-toolbar.vue'\r\nimport mdcToolbarRow from './mdc-toolbar-row.vue'\r\nimport mdcToolbarSection from './mdc-toolbar-section.vue'\r\nimport mdcToolbarMenuIcon from './mdc-toolbar-menu-icon.vue'\r\nimport mdcToolbarTitle from './mdc-toolbar-title.vue'\r\nimport mdcToolbarIcon from './mdc-toolbar-icon.vue'\r\n\r\nexport {\r\n  mdcToolbar,\r\n  mdcToolbarRow,\r\n  mdcToolbarSection,\r\n  mdcToolbarMenuIcon,\r\n  mdcToolbarTitle,\r\n  mdcToolbarIcon\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcToolbar,\r\n  mdcToolbarRow,\r\n  mdcToolbarSection,\r\n  mdcToolbarMenuIcon,\r\n  mdcToolbarTitle,\r\n  mdcToolbarIcon\r\n})\r\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  FIXED_CLASS: 'mdc-top-app-bar--fixed',\n  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',\n  SHORT_CLASS: 'mdc-top-app-bar--short',\n  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,\n  MAX_TOP_APP_BAR_HEIGHT: 128,\n};\n\n/** @enum {string} */\nconst strings = {\n  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n  NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n  ROOT_SELECTOR: '.mdc-top-app-bar',\n  TITLE_SELECTOR: '.mdc-top-app-bar__title',\n};\n\nexport {strings, cssClasses, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {strings, cssClasses, numbers} from './constants';\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCFoundation from '@material/base/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCTopAppBarAdapter>}\n */\nclass MDCTopAppBarBaseFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTopAppBarAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTopAppBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTopAppBarAdapter} */ ({\n      hasClass: (/* className: string */) => {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      getTopAppBarHeight: () => {},\n      registerNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyNavigationIconClicked: () => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportScrollY: () => /* number */ 0,\n      getTotalActionItems: () => /* number */ 0,\n    });\n  }\n\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(/** @type {!MDCTopAppBarAdapter} */ adapter) {\n    super(Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter));\n\n    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();\n  }\n\n  init() {\n    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n}\n\nexport default MDCTopAppBarBaseFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Top App Bar\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Top App Bar into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTopAppBarAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the specified inline style property on the root Element to the given value.\n   * @param {string} property\n   * @param {string} value\n   */\n  setStyle(property, value) {}\n\n  /**\n   * Gets the height of the top app bar.\n   * @return {number}\n   */\n  getTopAppBarHeight() {}\n\n  /**\n   * Registers an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Emits an event when the navigation icon is clicked.\n   */\n  notifyNavigationIconClicked() {}\n\n  /** @param {function(!Event)} handler */\n  registerScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerResizeHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterResizeHandler(handler) {}\n\n  /** @return {number} */\n  getViewportScrollY() {}\n\n  /** @return {number} */\n  getTotalActionItems() {}\n}\n\nexport default MDCTopAppBarAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {cssClasses} from '../constants';\n\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}\n * @final\n */\nclass MDCShortTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    // State variable for the current top app bar state\n    this.isCollapsed = false;\n\n    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    const isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);\n\n    if (this.adapter_.getTotalActionItems() > 0) {\n      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n    }\n\n    if (!isAlwaysCollapsed) {\n      this.adapter_.registerScrollHandler(this.scrollHandler_);\n      this.shortAppBarScrollHandler_();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n\n  /**\n   * Scroll handler for applying/removing the collapsed modifier class\n   * on the short top app bar.\n   * @private\n   */\n  shortAppBarScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.isCollapsed) {\n        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = false;\n      }\n    } else {\n      if (!this.isCollapsed) {\n        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = true;\n      }\n    }\n  }\n}\n\nexport default MDCShortTopAppBarFoundation;\n","import { BasePlugin } from '../base'\r\nimport mdcTopAppBar from './mdc-top-app-bar.vue'\r\nimport mdcTopAppBarAction from './mdc-top-app-bar-action.vue'\r\n\r\nexport { mdcTopAppBar, mdcTopAppBarAction }\r\n\r\nexport default BasePlugin({\r\n  mdcTopAppBar,\r\n  mdcTopAppBarAction\r\n})\r\n","const typos = [\r\n  'headline1',\r\n  'headline2',\r\n  'headline3',\r\n  'headline4',\r\n  'headline5',\r\n  'headline6',\r\n  'subtitle1',\r\n  'subtitle2',\r\n  'body1',\r\n  'body2',\r\n  'caption',\r\n  'button',\r\n  'overline'\r\n]\r\n\r\nexport const mdcTypoMixin = name => {\r\n  return {\r\n    render(createElement) {\r\n      return createElement(\r\n        this.tag,\r\n        {\r\n          class: {\r\n            'mdc-typo': true,\r\n            [name]: true,\r\n            [`mdc-typography--${this.typo}`]: true\r\n          },\r\n          attrs: this.$attrs,\r\n          on: this.$listeners\r\n        },\r\n        this.$slots.default\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport function mdcTypoPropMixin(defaultTag, defaultTypo, validTypos) {\r\n  return {\r\n    props: {\r\n      tag: {\r\n        type: String,\r\n        default: defaultTag\r\n      },\r\n      typo: {\r\n        type: String,\r\n        default: defaultTypo,\r\n        validator: value => validTypos.indexOf(value) !== -1\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const mdcTextSection = {\r\n  name: 'mdc-text-section',\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: 'section'\r\n    }\r\n  },\r\n  render(createElement) {\r\n    return createElement(\r\n      this.tag,\r\n      {\r\n        class: {\r\n          'mdc-typography': true,\r\n          'mdc-text-section': true\r\n        },\r\n        attrs: this.$attrs,\r\n        on: this.$listeners\r\n      },\r\n      this.$slots.default\r\n    )\r\n  }\r\n}\r\n\r\nexport const mdcText = {\r\n  name: 'mdc-text',\r\n  mixins: [mdcTypoMixin('mdc-text'), mdcTypoPropMixin('p', 'body1', typos)]\r\n}\r\n\r\nexport const mdcDisplay = {\r\n  name: 'mdc-display',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-display'),\r\n    mdcTypoPropMixin('h1', 'headline4', [\r\n      'headline4',\r\n      'headline3',\r\n      'headline2',\r\n      'headline1'\r\n    ])\r\n  ]\r\n}\r\n\r\nexport const mdcHeadline = {\r\n  name: 'mdc-headline',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-headline'),\r\n    mdcTypoPropMixin('h2', 'headline5', ['headline5'])\r\n  ]\r\n}\r\n\r\nexport const mdcTitle = {\r\n  name: 'mdc-title',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-title'),\r\n    mdcTypoPropMixin('h3', 'headline6', ['headline6'])\r\n  ]\r\n}\r\n\r\nexport const mdcSubHeading = {\r\n  name: 'mdc-subheading',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-subheading'),\r\n    mdcTypoPropMixin('h4', 'subtitle2', ['subtitle1', 'subtitle2'])\r\n  ]\r\n}\r\n\r\nexport const mdcBody = {\r\n  name: 'mdc-body',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-body'),\r\n    mdcTypoPropMixin('p', 'body1', ['body1', 'body2'])\r\n  ]\r\n}\r\n\r\nexport const mdcCaption = {\r\n  name: 'mdc-caption',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-caption'),\r\n    mdcTypoPropMixin('span', 'caption', ['caption'])\r\n  ]\r\n}\r\n","import { BasePlugin } from '../base'\r\nimport {\r\n  mdcTextSection,\r\n  mdcText,\r\n  mdcBody,\r\n  mdcCaption,\r\n  mdcDisplay,\r\n  mdcHeadline,\r\n  mdcSubHeading,\r\n  mdcTitle\r\n} from './mdc-typography.js'\r\n\r\nexport {\r\n  mdcTextSection,\r\n  mdcText,\r\n  mdcBody,\r\n  mdcCaption,\r\n  mdcDisplay,\r\n  mdcHeadline,\r\n  mdcSubHeading,\r\n  mdcTitle\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcTextSection,\r\n  mdcText,\r\n  mdcBody,\r\n  mdcCaption,\r\n  mdcDisplay,\r\n  mdcHeadline,\r\n  mdcSubHeading,\r\n  mdcTitle\r\n})\r\n","//\r\n// vue PlugIn\r\n//\r\nimport VueMDCButton from './button'\r\nimport VueMDCCard from './card'\r\nimport VueMDCCheckbox from './checkbox'\r\nimport VueMDCChipSet from './chips'\r\nimport VueMDCDialog from './dialog'\r\nimport VueMDCDrawer from './drawer'\r\nimport VueMDCElevation from './elevation'\r\nimport VueMDCFab from './fab'\r\nimport VueMDCGridList from './grid-list'\r\nimport VueMDCIcon from './icon'\r\nimport VueMDCIconToggle from './icon-toggle'\r\nimport VueMDCLayoutApp from './layout-app'\r\nimport VueMDCLayoutGrid from './layout-grid'\r\nimport VueMDCLinearProgress from './linear-progress'\r\nimport VueMDCList from './list'\r\nimport VueMDCMenu from './menu'\r\nimport VueMDCRadio from './radio'\r\nimport VueMDCRipple from './ripple'\r\nimport VueMDCSelect from './select'\r\nimport VueMDCSlider from './slider'\r\nimport VueMDCSnackbar from './snackbar'\r\nimport VueMDCSwitch from './switch'\r\nimport VueMDCTabs from './tabs'\r\nimport VueMDCTextfield from './textfield'\r\nimport VueMDCTheme from './theme'\r\nimport VueMDCToolbar from './toolbar'\r\nimport VueMDCTopAppBar from './top-app-bar'\r\nimport VueMDCTypography from './typography'\r\n\r\nexport default {\r\n  version: '__VERSION__',\r\n  install(vm) {\r\n    vm.use(VueMDCButton)\r\n    vm.use(VueMDCCard)\r\n    vm.use(VueMDCCheckbox)\r\n    vm.use(VueMDCChipSet)\r\n    vm.use(VueMDCElevation)\r\n    vm.use(VueMDCDialog)\r\n    vm.use(VueMDCDrawer)\r\n    vm.use(VueMDCElevation)\r\n    vm.use(VueMDCFab)\r\n    vm.use(VueMDCGridList)\r\n    vm.use(VueMDCIcon)\r\n    vm.use(VueMDCIconToggle)\r\n    vm.use(VueMDCLayoutApp)\r\n    vm.use(VueMDCLayoutGrid)\r\n    vm.use(VueMDCLinearProgress)\r\n    vm.use(VueMDCList)\r\n    vm.use(VueMDCMenu)\r\n    vm.use(VueMDCRadio)\r\n    vm.use(VueMDCRipple)\r\n    vm.use(VueMDCSelect)\r\n    vm.use(VueMDCSlider)\r\n    vm.use(VueMDCSnackbar)\r\n    vm.use(VueMDCSwitch)\r\n    vm.use(VueMDCTabs)\r\n    vm.use(VueMDCTextfield)\r\n    vm.use(VueMDCTheme)\r\n    vm.use(VueMDCToolbar)\r\n    vm.use(VueMDCTopAppBar)\r\n    vm.use(VueMDCTypography)\r\n  }\r\n}\r\n","export function autoInit(plugin) {\r\n  // Auto-install\r\n  let _Vue = null\r\n  if (typeof window !== 'undefined') {\r\n    _Vue = window.Vue\r\n  } else if (typeof global !== 'undefined') {\r\n    /*global global*/\r\n    _Vue = global.Vue\r\n  }\r\n  if (_Vue) {\r\n    _Vue.use(plugin)\r\n  }\r\n}\r\n","import './styles.scss'\r\nimport { autoInit } from './base'\r\nimport plugin from './index.js'\r\nexport default plugin\r\n\r\nautoInit(plugin)\r\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","BasePlugin","components","key","component","name","CustomElement","createElement","context","props","is","tag","data","children","CustomElementMixin","CustomLink","type","String","default","Object","h","element","babelHelpers.extends","link","parent","$router","$root","$options","on","click","nativeOn","CustomLinkMixin","Boolean","this","to","exact","append","replace","activeClass","exactActiveClass","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","createEvent","initCustomEvent","dispatchEvent","CustomButton","attrs","role","href","CustomButtonMixin","extractIconProp","iconProp","material-icons","Array","reduce","result","value","className","split","textContent","DispatchEventMixin","$emit","event","target","eventTarget","args","eventArgs","$listeners","_this","DispatchFocusMixin","hasFocus","_active","dispatchFocusEvent","setTimeout","_this2","$el","activeElement","contains","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","scope","Math","floor","random","toString","VMAUniqueIdMixin","vma_uid_","_uid","MDCFoundation","adapter","adapter_","cssClasses","handler","varName","strings","numbers","supportsCssVariables_","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","defaultAdapter","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","addClass","isUnbounded","layoutInternal_","FG_ACTIVATION","removeClass","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","registerInteractionHandler","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","deregisterInteractionHandler","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","checkElementMadeActive_","animateActivation_","keyCode","isSurfaceActive","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","requestAnimationFrame","maxDim","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","_this16","BG_FOCUSED","_this17","RippleBase","vm","options","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","MATCHES","disabled","$set","classes","$delete","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","RippleMixin","ripple","init","destroy","MDCComponent","root","foundation","root_","initialize","foundation_","getDefaultFoundation","initialSyncWithDOM","Error","supportsPressRipple","supportsPressRipple_","RippleCapableSurface","unbounded_","setUnbounded","activate","deactivate","MDCRipple","createAdapter","dataset","setUnbounded_","instance","util","classList","add","style","setProperty","attr","CB_PROTO_PROPS","MDCCheckboxFoundation","currentCheckState_","TRANSITION_STATE_INIT","currentAnimationClass_","animEndLatchTimer_","animEndHandler_","handleAnimationEnd","changeHandler_","handleChange","determineCheckState_","getNativeControl_","updateAriaChecked_","UPGRADED","registerChangeHandler","installPropertyChangeHooks_","deregisterChangeHandler","uninstallPropertyChangeHooks_","checked","indeterminate","DISABLED","deregisterAnimationEndHandler","ANIM_END_LATCH_MS","transitionCheckState_","nativeCb","cbProto","getPrototypeOf","controlState","desc","getOwnPropertyDescriptor","validDescriptor","nativeCbDesc","get","set","call","configurable","enumerable","defineProperty","getNativeControl","oldState","newState","forceLayout","getTransitionAnimationClass_","isAttachedToDOM","registerAnimationEndHandler","TRANSITION_STATE_INDETERMINATE","TRANSITION_STATE_CHECKED","TRANSITION_STATE_UNCHECKED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_CHECKED_INDETERMINATE","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","isIndeterminate","setNativeControlAttr","ARIA_CHECKED_ATTR","ARIA_CHECKED_INDETERMINATE_VALUE","removeNativeControlAttr","inputPropDesc","MDCFormFieldFoundation","clickHandler_","handleClick_","activateInputRipple","deactivateInputRipple","eventTypeMap","cssPropertyMap","getAnimationName","eventType","hasProperShape","eventFoundInMaps","map","styleProperty","noPrefix","webkitPrefix","getJavaScriptEventName","transformStyleProperties","getCorrectEventName","getCorrectPropertyName","propertyName","MDCChipFoundation","shouldRemoveOnTrailingIconClick_","hasClass","SELECTED","selected","shouldRemove","CHIP_EXIT","notifyInteraction","eventTargetHasClass","notifyRemoval","chipWidth","getComputedStyleValue","setStyleProperty","LEADING_ICON","addClassToLeadingIcon","HIDDEN_LEADING_ICON","CHECKMARK","removeClassFromLeadingIcon","stopPropagation","notifyTrailingIconInteraction","beginExit","chip","MDCChipSetFoundation","selectedChips_","chipFoundation","CHOICE","deselectAll_","setSelected","index","splice","detail","FILTER","isSelected","deselect","select","removeChip","MDCDialogFoundation","isOpen_","componentClickHandler_","BACKDROP","cancel","dialogClickHandler_","handleDialogClick_","documentKeydownHandler_","timerId_","animationTimerEnd_","handleAnimationTimerEnd_","close","ANIMATING","disableScroll_","registerDocumentKeydownHandler","registerSurfaceInteractionHandler","DIALOG_ANIMATION_TIME_MS","OPEN","enableScroll_","deregisterSurfaceInteractionHandler","deregisterDocumentKeydownHandler","untrapFocusOnSurface","shouldNotify","notifyAccept","notifyCancel","ACCEPT_BTN","accept","CANCEL_BTN","trapFocusOnSurface","addBodyClass","SCROLL_LOCK","removeBodyClass","candidate","candidateIndexAttr","candidateIndex","elementDocument","ownerDocument","basicTabbables","orderedTabbables","isUnavailable","isOffCache","defaultView","isOff","nodeComputedStyle","i","display","parentNode","visibility","createIsUnavailable","candidateSelectors","candidates","querySelectorAll","join","includeContainer","matches","Element","msMatchesSelector","webkitMatchesSelector","candidateSelector","slice","apply","unshift","l","parseInt","getAttribute","isNaN","tabIndex","tagName","tabbableNodes","sort","a","b","listeningFocusTrap","tryFocus","focus","toLowerCase","module","userOptions","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","active","paused","tabEvent","container","querySelector","config","returnFocusOnDeactivate","escapeDeactivates","trap","activateOptions","defaultedActivateOptions","onActivate","deactivateOptions","defaultedDeactivateOptions","returnFocus","onDeactivate","addListeners","pause","getNodeForOption","firstFocusNode","checkFocus","checkClick","checkPointerDown","checkKey","removeListeners","optionName","optionValue","clickOutsideDeactivates","preventDefault","stopImmediatePropagation","blur","shiftKey","hasAttribute","Number","currentFocusIndex","isEscapeEvent","updateTabbableNodes","tabbable","surfaceEl","acceptButtonEl","createFocusTrap","FOCUSABLE_ELEMENTS","MDCSlidableDrawerFoundation","rootCssClass","animatingCssClass","openCssClass","rootCssClass_","animatingCssClass_","openCssClass_","transitionEndHandler_","handleTransitionEnd_","inert_","componentTouchStartHandler_","handleTouchStart_","componentTouchMoveHandler_","handleTouchMove_","componentTouchEndHandler_","handleTouchEnd_","hasNecessaryDom","detabinate_","registerDrawerInteractionHandler","deregisterDrawerInteractionHandler","registerTransitionEndHandler","retabinate_","notifyOpen","notifyClose","elements","getFocusableElements","saveElementTabState","makeElementUntabbable","restoreElementTabState","pointerType","direction_","isRtl","drawerWidth_","getDrawerWidth","startX_","touches","currentX_","updateRaf_","updateDrawer_","bind","prepareForTouchEnd_","abs","newPosition_","open","setTranslateX","isRootTransitioningEventTarget_","deregisterTransitionEndHandler","min","MDCPersistentDrawerFoundation","isDrawer","TAB_DATA","TAB_DATA_HANDLED","storedTransformPropertyName_","remapEvent","eventName","getTransformPropertyName","transformPropertyName","setAttribute","removeAttribute","MDCTemporaryDrawerFoundation","newOpacity","MDCGridListFoundation","alignCenter","resizeFrame_","alignCenter_","getNumberOfTiles","gridWidth","getOffsetWidth","itemWidth","getOffsetWidthForTileAtIndex","tilesWidth","setStyleForTilesElement","text","MDCIconToggleFoundation","on_","disabled_","savedTabIndex_","toggleOnData_","toggleOffData_","toggleFromEvt_","isHandlingKeydown_","keydownHandler_","isSpace","keyupHandler_","refreshToggleData","getTabIndex","DATA_TOGGLE_ON","DATA_TOGGLE_OFF","parseJsonDataAttr_","toggle","isOn","notifyChange","ARIA_LABEL","ARIA_PRESSED","setAttr","classToRemove","cssClass","content","label","setText","dataAttr","val","getAttr","JSON","parse","isDisabled","ARIA_DISABLED","setTabIndex","rmAttr","keyboardKey","IconToggleState","MDCLinearProgressFoundation","determinate_","INDETERMINATE_CLASS","reverse_","REVERSED_CLASS","progress_","isDeterminate","setScale_","getPrimaryBar","getBuffer","isReversed","CLOSED_CLASS","scaleValue","transformStyleProperty","setStyle","attributeName","origin","position","CornerBit","Corner","MDCMenuFoundation","handlePossibleSelected_","handleKeyboardDown_","handleKeyboardUp_","documentClickHandler_","handleDocumentClick_","openAnimationEndTimerId_","closeAnimationEndTimerId_","selectedTriggerTimerId_","animationRequestId_","dimensions_","itemHeight_","anchorCorner_","TOP_START","anchorMargin_","right","bottom","measures_","selectedIndex_","rememberSelection_","quickOpen_","keyDownWithinMenu_","deregisterBodyClickHandler","corner","margin","rememberSelection","setSelectedIndex","quickOpen","focusIndex","focusItemAtIndex","isFocused","getIndexForEventTarget","altKey","ctrlKey","metaKey","isTab","isArrowUp","isArrowDown","isEnter","focusedItemIndex","getFocusedItemIndex","lastItemIndex","getNumberOfItems","isEscape","getAttributeForEventTarget","ARIA_DISABLED_ATTR","targetIndex","notifySelected","SELECTED_TRIGGER_DELAY","anchorRect","getAnchorDimensions","viewport","getWindowDimensions","TOP_LEFT","viewportDistance","anchorHeight","anchorWidth","menuHeight","menuWidth","isBottomAligned","availableTop","bottomOverflow","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","MARGIN_TO_EDGE","avoidVerticalOverlap","canOverlapVertically","maxHeight","hasAnchor","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuHeight","getMenuMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","ANCHOR_TO_MENU_WIDTH_RATIO","OFFSET_TO_MENU_HEIGHT_RATIO","verticalOffsetPercent","originPercent","setTransformOrigin","setPosition","setMaxHeight","saveFocus","ANIMATING_OPEN","_this3","getInnerDimensions","autoPosition_","focusOnOpen_","registerBodyClickHandler","TRANSITION_OPEN_DURATION","ANIMATING_CLOSED","TRANSITION_CLOSE_DURATION","restoreFocus","prevSelectedIndex","rmAttrForOptionAtIndex","rmClassForOptionAtIndex","SELECTED_LIST_ITEM","setAttrForOptionAtIndex","addClassForOptionAtIndex","MDCRadioFoundation","shouldFloat","labelWidth","MDCSelectFoundation","optionHasValue","getValue","floatLabel","notchOutline","activateBottomLine","deactivateBottomLine","openNotch","hasOutline","hasLabel","labelScale","LABEL_SCALE","getLabelWidth","closeOutline","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","shouldShake","LABEL_SHAKE","LABEL_FLOAT_ABOVE","MDCLineRippleFoundation","handleTransitionEnd","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","isDeactivating","MDCNotchedOutlineFoundation","notchWidth","OUTLINE_NOTCHED","updateSvgPath_","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","getHeight","cornerWidth","leadingStrokeLength","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr","KEY_IDS","numMarkers","MOVE_EVENT_MAP","DOWN_EVENTS","UP_EVENTS","MDCSliderFoundation","rect_","NaN","active_","inTransit_","isDiscrete_","hasTrackMarker_","handlingThumbTargetEvt_","min_","max_","step_","value_","preventFocusState_","updateUIFrame_","thumbContainerPointerHandler_","interactionStartHandler_","handleDown_","handleKeydown_","handleFocus_","handleBlur_","IS_DISCRETE","HAS_TRACK_MARKER","evtName","registerThumbContainerInteractionHandler","getStep","deregisterThumbContainerInteractionHandler","getMin","getMax","step","indivisible","ceil","removeTrackMarkers","appendTrackMarkers","lastStepRatio","flex","setLastTrackMarkersStyleProperty","updateUIForCurrentValue_","setValue_","ARIA_VALUEMAX","setupTrackMarker","ARIA_VALUEMIN","toggleClass_","setInTransit_","setActive_","moveHandler","handleMove_","upHandler","handleUp_","deregisterBodyInteractionHandler","registerBodyInteractionHandler","setValueFromEvt_","targetTouches","getPageX_","computeValueFromPageX_","pctComplete","isRTL","keyId","getKeyId_","getValueForKeyId_","FOCUS","kbdEvt","delta","PAGE_FACTOR","shouldFireInput","force","valueSetToBoundary","quantize_","ARIA_VALUENOW","notifyInput","setMarkerValue","translatePx","transformProp","transitionendEvtName","onTransitionEnd","setThumbContainerStyleProperty","setTrackStyleProperty","ACTIVE","inTransit","IN_TRANSIT","shouldBePresent","MDCSnackbarFoundation","actionWasClicked_","dismissOnAction_","firstFocus_","pointerDownRecognized_","snackbarHasFocus_","snackbarData_","queue_","actionClickHandler_","invokeAction_","visibilitychangeHandler_","timeoutId_","visibilityIsHidden","cleanup_","timeout","MESSAGE_TIMEOUT","interactionHandler_","handlePossibleTabKeyboardFocus_","registerActionClickHandler","setAriaHidden","setActionAriaHidden","deregisterActionClickHandler","deregisterCapturedBlurHandler","deregisterVisibilityChangeHandler","deregisterCapturedInteractionHandler","dismissOnAction","message","actionHandler","actionText","registerVisibilityChangeHandler","registerCapturedBlurHandler","registerCapturedInteractionHandler","MULTILINE","ACTION_ON_BOTTOM","setMessageText","multiline","actionOnBottom","setActionText","actionHandler_","setActionHidden_","unsetAriaHidden","notifyShow","setFocusOnAction_","setFocus","notifyHide","showNext_","show","shift","isHidden","unsetActionAriaHidden","MDCSwitchFoundation","isNativeControlChecked","setNativeControlChecked","updateCheckedStyling_","isNativeControlDisabled","setNativeControlDisabled","isChecked","CHECKED","MDCTabFoundation","computedWidth_","computedLeft_","isActive_","preventDefaultOnClick_","isActive","preventDefaultOnClick","getOffsetLeft","MDCTabBarFoundation","isIndicatorShown_","activeTabIndex_","bindOnMDCTabSelectedEvent","activeTabIndex","findActiveTabIndex_","unbindOnMDCTabSelectedEvent","forEachTabIndex_","measureTabAtIndex","layoutIndicator_","isIndicatorFirstRender","setStyleForIndicator","transformValue","getComputedLeftForTabAtIndex","getComputedWidthForTabAtIndex","getOffsetWidthForIndicator","isTabActiveAtIndex","iterator","numTabs","getNumberOfTabs","prevActiveTabIndex","setTabActiveAtIndex","MDCTextFieldHelperTextFoundation","setContent","isPersistent","HELPER_TEXT_PERSISTENT","isValidation","HELPER_TEXT_VALIDATION_MSG","removeAttr","ARIA_HIDDEN","inputIsValid","helperTextIsPersistent","validationMsgNeedsDisplay","ROLE","hide_","MDCTextFieldIconFoundation","handleInteraction","ICON_ROLE","notifyIconAction","observer","VALIDATION_ATTR_WHITELIST","MDCTextFieldFoundation","foundationMap","helperText_","helperText","icon_","icon","isFocused_","receivedUserInput_","useCustomValidityChecking_","isValid_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","attributesList","handleValidationAttributeChange","validationObserver_","isValid","isBadInput_","registerInputInteractionHandler","registerTextFieldInteractionHandler","registerValidationAttributeChangeHandler","deregisterInputInteractionHandler","deregisterTextFieldInteractionHandler","deregisterValidationAttributeChangeHandler","getNativeInput","styleValidity_","DENSE","DENSE_LABEL_SCALE","styleFocused_","activateLineRipple","shakeLabel","showToScreenReader","targetClientRect","evtCoords","clientX","clientY","setLineRippleTransformOrigin","deactivateLineRipple","shouldRemoveLabelFloat","getNativeInput_","isNativeInputValid_","styleDisabled_","setAriaLabel","validity","badInput","valid","INVALID","setValidity","FOCUSED","setDisabled","MDCToolbarFoundation","checkRowHeight_","scrollHandler_","updateToolbarStyles_","checkRowHeightFrame_","scrollFrame_","executedLastChange_","calculations_","fixed_","fixedLastrow_","hasFlexibleRow_","useFlexDefaultBehavior_","FIXED","FIXED_LASTROW","TOOLBAR_ROW_FLEXIBLE","FLEXIBLE_DEFAULT_BEHAVIOR","initKeyRatio_","setKeyHeights_","registerScrollHandler","deregisterScrollHandler","setStyleForFixedAdjustElement","toolbarHeight","scrollTop","flexibleExpansionHeight","newToolbarRowHeight","getRowHeight_","toolbarRowHeight","toolbarRatio","flexibleExpansionRatio","maxTranslateYDistance","maxTranslateYRatio","scrollThreshold","scrollThresholdRatio","updateAdjustElementStyles","getViewportScrollY","hasScrolledOutOfThreshold","scrolledOutOfThreshold_","getFlexibleExpansionRatio_","updateToolbarFlexibleState_","updateToolbarFixedState_","updateFlexibleRowElementStyles_","firstRowMaxRatio","getFirstRowElementOffsetHeight","getOffsetHeight","breakpoint","TOOLBAR_MOBILE_BREAKPOINT","getViewportWidth","TOOLBAR_ROW_MOBILE_HEIGHT","TOOLBAR_ROW_HEIGHT","FLEXIBLE_MAX","FLEXIBLE_MIN","translateDistance","FIXED_AT_LAST_ROW","setStyleForFlexibleRowElement","updateElementStylesDefaultBehavior_","maxTitleSize","MAX_TITLE_SIZE","minTitleSize","MIN_TITLE_SIZE","currentTitleSize","setStyleForTitleElement","MDCTopAppBarBaseFoundation","property","navClickHandler_","notifyNavigationIconClicked","registerNavigationIconInteractionHandler","deregisterNavigationIconInteractionHandler","MDCShortTopAppBarFoundation","isCollapsed","shortAppBarScrollHandler_","isAlwaysCollapsed","SHORT_COLLAPSED_CLASS","getTotalActionItems","SHORT_HAS_ACTION_ITEM_CLASS","mdcTypoMixin","typo","$attrs","$slots","mdcTypoPropMixin","defaultTag","defaultTypo","validTypos","mdcTextSection","mdcText","mdcDisplay","mdcHeadline","mdcTitle","mdcSubHeading","use","VueMDCButton","VueMDCCard","VueMDCCheckbox","VueMDCChipSet","VueMDCElevation","VueMDCDialog","VueMDCDrawer","VueMDCFab","VueMDCGridList","VueMDCIcon","VueMDCIconToggle","VueMDCLayoutApp","VueMDCLayoutGrid","VueMDCLinearProgress","VueMDCList","VueMDCMenu","VueMDCRadio","VueMDCRipple","VueMDCSelect","VueMDCSlider","VueMDCSnackbar","VueMDCSwitch","VueMDCTabs","VueMDCTextfield","VueMDCTheme","VueMDCToolbar","VueMDCTopAppBar","VueMDCTypography","plugin","_Vue","Vue","global"],"mappings":"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"}
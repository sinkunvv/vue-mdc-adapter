{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/base/index.js","../../node_modules/@material/select/adapter.js","../../node_modules/@material/select/constants.js","../../node_modules/@material/select/foundation.js","../../node_modules/@material/floating-label/adapter.js","../../node_modules/@material/floating-label/constants.js","../../node_modules/@material/floating-label/foundation.js","../../components/select/mdc-select-label.vue","../../node_modules/@material/line-ripple/adapter.js","../../node_modules/@material/line-ripple/constants.js","../../node_modules/@material/line-ripple/foundation.js","../../components/select/mdc-select-line-ripple.vue","../../node_modules/@material/notched-outline/adapter.js","../../node_modules/@material/notched-outline/constants.js","../../node_modules/@material/notched-outline/foundation.js","../../components/select/mdc-select-notched-outline.vue","../../components/select/mdc-select.vue","../../components/select/index.js"],"sourcesContent":["export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","/* global CustomEvent */\r\n\r\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\r\n  let evt\r\n  if (typeof CustomEvent === 'function') {\r\n    evt = new CustomEvent(evtType, {\r\n      detail: evtData,\r\n      bubbles: shouldBubble\r\n    })\r\n  } else {\r\n    evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\r\n  }\r\n  el.dispatchEvent(evt)\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\nimport MDCComponent from './component';\n\nexport {MDCFoundation, MDCComponent};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCSelectAdapter {\n  /**\n   * Adds class to root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Activates the bottom line, showing a focused state.\n   */\n  activateBottomLine() {}\n\n  /**\n   * Deactivates the bottom line.\n   */\n  deactivateBottomLine() {}\n\n  /**\n   * Returns the selected value of the select element.\n   * @return {string}\n   */\n  getValue() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Floats label determined based off of the shouldFloat argument.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns width of label in pixels, if the label exists.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Updates SVG Path and outline element based on the\n   * label element width and RTL context, if the outline exists.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  notchOutline(labelWidth, isRtl) {}\n\n  /**\n   * Closes notch in outline element, if the outline exists.\n   */\n  closeOutline() {}\n}\n\nexport default MDCSelectAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  OUTLINED: 'mdc-select--outlined',\n};\n\n/** @enum {string} */\nconst strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n/* eslint-disable no-unused-vars */\nimport MDCSelectAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectAdapter>}\n * @final\n */\nclass MDCSelectFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCSelectAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => false,\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      getValue: () => {},\n      isRtl: () => false,\n      hasLabel: () => false,\n      floatLabel: (/* value: boolean */) => {},\n      getLabelWidth: () => {},\n      hasOutline: () => false,\n      notchOutline: (/* labelWidth: number, isRtl: boolean */) => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Updates the styles of the select to show the disasbled state.\n   * @param {boolean} disabled\n   */\n  updateDisabledStyle(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /**\n   * Handles value changes, via change event or programmatic updates.\n   */\n  handleChange() {\n    const optionHasValue = this.adapter_.getValue().length > 0;\n    this.adapter_.floatLabel(optionHasValue);\n    this.notchOutline(optionHasValue);\n  }\n\n  /**\n   * Handles focus events from root element.\n   */\n  handleFocus() {\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n  }\n\n  /**\n   * Handles blur events from root element.\n   */\n  handleBlur() {\n    this.handleChange();\n    this.adapter_.deactivateBottomLine();\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const labelScale = numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n}\n\nexport default MDCSelectFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","<template>\r\n  <label\r\n    :class=\"labelClasses\"\r\n    class=\"mdc-floating-label\">\r\n    <slot />\r\n  </label>\r\n</template>\r\n\r\n<script>\r\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\r\n\r\nexport default {\r\n  name: 'mdc-select-label',\r\n  data() {\r\n    return {\r\n      labelClasses: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCFloatingLabelFoundation({\r\n      addClass: className => {\r\n        this.$set(this.labelClasses, className, true)\r\n      },\r\n      removeClass: className => {\r\n        this.$delete(this.labelClasses, className)\r\n      },\r\n      getWidth: () => this.$el.offsetWidth,\r\n      registerInteractionHandler: (evtType, handler) => {\r\n        this.$el.addEventListener(evtType, handler)\r\n      },\r\n      deregisterInteractionHandler: (evtType, handler) => {\r\n        this.$el.removeEventListener(evtType, handler)\r\n      }\r\n    })\r\n    this.foundation.init()\r\n  },\r\n  beforeDestroy() {\r\n    let foundation = this.foundation\r\n    this.foundation = null\r\n    foundation.destroy()\r\n  }\r\n}\r\n</script>\r\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","<template>\r\n  <div\r\n    :class=\"lineClasses\"\r\n    :style=\"lineStyles\"\r\n    class=\"mdc-line-ripple\"/>\r\n</template>\r\n\r\n<script>\r\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\r\n\r\nexport default {\r\n  name: 'mdc-select-line-ripple',\r\n  data() {\r\n    return {\r\n      lineClasses: {},\r\n      lineStyles: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCLineRippleFoundation({\r\n      addClass: className => {\r\n        this.$set(this.lineClasses, className, true)\r\n      },\r\n      removeClass: className => {\r\n        this.$delete(this.lineClasses, className)\r\n      },\r\n      hasClass: className => {\r\n        this.$el.classList.contains(className)\r\n      },\r\n      setStyle: (name, value) => {\r\n        this.$set(this.lineStyles, name, value)\r\n      },\r\n      registerEventHandler: (evtType, handler) => {\r\n        this.$el.addEventListener(evtType, handler)\r\n      },\r\n      deregisterEventHandler: (evtType, handler) => {\r\n        this.$el.removeEventListener(evtType, handler)\r\n      }\r\n    })\r\n    this.foundation.init()\r\n  },\r\n  beforeDestroy() {\r\n    let foundation = this.foundation\r\n    this.foundation = null\r\n    foundation.destroy()\r\n  }\r\n}\r\n</script>\r\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","<template>\r\n  <div>\r\n    <div\r\n      ref=\"outlined\"\r\n      :class=\"outlinedClasses\"\r\n      class=\"mdc-notched-outline\">\r\n      <svg>\r\n        <path\r\n          ref=\"outlinedPath\"\r\n          class=\"mdc-notched-outline__path\"/>\r\n      </svg>\r\n    </div>\r\n    <div\r\n      ref=\"outlinedIdle\"\r\n      class=\"mdc-notched-outline__idle\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MDCnotchedOutlineFoundationFoundation from '@material/notched-outline/foundation'\r\n\r\nexport default {\r\n  name: 'mdc-select-notched-outline',\r\n  data() {\r\n    return {\r\n      outlinedClasses: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCnotchedOutlineFoundationFoundation({\r\n      getWidth: () => this.$refs.outlined.offsetWidth,\r\n      getHeight: () => this.$refs.outlined.offsetHeight,\r\n      addClass: className => {\r\n        this.$set(this.outlinedClasses, className, true)\r\n      },\r\n      removeClass: className => {\r\n        this.$delete(this.outlinedClasses, className)\r\n      },\r\n      setOutlinePathAttr: value => {\r\n        const path = this.$refs.outlinedPath\r\n        path.setAttribute('d', value)\r\n      },\r\n      getIdleOutlineStyleValue: propertyName => {\r\n        return window\r\n          .getComputedStyle(this.$refs.outlinedIdle)\r\n          .getPropertyValue(propertyName)\r\n      }\r\n    })\r\n    this.foundation.init()\r\n  },\r\n  beforeDestroy() {\r\n    let foundation = this.foundation\r\n    this.foundation = null\r\n    foundation.destroy()\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div\r\n    :id=\"id\"\r\n    :class=\"rootClasses\"\r\n    :style=\"styles\"\r\n    class=\"mdc-select\">\r\n    <select\r\n      ref=\"native_control\"\r\n      :disabled=\"disabled\"\r\n      v-bind=\"$attrs\"\r\n      class=\"mdc-select__native-control\"\r\n      v-on=\"listeners\">\r\n      <option\r\n        v-if=\"!!label\"\r\n        class=\"mdc-option\"\r\n        value=\"\"\r\n        disabled\r\n        selected/>\r\n      <slot/>\r\n    </select>\r\n    <!-- label -->\r\n    <select-label\r\n      v-if=\"label\"\r\n      ref=\"label\">{{ label }}</select-label>\r\n    <!-- line ripple -->\r\n    <select-line-riple\r\n      v-if=\"!outlined\"\r\n      ref=\"line\"/>\r\n    <!-- outline -->\r\n    <select-notched-outline\r\n      v-if=\"outlined\"\r\n      ref=\"outline\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MDCSelectFoundation from '@material/select/foundation'\r\nimport { RippleBase } from '../ripple'\r\n\r\nimport SelectLabel from './mdc-select-label.vue'\r\nimport SelectLineRiple from './mdc-select-line-ripple.vue'\r\nimport SelectNotchedOutline from './mdc-select-notched-outline.vue'\r\n\r\nexport default {\r\n  name: 'mdc-select',\r\n  components: {\r\n    SelectLabel,\r\n    SelectLineRiple,\r\n    SelectNotchedOutline\r\n  },\r\n  inheritAttrs: false,\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    value: String,\r\n    disabled: Boolean,\r\n    label: String,\r\n    outlined: Boolean,\r\n    id: { type: String }\r\n  },\r\n  data() {\r\n    return {\r\n      styles: {},\r\n      classes: {}\r\n    }\r\n  },\r\n  computed: {\r\n    rootClasses() {\r\n      return {\r\n        'mdc-select--box': !this.outlined,\r\n        'mdc-select--outlined': this.outlined,\r\n        ...this.classes\r\n      }\r\n    },\r\n    listeners() {\r\n      return {\r\n        ...this.$listeners,\r\n        change: event => this.onChange(event)\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    disabled(value) {\r\n      this.foundation && this.foundation.updateDisabledStyle(value)\r\n    },\r\n    value: 'refreshIndex'\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCSelectFoundation({\r\n      addClass: className => this.$set(this.classes, className, true),\r\n      removeClass: className => this.$delete(this.classes, className),\r\n      hasClass: className => this.$el.classList.contains(className),\r\n      activateBottomLine: () => {\r\n        if (this.$refs.line) {\r\n          this.$refs.line.foundation.activate()\r\n        }\r\n      },\r\n      deactivateBottomLine: () => {\r\n        if (this.$refs.line) {\r\n          this.$refs.line.foundation.deactivate()\r\n        }\r\n      },\r\n      getValue: () => this.$refs.native_control.value,\r\n      isRtl: () => {\r\n        return (\r\n          window.getComputedStyle(this.$el).getPropertyValue('direction') ===\r\n          'rtl'\r\n        )\r\n      },\r\n      notchOutline: (labelWidth, isRtl) => {\r\n        if (this.$refs.outline) {\r\n          this.$refs.outline.foundation.notch(labelWidth, isRtl)\r\n        }\r\n      },\r\n      closeOutline: () => {\r\n        if (this.$refs.outline) {\r\n          this.$refs.outline.foundation.closeNotch()\r\n        }\r\n      },\r\n      hasOutline: () => !!this.$refs.outline,\r\n      floatLabel: value => {\r\n        if (this.$refs.label) {\r\n          this.$refs.label.foundation.float(value)\r\n        }\r\n      },\r\n      hasLabel: () => !!this.$refs.label,\r\n      getLabelWidth: () => {\r\n        if (this.$refs.label) {\r\n          return this.$refs.label.foundation.getWidth()\r\n        }\r\n      }\r\n    })\r\n\r\n    this.foundation.init()\r\n    this.foundation.handleChange()\r\n\r\n    // initial sync with DOM\r\n    this.refreshIndex()\r\n    this.slotObserver = new MutationObserver(() => this.refreshIndex())\r\n    this.slotObserver.observe(this.$refs.native_control, {\r\n      childList: true,\r\n      subtree: true\r\n    })\r\n\r\n    this.ripple = new RippleBase(this)\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.slotObserver.disconnect()\r\n\r\n    let foundation = this.foundation\r\n    this.foundation = null\r\n    foundation.destroy()\r\n\r\n    this.ripple && this.ripple.destroy()\r\n  },\r\n  methods: {\r\n    refreshIndex() {\r\n      const options = [...this.$refs.native_control.querySelectorAll('option')]\r\n\r\n      const idx = options.findIndex(({ value }) => {\r\n        return this.value === value\r\n      })\r\n\r\n      if (this.$refs.native_control.selectedIndex !== idx) {\r\n        this.$refs.native_control.selectedIndex = idx\r\n        this.foundation.handleChange()\r\n      }\r\n    },\r\n    onChange(event) {\r\n      this.foundation.handleChange()\r\n      this.$emit('change', event.target.value)\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { BasePlugin } from '../base'\r\nimport mdcSelect from './mdc-select.vue'\r\n\r\nexport { mdcSelect }\r\n\r\nexport default BasePlugin({\r\n  mdcSelect\r\n})\r\n"],"names":["BasePlugin","components","key","component","name","scope","Math","floor","random","toString","MDCFoundation","adapter","adapter_","MDCComponent","root","foundation","undefined","root_","args","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","evt","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","MDCSelectAdapter","className","shouldFloat","labelWidth","isRtl","cssClasses","strings","numbers","MDCSelectFoundation","babelHelpers.extends","defaultAdapter","disabled","DISABLED","addClass","removeClass","optionHasValue","getValue","length","floatLabel","notchOutline","activateBottomLine","handleChange","deactivateBottomLine","openNotch","hasOutline","hasLabel","labelScale","LABEL_SCALE","getLabelWidth","closeOutline","MDCFloatingLabelAdapter","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","registerInteractionHandler","deregisterInteractionHandler","getWidth","shouldShake","LABEL_SHAKE","LABEL_FLOAT_ABOVE","MDCLineRippleAdapter","propertyName","value","MDCLineRippleFoundation","transitionEndHandler_","handleTransitionEnd","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","setStyle","isDeactivating","hasClass","MDCNotchedOutlineAdapter","MDCNotchedOutlineFoundation","notchWidth","OUTLINE_NOTCHED","updateSvgPath_","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","width","height","getHeight","cornerWidth","leadingStrokeLength","abs","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr"],"mappings":"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"}
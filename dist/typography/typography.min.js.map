{"version":3,"file":"typography.min.js","sources":["../../components/typography/mdc-typography.js","../../components/base/uniqueid-mixin.js","../../components/base/base-plugin.js","../../components/base/auto-init.js","../../components/typography/entry.js"],"sourcesContent":["const typos = [\r\n  'headline1',\r\n  'headline2',\r\n  'headline3',\r\n  'headline4',\r\n  'headline5',\r\n  'headline6',\r\n  'subtitle1',\r\n  'subtitle2',\r\n  'body1',\r\n  'body2',\r\n  'caption',\r\n  'button',\r\n  'overline'\r\n]\r\n\r\nexport const mdcTypoMixin = name => {\r\n  return {\r\n    render(createElement) {\r\n      return createElement(\r\n        this.tag,\r\n        {\r\n          class: {\r\n            'mdc-typo': true,\r\n            [name]: true,\r\n            [`mdc-typography--${this.typo}`]: true\r\n          },\r\n          attrs: this.$attrs,\r\n          on: this.$listeners\r\n        },\r\n        this.$slots.default\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport function mdcTypoPropMixin(defaultTag, defaultTypo, validTypos) {\r\n  return {\r\n    props: {\r\n      tag: {\r\n        type: String,\r\n        default: defaultTag\r\n      },\r\n      typo: {\r\n        type: String,\r\n        default: defaultTypo,\r\n        validator: value => validTypos.indexOf(value) !== -1\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const mdcTextSection = {\r\n  name: 'mdc-text-section',\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: 'section'\r\n    }\r\n  },\r\n  render(createElement) {\r\n    return createElement(\r\n      this.tag,\r\n      {\r\n        class: {\r\n          'mdc-typography': true,\r\n          'mdc-text-section': true\r\n        },\r\n        attrs: this.$attrs,\r\n        on: this.$listeners\r\n      },\r\n      this.$slots.default\r\n    )\r\n  }\r\n}\r\n\r\nexport const mdcText = {\r\n  name: 'mdc-text',\r\n  mixins: [mdcTypoMixin('mdc-text'), mdcTypoPropMixin('p', 'body1', typos)]\r\n}\r\n\r\nexport const mdcDisplay = {\r\n  name: 'mdc-display',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-display'),\r\n    mdcTypoPropMixin('h1', 'headline4', [\r\n      'headline4',\r\n      'headline3',\r\n      'headline2',\r\n      'headline1'\r\n    ])\r\n  ]\r\n}\r\n\r\nexport const mdcHeadline = {\r\n  name: 'mdc-headline',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-headline'),\r\n    mdcTypoPropMixin('h2', 'headline5', ['headline5'])\r\n  ]\r\n}\r\n\r\nexport const mdcTitle = {\r\n  name: 'mdc-title',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-title'),\r\n    mdcTypoPropMixin('h3', 'headline6', ['headline6'])\r\n  ]\r\n}\r\n\r\nexport const mdcSubHeading = {\r\n  name: 'mdc-subheading',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-subheading'),\r\n    mdcTypoPropMixin('h4', 'subtitle2', ['subtitle1', 'subtitle2'])\r\n  ]\r\n}\r\n\r\nexport const mdcBody = {\r\n  name: 'mdc-body',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-body'),\r\n    mdcTypoPropMixin('p', 'body1', ['body1', 'body2'])\r\n  ]\r\n}\r\n\r\nexport const mdcCaption = {\r\n  name: 'mdc-caption',\r\n  mixins: [\r\n    mdcTypoMixin('mdc-caption'),\r\n    mdcTypoPropMixin('span', 'caption', ['caption'])\r\n  ]\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","export function autoInit(plugin) {\r\n  // Auto-install\r\n  let _Vue = null\r\n  if (typeof window !== 'undefined') {\r\n    _Vue = window.Vue\r\n  } else if (typeof global !== 'undefined') {\r\n    /*global global*/\r\n    _Vue = global.Vue\r\n  }\r\n  if (_Vue) {\r\n    _Vue.use(plugin)\r\n  }\r\n}\r\n","import './styles.scss'\r\nimport { autoInit } from '../base'\r\nimport plugin from './index.js'\r\nexport default plugin\r\n\r\nautoInit(plugin)\r\n"],"names":["mdcTypoMixin","Math","floor","random","toString","createElement","this","tag","name","typo","$attrs","$listeners","$slots","default","mdcTypoPropMixin","defaultTag","defaultTypo","validTypos","String","indexOf","value","components","mdcTextSection","mdcText","mdcDisplay","mdcHeadline","mdcTitle","mdcSubHeading","mdcBody","mdcCaption","key","component","plugin","_Vue","window","Vue","global","use"],"mappings":";;;;;;;;;yTAgBaA,GCfXC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,YAAaE,WDezB,mCAEjBC,gBACEA,EACLC,KAAKC,2BAGW,OACXC,GAAO,0BACYF,KAAKG,MAAS,YAE7BH,KAAKI,UACRJ,KAAKK,YAEXL,KAAKM,OAAOC,aAMb,SAASC,EAAiBC,EAAYC,EAAaC,2BAI5CC,eACGH,cAGHG,eACGF,YACE,mBAAwC,IAA/BC,EAAWE,QAAQC,OAMxC,IEpDoBC,EFoDdC,QACL,oCAGIJ,eACG,4BAGNb,UACEA,EACLC,KAAKC,8BAGiB,sBACE,SAEfD,KAAKI,UACRJ,KAAKK,YAEXL,KAAKM,OAAOC,WAKLU,QACL,mBACGvB,EAAa,YAAac,EAAiB,IAAK,SA7EzD,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,QACA,QACA,UACA,SACA,eAoEWU,QACL,sBAEJxB,EAAa,eACbc,EAAiB,KAAM,aACrB,YACA,YACA,YACA,gBAKOW,QACL,uBAEJzB,EAAa,gBACbc,EAAiB,KAAM,aAAc,gBAI5BY,QACL,oBAEJ1B,EAAa,aACbc,EAAiB,KAAM,aAAc,gBAI5Ba,QACL,yBAEJ3B,EAAa,kBACbc,EAAiB,KAAM,aAAc,YAAa,gBAIzCc,QACL,mBAEJ5B,EAAa,YACbc,EAAiB,IAAK,SAAU,QAAS,YAIhCe,QACL,sBAEJ7B,EAAa,eACbc,EAAiB,OAAQ,WAAY,yBEhI5B,iBACA,gBACF,IAAIgB,KAAOT,EAAY,KACtBU,EAAYV,EAAWS,KACxBC,UAAUA,EAAUvB,KAAMuB,gBANVV,oHCApB,SAAkBW,OAEnBC,EAAO,KACW,oBAAXC,SACFA,OAAOC,IACa,oBAAXC,WAETA,OAAOD,KAEZF,KACGI,IAAIL,ICLJA"}
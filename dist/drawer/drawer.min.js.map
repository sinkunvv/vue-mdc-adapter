{"version":3,"file":"drawer.min.js","sources":["../../components/base/custom-element.js","../../components/base/custom-link.js","../../components/base/dispatch-event-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/drawer/slidable/constants.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/drawer/slidable/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/drawer/persistent/constants.js","../../node_modules/@material/drawer/persistent/foundation.js","../../node_modules/@material/drawer/util.js","../../node_modules/@material/drawer/temporary/constants.js","../../node_modules/@material/drawer/temporary/foundation.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/ripple/mdc-ripple-base.js","../../components/base/base-plugin.js","../../components/base/auto-init.js","../../components/drawer/entry.js"],"sourcesContent":["export const CustomElement = {\r\n  functional: true,\r\n  render(createElement, context) {\r\n    return createElement(\r\n      context.props.is || context.props.tag || 'div',\r\n      context.data,\r\n      context.children\r\n    )\r\n  }\r\n}\r\n\r\nexport const CustomElementMixin = {\r\n  components: {\r\n    CustomElement\r\n  }\r\n}\r\n","export const CustomLink = {\r\n  name: 'custom-link',\r\n  functional: true,\r\n  props: {\r\n    tag: { type: String, default: 'a' },\r\n    link: Object\r\n  },\r\n  render(h, context) {\r\n    let element\r\n    let data = Object.assign({}, context.data)\r\n\r\n    if (context.props.link && context.parent.$router) {\r\n      // router-link case\r\n      element = context.parent.$root.$options.components['router-link']\r\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\r\n      if (data.on.click) {\r\n        data.nativeOn = { click: data.on.click }\r\n      }\r\n    } else {\r\n      // element fallback\r\n      element = context.props.tag\r\n    }\r\n\r\n    return h(element, data, context.children)\r\n  }\r\n}\r\n\r\nexport const CustomLinkMixin = {\r\n  props: {\r\n    to: [String, Object],\r\n    exact: Boolean,\r\n    append: Boolean,\r\n    replace: Boolean,\r\n    activeClass: String,\r\n    exactActiveClass: String\r\n  },\r\n  computed: {\r\n    link() {\r\n      return (\r\n        this.to && {\r\n          to: this.to,\r\n          exact: this.exact,\r\n          append: this.append,\r\n          replace: this.replace,\r\n          activeClass: this.activeClass,\r\n          exactActiveClass: this.exactActiveClass\r\n        }\r\n      )\r\n    }\r\n  },\r\n  components: {\r\n    CustomLink\r\n  }\r\n}\r\n","export const DispatchEventMixin = {\r\n  props: {\r\n    event: String,\r\n    'event-target': Object,\r\n    'event-args': Array\r\n  },\r\n  methods: {\r\n    dispatchEvent(evt) {\r\n      evt && this.$emit(evt.type, evt)\r\n      if (this.event) {\r\n        let target = this.eventTarget || this.$root\r\n        let args = this.eventArgs || []\r\n        target.$emit(this.event, ...args)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    listeners() {\r\n      return {\r\n        ...this.$listeners,\r\n        click: e => this.dispatchEvent(e)\r\n      }\r\n    }\r\n  }\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const FOCUSABLE_ELEMENTS =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), ' +\n  'button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]';\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n\nexport class MDCSlidableDrawerFoundation extends MDCFoundation {\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      hasNecessaryDom: () => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      setTranslateX: (/* value: number | null */) => {},\n      getFocusableElements: () => /* NodeList */ {},\n      saveElementTabState: (/* el: Element */) => {},\n      restoreElementTabState: (/* el: Element */) => {},\n      makeElementUntabbable: (/* el: Element */) => {},\n      notifyOpen: () => {},\n      notifyClose: () => {},\n      isRtl: () => /* boolean */ false,\n      getDrawerWidth: () => /* number */ 0,\n    };\n  }\n\n  constructor(adapter, rootCssClass, animatingCssClass, openCssClass) {\n    super(Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, adapter));\n\n    this.rootCssClass_ = rootCssClass;\n    this.animatingCssClass_ = animatingCssClass;\n    this.openCssClass_ = openCssClass;\n\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n\n    this.inert_ = false;\n\n    this.componentTouchStartHandler_ = (evt) => this.handleTouchStart_(evt);\n    this.componentTouchMoveHandler_ = (evt) => this.handleTouchMove_(evt);\n    this.componentTouchEndHandler_ = (evt) => this.handleTouchEnd_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.close();\n      }\n    };\n  }\n\n  init() {\n    const ROOT = this.rootCssClass_;\n    const OPEN = this.openCssClass_;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    } else {\n      this.detabinate_();\n      this.isOpen_ = false;\n    }\n\n    this.adapter_.registerDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.registerInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.registerInteractionHandler('touchend', this.componentTouchEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.deregisterInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.deregisterInteractionHandler('touchend', this.componentTouchEndHandler_);\n    // Deregister the document keydown handler just in case the component is destroyed while the menu is open.\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n  }\n\n  open() {\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.addClass(this.openCssClass_);\n    this.retabinate_();\n    // Debounce multiple calls\n    if (!this.isOpen_) {\n      this.adapter_.notifyOpen();\n    }\n    this.isOpen_ = true;\n  }\n\n  close() {\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.removeClass(this.openCssClass_);\n    this.detabinate_();\n    // Debounce multiple calls\n    if (this.isOpen_) {\n      this.adapter_.notifyClose();\n    }\n    this.isOpen_ = false;\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   *  Render all children of the drawer inert when it's closed.\n   */\n  detabinate_() {\n    if (this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.saveElementTabState(elements[i]);\n        this.adapter_.makeElementUntabbable(elements[i]);\n      }\n    }\n\n    this.inert_ = true;\n  }\n\n  /**\n   *  Make all children of the drawer tabbable again when it's open.\n   */\n  retabinate_() {\n    if (!this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.restoreElementTabState(elements[i]);\n      }\n    }\n\n    this.inert_ = false;\n  }\n\n  handleTouchStart_(evt) {\n    if (!this.adapter_.hasClass(this.openCssClass_)) {\n      return;\n    }\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.direction_ = this.adapter_.isRtl() ? -1 : 1;\n    this.drawerWidth_ = this.adapter_.getDrawerWidth();\n    this.startX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n    this.currentX_ = this.startX_;\n\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n  }\n\n  handleTouchMove_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.currentX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n  }\n\n  handleTouchEnd_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.prepareForTouchEnd_();\n\n    // Did the user close the drawer by more than 50%?\n    if (Math.abs(this.newPosition_ / this.drawerWidth_) >= 0.5) {\n      this.close();\n    } else {\n      // Triggering an open here means we'll get a nice animation back to the fully open state.\n      this.open();\n    }\n  }\n\n  prepareForTouchEnd_() {\n    cancelAnimationFrame(this.updateRaf_);\n    this.adapter_.setTranslateX(null);\n  }\n\n  updateDrawer_() {\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n    this.adapter_.setTranslateX(this.newPosition_);\n  }\n\n  get newPosition_() {\n    let newPos = null;\n\n    if (this.direction_ === 1) {\n      newPos = Math.min(0, this.currentX_ - this.startX_);\n    } else {\n      newPos = Math.max(0, this.currentX_ - this.startX_);\n    }\n\n    return newPos;\n  }\n\n  isRootTransitioningEventTarget_() {\n    // Classes extending MDCSlidableDrawerFoundation should implement this method to return true or false\n    // if the event target is the root event target currently transitioning.\n    return false;\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.isRootTransitioningEventTarget_(evt.target)) {\n      this.adapter_.removeClass(this.animatingCssClass_);\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--persistent',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--persistent .mdc-drawer__drawer',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCPersistentDrawer:open',\n  CLOSE_EVENT: 'MDCPersistentDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCPersistentDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      isDrawer: () => false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCPersistentDrawerFoundation.defaultAdapter, adapter),\n      MDCPersistentDrawerFoundation.cssClasses.ROOT,\n      MDCPersistentDrawerFoundation.cssClasses.ANIMATING,\n      MDCPersistentDrawerFoundation.cssClasses.OPEN);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TAB_DATA = 'data-mdc-tabindex';\nconst TAB_DATA_HANDLED = 'data-mdc-tabindex-handled';\n\nlet storedTransformPropertyName_;\nlet supportsPassive_;\n\n// Remap touch events to pointer events, if the browser doesn't support touch events.\nexport function remapEvent(eventName, globalObj = window) {\n  if (!('ontouchstart' in globalObj.document)) {\n    switch (eventName) {\n    case 'touchstart':\n      return 'pointerdown';\n    case 'touchmove':\n      return 'pointermove';\n    case 'touchend':\n      return 'pointerup';\n    default:\n      return eventName;\n    }\n  }\n\n  return eventName;\n}\n\n// Choose the correct transform property to use on the current browser.\nexport function getTransformPropertyName(globalObj = window, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : '-webkit-transform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n// Determine whether the current browser supports CSS properties.\nexport function supportsCssCustomProperties(globalObj = window) {\n  if ('CSS' in globalObj) {\n    return globalObj.CSS.supports('(--color: red)');\n  }\n  return false;\n}\n\n// Determine whether the current browser supports passive event listeners, and if so, use them.\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n// Save the tab state for an element.\nexport function saveElementTabState(el) {\n  if (el.hasAttribute('tabindex')) {\n    el.setAttribute(TAB_DATA, el.getAttribute('tabindex'));\n  }\n  el.setAttribute(TAB_DATA_HANDLED, true);\n}\n\n// Restore the tab state for an element, if it was saved.\nexport function restoreElementTabState(el) {\n  // Only modify elements we've already handled, in case anything was dynamically added since we saved state.\n  if (el.hasAttribute(TAB_DATA_HANDLED)) {\n    if (el.hasAttribute(TAB_DATA)) {\n      el.setAttribute('tabindex', el.getAttribute(TAB_DATA));\n      el.removeAttribute(TAB_DATA);\n    } else {\n      el.removeAttribute('tabindex');\n    }\n    el.removeAttribute(TAB_DATA_HANDLED);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--temporary',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n  SCROLL_LOCK: 'mdc-drawer-scroll-lock',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--temporary .mdc-drawer__drawer',\n  OPACITY_VAR_NAME: '--mdc-temporary-drawer-opacity',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCTemporaryDrawer:open',\n  CLOSE_EVENT: 'MDCTemporaryDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTemporaryDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      isDrawer: () => false,\n      updateCssVariable: (/* value: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCTemporaryDrawerFoundation.defaultAdapter, adapter),\n      MDCTemporaryDrawerFoundation.cssClasses.ROOT,\n      MDCTemporaryDrawerFoundation.cssClasses.ANIMATING,\n      MDCTemporaryDrawerFoundation.cssClasses.OPEN);\n\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.ROOT)) {\n        this.close(true);\n      }\n    };\n  }\n\n  init() {\n    super.init();\n\n    // Make browser aware of custom property being used in this element.\n    // Workaround for certain types of hard-to-reproduce heisenbugs.\n    this.adapter_.updateCssVariable(0);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.enableScroll_();\n  }\n\n  open() {\n    this.disableScroll_();\n    // Make sure custom property values are cleared before starting.\n    this.adapter_.updateCssVariable('');\n\n    super.open();\n  }\n\n  close() {\n    // Make sure custom property values are cleared before making any changes.\n    this.adapter_.updateCssVariable('');\n\n    super.close();\n  }\n\n  prepareForTouchEnd_() {\n    super.prepareForTouchEnd_();\n\n    this.adapter_.updateCssVariable('');\n  }\n\n  updateDrawer_() {\n    super.updateDrawer_();\n\n    const newOpacity = Math.max(0, 1 + this.direction_ * (this.newPosition_ / this.drawerWidth_));\n    this.adapter_.updateCssVariable(newOpacity);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n\n  handleTransitionEnd_(evt) {\n    super.handleTransitionEnd_(evt);\n    if (!this.isOpen_) {\n      this.enableScroll_();\n    }\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  /** @override */\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n        // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n        this.layoutInternal_();\n      }\n    });\n  }\n\n  /** @override */\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.registerResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\r\nimport {\r\n  supportsCssVariables,\r\n  getMatchesProperty,\r\n  applyPassive\r\n} from '@material/ripple/util'\r\n\r\nexport class RippleBase extends MDCRippleFoundation {\r\n  static get MATCHES() {\r\n    /* global HTMLElement */\r\n    return (\r\n      RippleBase._matches ||\r\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\r\n    )\r\n  }\r\n\r\n  static isSurfaceActive(ref) {\r\n    return ref[RippleBase.MATCHES](':active')\r\n  }\r\n\r\n  constructor(vm, options) {\r\n    super(\r\n      Object.assign(\r\n        {\r\n          browserSupportsCssVars: () => {\r\n            return supportsCssVariables(window)\r\n          },\r\n          isUnbounded: () => {\r\n            return false\r\n          },\r\n          isSurfaceActive: () => {\r\n            return vm.$el[RippleBase.MATCHES](':active')\r\n          },\r\n          isSurfaceDisabled: () => {\r\n            return vm.disabled\r\n          },\r\n          addClass(className) {\r\n            vm.$set(vm.classes, className, true)\r\n          },\r\n          removeClass(className) {\r\n            vm.$delete(vm.classes, className)\r\n          },\r\n          containsEventTarget: target => vm.$el.contains(target),\r\n          registerInteractionHandler: (evt, handler) => {\r\n            vm.$el.addEventListener(evt, handler, applyPassive())\r\n          },\r\n          deregisterInteractionHandler: (evt, handler) => {\r\n            vm.$el.removeEventListener(evt, handler, applyPassive())\r\n          },\r\n          registerDocumentInteractionHandler: (evtType, handler) =>\r\n            document.documentElement.addEventListener(\r\n              evtType,\r\n              handler,\r\n              applyPassive()\r\n            ),\r\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\r\n            document.documentElement.removeEventListener(\r\n              evtType,\r\n              handler,\r\n              applyPassive()\r\n            ),\r\n          registerResizeHandler: handler => {\r\n            return window.addEventListener('resize', handler)\r\n          },\r\n          deregisterResizeHandler: handler => {\r\n            return window.removeEventListener('resize', handler)\r\n          },\r\n          updateCssVariable: (varName, value) => {\r\n            vm.$set(vm.styles, varName, value)\r\n          },\r\n          computeBoundingRect: () => {\r\n            return vm.$el.getBoundingClientRect()\r\n          },\r\n          getWindowPageOffset: () => {\r\n            return { x: window.pageXOffset, y: window.pageYOffset }\r\n          }\r\n        },\r\n        options\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nexport const RippleMixin = {\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ripple = new RippleBase(this)\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.ripple.destroy()\r\n  }\r\n}\r\n","export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","export function autoInit(plugin) {\r\n  // Auto-install\r\n  let _Vue = null\r\n  if (typeof window !== 'undefined') {\r\n    _Vue = window.Vue\r\n  } else if (typeof global !== 'undefined') {\r\n    /*global global*/\r\n    _Vue = global.Vue\r\n  }\r\n  if (_Vue) {\r\n    _Vue.use(plugin)\r\n  }\r\n}\r\n","import './styles.scss'\r\nimport { autoInit } from '../base'\r\nimport plugin from './index.js'\r\nexport default plugin\r\n\r\nautoInit(plugin)\r\n"],"names":["CustomElementMixin","createElement","context","props","is","tag","data","children","CustomLink","type","String","default","Object","h","element","babelHelpers.extends","link","parent","$router","$root","$options","components","on","click","nativeOn","CustomLinkMixin","Boolean","this","to","exact","append","replace","activeClass","exactActiveClass","DispatchEventMixin","Array","evt","$emit","event","target","eventTarget","args","eventArgs","$listeners","_this","dispatchEvent","e","Math","floor","random","toString","FOCUSABLE_ELEMENTS","MDCFoundation","adapter","adapter_","MDCSlidableDrawerFoundation","root","foundation","undefined","root_","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","MDCComponent","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","CustomEvent","document","createEvent","initCustomEvent","rootCssClass","animatingCssClass","openCssClass","defaultAdapter","rootCssClass_","animatingCssClass_","openCssClass_","transitionEndHandler_","handleTransitionEnd_","inert_","componentTouchStartHandler_","handleTouchStart_","componentTouchMoveHandler_","handleTouchMove_","componentTouchEndHandler_","handleTouchEnd_","documentKeydownHandler_","key","keyCode","close","ROOT","OPEN","hasClass","hasNecessaryDom","isOpen_","detabinate_","registerDrawerInteractionHandler","registerInteractionHandler","deregisterDrawerInteractionHandler","deregisterInteractionHandler","deregisterDocumentKeydownHandler","registerTransitionEndHandler","registerDocumentKeydownHandler","addClass","retabinate_","notifyOpen","removeClass","notifyClose","elements","getFocusableElements","i","length","saveElementTabState","makeElementUntabbable","restoreElementTabState","pointerType","direction_","isRtl","drawerWidth_","getDrawerWidth","startX_","touches","pageX","currentX_","updateRaf_","requestAnimationFrame","updateDrawer_","bind","prepareForTouchEnd_","abs","newPosition_","open","setTranslateX","isRootTransitioningEventTarget_","deregisterTransitionEndHandler","min","max","cssClasses","strings","MDCPersistentDrawerFoundation","ANIMATING","el","isDrawer","TAB_DATA","TAB_DATA_HANDLED","storedTransformPropertyName_","supportsPassive_","remapEvent","eventName","window","getTransformPropertyName","globalObj","forceRefresh","transformPropertyName","style","applyPassive","isSupported","passive","hasAttribute","setAttribute","getAttribute","removeAttribute","MDCTemporaryDrawerFoundation","componentClickHandler_","eventTargetHasClass","updateCssVariable","enableScroll_","disableScroll_","newOpacity","addBodyClass","SCROLL_LOCK","removeBodyClass","CSS","supports","className","varName","value","numbers","supportsCssVariables_","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","UNBOUNDED","_this2","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","checkElementMadeActive_","animateActivation_","isSurfaceActive","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","setTimeout","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","_this16","BG_FOCUSED","_this17","RippleBase","vm","options","windowObj","supportsCssVariables","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","$el","MATCHES","disabled","$set","classes","$delete","contains","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","ripple","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}
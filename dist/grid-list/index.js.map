{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/dispatch-event-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/base/index.js","../../node_modules/@material/grid-list/constants.js","../../node_modules/@material/grid-list/foundation.js","../../components/grid-list/mdc-grid-list.vue","../../components/grid-list/mdc-grid-tile.vue","../../components/grid-list/index.js"],"sourcesContent":["export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","/* global CustomEvent */\r\n\r\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\r\n  let evt\r\n  if (typeof CustomEvent === 'function') {\r\n    evt = new CustomEvent(evtType, {\r\n      detail: evtData,\r\n      bubbles: shouldBubble\r\n    })\r\n  } else {\r\n    evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\r\n  }\r\n  el.dispatchEvent(evt)\r\n}\r\n","export const DispatchEventMixin = {\r\n  props: {\r\n    event: String,\r\n    'event-target': Object,\r\n    'event-args': Array\r\n  },\r\n  methods: {\r\n    dispatchEvent(evt) {\r\n      evt && this.$emit(evt.type, evt)\r\n      if (this.event) {\r\n        let target = this.eventTarget || this.$root\r\n        let args = this.eventArgs || []\r\n        target.$emit(this.event, ...args)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    listeners() {\r\n      return {\r\n        ...this.$listeners,\r\n        click: e => this.dispatchEvent(e)\r\n      }\r\n    }\r\n  }\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\nimport MDCComponent from './component';\n\nexport {MDCFoundation, MDCComponent};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const strings = {\n  TILES_SELECTOR: '.mdc-grid-list__tiles',\n  TILE_SELECTOR: '.mdc-grid-tile',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {strings} from './constants';\n\nexport default class MDCGridListFoundation extends MDCFoundation {\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      getOffsetWidth: () => /* number */ 0,\n      getNumberOfTiles: () => /* number */ 0,\n      getOffsetWidthForTileAtIndex: (/* index: number */) => /* number */ 0,\n      setStyleForTilesElement: (/* property: string, value: string */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n    };\n  }\n  constructor(adapter) {\n    super(Object.assign(MDCGridListFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.alignCenter();\n    this.resizeFrame_ = 0;\n  }\n  init() {\n    this.alignCenter();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n  alignCenter() {\n    if (this.resizeFrame_ !== 0) {\n      cancelAnimationFrame(this.resizeFrame_);\n    }\n    this.resizeFrame_ = requestAnimationFrame(() => {\n      this.alignCenter_();\n      this.resizeFrame_ = 0;\n    });\n  }\n  alignCenter_() {\n    if (this.adapter_.getNumberOfTiles() == 0) {\n      return;\n    }\n    const gridWidth = this.adapter_.getOffsetWidth();\n    const itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);\n    const tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);\n    this.adapter_.setStyleForTilesElement('width', `${tilesWidth}px`);\n  }\n}\n","<template>\r\n  <div class=\"mdc-grid-list\">\r\n    <ul \r\n      :class=\"classes\" \r\n      :style=\"styles\" \r\n      class=\"mdc-grid-list__tiles\">\r\n      <slot/>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MDCGridListFoundation from '@material/grid-list/foundation'\r\n\r\nexport default {\r\n  name: 'mdc-grid-list',\r\n  props: {\r\n    width: [String, Number],\r\n    ratio: String,\r\n    'narrow-gutter': Boolean,\r\n    'header-caption': Boolean,\r\n    'icon-align-start': Boolean,\r\n    'icon-align-end': Boolean,\r\n    'with-support-text': Boolean,\r\n    interactive: Boolean\r\n  },\r\n  provide() {\r\n    return { mdcGrid: this }\r\n  },\r\n  computed: {\r\n    classes() {\r\n      let classes = {}\r\n\r\n      classes['mdc-grid-list--tile-gutter-1'] = this.narrowGutter\r\n      classes['mdc-grid-list--header-caption'] = this.headerCaption\r\n      classes[`mdc-grid-list--tile-aspect-${this.ratio}`] = this.ratio\r\n      classes['mdc-grid-list--with-icon-align-start'] = this.iconAlignStart\r\n      classes['mdc-grid-list--with-icon-align-end'] = this.iconAlignEnd\r\n      classes['mdc-grid-list--twoline-caption'] = this.withSupportText\r\n      classes['mdc-grid-list--non-interactive'] = !this.interactive\r\n\r\n      return classes\r\n    },\r\n    styles() {\r\n      var defaultWidth = 200\r\n      return {\r\n        '--mdc-grid-list-tile-width': `${this.width || defaultWidth}px`\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCGridListFoundation({\r\n      getOffsetWidth: () => {\r\n        return this.$el.offsetWidth\r\n      },\r\n      getNumberOfTiles: () => {\r\n        return this.$el.querySelectorAll(\r\n          MDCGridListFoundation.strings.TILE_SELECTOR\r\n        ).length\r\n      },\r\n      getOffsetWidthForTileAtIndex: index => {\r\n        return this.$el.querySelectorAll(\r\n          MDCGridListFoundation.strings.TILE_SELECTOR\r\n        )[index].offsetWidth\r\n      },\r\n      setStyleForTilesElement: (property, value) => {\r\n        this.$el.querySelector(\r\n          MDCGridListFoundation.strings.TILES_SELECTOR\r\n        ).style[property] = value\r\n      },\r\n      registerResizeHandler: handler => {\r\n        window.addEventListener('resize', handler)\r\n      },\r\n      deregisterResizeHandler: handler => {\r\n        window.removeEventListener('resize', handler)\r\n      }\r\n    })\r\n    this.foundation.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation.destroy()\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <li \r\n    :class=\"[classes, itemClasses]\"\r\n    :style=\"styles\" \r\n    :tabindex=\"isInteractive ? '0' : undefined\"\r\n    class=\"mdc-grid-tile\"\r\n    v-on=\"isInteractive ? listeners : clickListener\">\r\n    <div \r\n      v-if=\"cover\" \r\n      class=\"mdc-grid-tile__primary\">\r\n      <div \r\n        :style=\"{ backgroundImage: 'url(' + src + ')' }\"\r\n        class=\"mdc-grid-tile__primary-content\"/>\r\n    </div>\r\n    <div \r\n      v-else \r\n      class=\"mdc-grid-tile__primary\">\r\n      <img \r\n        :src=\"src\" \r\n        class=\"mdc-grid-tile__primary-content\" >\r\n    </div>\r\n    <span \r\n      v-if=\"title || supportText\" \r\n      class=\"mdc-grid-tile__secondary\">\r\n      <i \r\n        v-if=\"icon\" \r\n        class=\"mdc-grid-tile__icon material-icons\">{{ icon }}</i>\r\n      <span \r\n        v-if=\"title\" \r\n        class=\"mdc-grid-tile__title\">{{ title }}</span>\r\n      <span \r\n        v-if=\"supportText\" \r\n        class=\"mdc-grid-tile__support-text\">{{ supportText }}</span>\r\n    </span>\r\n  </li>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { DispatchEventMixin } from '../base'\r\nimport { RippleBase } from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-grid-tile',\r\n  inject: ['mdcGrid'],\r\n  mixins: [DispatchEventMixin],\r\n  props: {\r\n    src: String,\r\n    cover: Boolean,\r\n    icon: String,\r\n    title: String,\r\n    'support-text': String,\r\n    selected: Boolean,\r\n    activated: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  computed: {\r\n    clickListener() {\r\n      return { click: e => this.dispatchEvent(e) }\r\n    },\r\n    itemClasses() {\r\n      return {\r\n        'mdc-grid-tile--selected': this.selected,\r\n        'mdc-grid-tile--activated': this.activated\r\n      }\r\n    },\r\n    isInteractive() {\r\n      return this.mdcGrid && this.mdcGrid.interactive\r\n    },\r\n    hasStartDetail() {\r\n      return this.startIcon || this.$slots['start-detail']\r\n    },\r\n    hasEndDetail() {\r\n      return this.endIcon || this.$slots['end-detail']\r\n    }\r\n  },\r\n  watch: {\r\n    isInteractive(value) {\r\n      if (value) {\r\n        this.addRipple()\r\n      } else {\r\n        this.removeRipple()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.isInteractive && this.addRipple()\r\n  },\r\n  beforeDestroy() {\r\n    this.removeRipple()\r\n  },\r\n  methods: {\r\n    addRipple() {\r\n      if (!this.ripple) {\r\n        let ripple = new RippleBase(this)\r\n        ripple.init()\r\n        this.ripple = ripple\r\n      }\r\n    },\r\n    removeRipple() {\r\n      if (this.ripple) {\r\n        let ripple = this.ripple\r\n        this.ripple = null\r\n        ripple.destroy()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { BasePlugin } from '../base'\r\nimport mdcGridList from './mdc-grid-list.vue'\r\nimport mdcGridTile from './mdc-grid-tile.vue'\r\n\r\nexport { mdcGridList, mdcGridTile }\r\n\r\nexport default BasePlugin({\r\n  mdcGridList,\r\n  mdcGridTile\r\n})\r\n"],"names":["BasePlugin","components","key","component","name","DispatchEventMixin","String","Object","Array","evt","$emit","type","event","target","eventTarget","$root","args","eventArgs","$listeners","dispatchEvent","e","scope","Math","floor","random","toString","MDCFoundation","adapter","adapter_","MDCComponent","root","foundation","undefined","root_","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","CustomEvent","document","createEvent","initCustomEvent","strings","MDCGridListFoundation","babelHelpers.extends","defaultAdapter","resizeHandler_","alignCenter","resizeFrame_","registerResizeHandler","deregisterResizeHandler","requestAnimationFrame","alignCenter_","getNumberOfTiles","gridWidth","getOffsetWidth","itemWidth","getOffsetWidthForTileAtIndex","tilesWidth","setStyleForTilesElement"],"mappings":"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"}
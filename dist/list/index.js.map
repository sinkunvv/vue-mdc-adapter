{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../components/list/mdc-list.vue","../../components/list/mdc-list-item.vue","../../components/list/mdc-list-divider.vue","../../components/list/mdc-list-group.vue","../../components/list/mdc-list-group-header.vue","../../components/list/mdc-list-group-divider.vue","../../components/list/index.js"],"sourcesContent":["export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","/* global CustomEvent */\r\n\r\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\r\n  let evt\r\n  if (typeof CustomEvent === 'function') {\r\n    evt = new CustomEvent(evtType, {\r\n      detail: evtData,\r\n      bubbles: shouldBubble\r\n    })\r\n  } else {\r\n    evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\r\n  }\r\n  el.dispatchEvent(evt)\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","<template>\r\n  <ul \r\n    :class=\"classes\" \r\n    class=\"mdc-list\">\r\n    <slot/>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-list',\r\n  props: {\r\n    dense: Boolean,\r\n    avatarList: Boolean,\r\n    twoLine: Boolean,\r\n    bordered: Boolean,\r\n    interactive: Boolean\r\n  },\r\n  provide() {\r\n    return { mdcList: this }\r\n  },\r\n  computed: {\r\n    classes() {\r\n      return {\r\n        'mdc-list--dense': this.dense,\r\n        'mdc-list--avatar-list': this.avatarList,\r\n        'mdc-list--two-line': this.twoLine,\r\n        'mdc-list--bordered': this.bordered,\r\n        'mdc-list--non-interactive': !this.interactive\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <li \r\n    :class=\"[classes, itemClasses]\"\r\n    :style=\"styles\" \r\n    :tabindex=\"isInteractive ? '0' : undefined\"   \r\n    class=\"mdc-list-item\"\r\n    v-on=\"isInteractive ? $listeners : {}\">\r\n\r\n    <span \r\n      v-if=\"hasStartDetail\" \r\n      class=\"mdc-list-item__graphic\">\r\n      <slot name=\"start-detail\"/>\r\n    </span>\r\n\r\n    <span \r\n      v-if=\"hasSecondary\" \r\n      class=\"mdc-list-item__text\">\r\n      <slot/>\r\n      <span class=\"mdc-list-item__secondary-text\">\r\n        <slot name=\"secondary\"/>\r\n      </span>\r\n    </span>\r\n    <slot v-else/>\r\n\r\n    <span \r\n      v-if=\"hasEndDetail\" \r\n      class=\"mdc-list-item__meta\">\r\n      <slot name=\"end-detail\"/>\r\n    </span>\r\n\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nimport { RippleBase } from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-list-item',\r\n  inject: ['mdcList'],\r\n  props: {\r\n    selected: Boolean,\r\n    activated: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  computed: {\r\n    itemClasses() {\r\n      return {\r\n        'mdc-list-item--selected': this.selected,\r\n        'mdc-list-item--activated': this.activated\r\n      }\r\n    },\r\n    isInteractive() {\r\n      return this.mdcList && this.mdcList.interactive\r\n    },\r\n    hasSecondary() {\r\n      return this.$slots['secondary'] && (this.mdcList && this.mdcList.twoLine)\r\n    },\r\n    hasEndDetail() {\r\n      return !!this.$slots['end-detail']\r\n    },\r\n    hasStartDetail() {\r\n      return !!this.$slots['start-detail']\r\n    }\r\n  },\r\n  watch: {\r\n    isInteractive(value) {\r\n      if (value) {\r\n        this.addRipple()\r\n      } else {\r\n        this.removeRipple()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.isInteractive && this.addRipple()\r\n  },\r\n  beforeDestroy() {\r\n    this.removeRipple()\r\n  },\r\n  methods: {\r\n    addRipple() {\r\n      if (!this.ripple) {\r\n        let ripple = new RippleBase(this)\r\n        ripple.init()\r\n        this.ripple = ripple\r\n      }\r\n    },\r\n    removeRipple() {\r\n      if (this.ripple) {\r\n        let ripple = this.ripple\r\n        this.ripple = null\r\n        ripple.destroy()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <li \r\n    :class=\"classes\" \r\n    role=\"separator\" \r\n    class=\"mdc-list-divider\"/>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-list-divider',\r\n  props: {\r\n    inset: Boolean,\r\n    padded: Boolean\r\n  },\r\n  computed: {\r\n    classes() {\r\n      return {\r\n        'mdc-list-divider--inset': this.inset,\r\n        'mdc-list-divider--padded': this.padded\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-list-group\"><slot/></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-list-group'\r\n}\r\n</script>\r\n","<template>\r\n  <h3 class=\"mdc-list-group-header mdc-list-group__subheader\"><slot/></h3>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-list-group-header'\r\n}\r\n</script>\r\n","<template>\r\n  <hr class=\"mdc-list-group-divider mdc-list-divider\">\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-list-group-divider'\r\n}\r\n</script>\r\n","import { BasePlugin } from '../base'\r\nimport mdcList from './mdc-list.vue'\r\nimport mdcListItem from './mdc-list-item.vue'\r\nimport mdcListDivider from './mdc-list-divider.vue'\r\nimport mdcListGroup from './mdc-list-group.vue'\r\nimport mdcListGroupHeader from './mdc-list-group-header.vue'\r\nimport mdcListGroupDivider from './mdc-list-group-divider.vue'\r\n\r\nexport {\r\n  mdcList,\r\n  mdcListItem,\r\n  mdcListDivider,\r\n  mdcListGroup,\r\n  mdcListGroupHeader,\r\n  mdcListGroupDivider\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcList,\r\n  mdcListItem,\r\n  mdcListDivider,\r\n  mdcListGroup,\r\n  mdcListGroupHeader,\r\n  mdcListGroupDivider\r\n})\r\n"],"names":["BasePlugin","components","key","component","name","scope","Math","floor","random","toString"],"mappings":";;;;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,UAApB,EAAgC;SAC9B;aACI,QADJ;aAEI,qBAAM;WACR,IAAIC,GAAT,IAAgBD,UAAhB,EAA4B;YACtBE,YAAYF,WAAWC,GAAX,CAAhB;WACGC,SAAH,CAAaA,UAAUC,IAAvB,EAA6BD,SAA7B;;KALC;;GAAP;;;ACDF;;ACAA,IAAME,QACJC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBF,KAAKC,KAAL,CAAW,UAAX,CAA3B,EAAmDE,QAAnD,KAAgE,GADlE;;;;;;;;;;;ACSA;;;;;;;;;;;;;;;;;;;;;;;;CAAA;;;AANY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiCZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;;;AAjcZ,YAAeT,WAAW;kBAAA;0BAAA;gCAAA;4BAAA;wCAAA;;CAAX,CAAf;;;;;"}
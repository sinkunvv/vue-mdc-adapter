{"version":3,"file":"toolbar.min.js","sources":["../../components/base/dispatch-event-mixin.js","../../node_modules/@material/base/foundation.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/toolbar/constants.js","../../node_modules/@material/toolbar/foundation.js","../../components/base/base-plugin.js","../../components/base/auto-init.js","../../components/toolbar/entry.js"],"sourcesContent":["export const DispatchEventMixin = {\r\n  props: {\r\n    event: String,\r\n    'event-target': Object,\r\n    'event-args': Array\r\n  },\r\n  methods: {\r\n    dispatchEvent(evt) {\r\n      evt && this.$emit(evt.type, evt)\r\n      if (this.event) {\r\n        let target = this.eventTarget || this.$root\r\n        let args = this.eventArgs || []\r\n        target.$emit(this.event, ...args)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    listeners() {\r\n      return {\r\n        ...this.$listeners,\r\n        click: e => this.dispatchEvent(e)\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  FIXED: 'mdc-toolbar--fixed',\n  FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',\n  FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',\n  TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',\n  FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',\n  FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',\n  FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized',\n};\n\nexport const strings = {\n  TITLE_SELECTOR: '.mdc-toolbar__title',\n  ICON_SELECTOR: '.mdc-toolbar__icon',\n  FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',\n  CHANGE_EVENT: 'MDCToolbar:change',\n};\n\nexport const numbers = {\n  MAX_TITLE_SIZE: 2.125,\n  MIN_TITLE_SIZE: 1.25,\n  TOOLBAR_ROW_HEIGHT: 64,\n  TOOLBAR_ROW_MOBILE_HEIGHT: 56,\n  TOOLBAR_MOBILE_BREAKPOINT: 600,\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCToolbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportWidth: () => /* number */ 0,\n      getViewportScrollY: () => /* number */ 0,\n      getOffsetHeight: () => /* number */ 0,\n      getFirstRowElementOffsetHeight: () => /* number */ 0,\n      notifyChange: (/* evtData: {flexibleExpansionRatio: number} */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      setStyleForTitleElement: (/* property: string, value: string */) => {},\n      setStyleForFlexibleRowElement: (/* property: string, value: string */) => {},\n      setStyleForFixedAdjustElement: (/* property: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCToolbarFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.checkRowHeight_();\n    this.scrollHandler_ = () => this.updateToolbarStyles_();\n    this.checkRowHeightFrame_ = 0;\n    this.scrollFrame_ = 0;\n    this.executedLastChange_ = false;\n\n    this.calculations_ = {\n      toolbarRowHeight: 0,\n      // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.\n      toolbarRatio: 0, // The ratio of toolbar height to row height\n      flexibleExpansionRatio: 0, // The ratio of flexible space height to row height\n      maxTranslateYRatio: 0, // The ratio of max toolbar move up distance to row height\n      scrollThresholdRatio: 0, // The ratio of max scrollTop that we should listen to to row height\n      // Derived Heights based on the above key ratios.\n      toolbarHeight: 0,\n      flexibleExpansionHeight: 0, // Flexible row minus toolbar height (derived)\n      maxTranslateYDistance: 0, // When toolbar only fix last row (derived)\n      scrollThreshold: 0,\n    };\n    // Toolbar fixed behavior\n    // If toolbar is fixed\n    this.fixed_ = false;\n    // If fixed is targeted only at the last row\n    this.fixedLastrow_ = false;\n    // Toolbar flexible behavior\n    // If the first row is flexible\n    this.hasFlexibleRow_ = false;\n    // If use the default behavior\n    this.useFlexDefaultBehavior_ = false;\n  }\n\n  init() {\n    this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);\n    this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;\n    this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);\n    if (this.hasFlexibleRow_) {\n      this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);\n    }\n    this.initKeyRatio_();\n    this.setKeyHeights_();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  updateAdjustElementStyles() {\n    if (this.fixed_) {\n      this.adapter_.setStyleForFixedAdjustElement('margin-top', `${this.calculations_.toolbarHeight}px`);\n    }\n  }\n\n  getFlexibleExpansionRatio_(scrollTop) {\n    // To prevent division by zero when there is no flexibleExpansionHeight\n    const delta = 0.0001;\n    return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));\n  }\n\n  checkRowHeight_() {\n    cancelAnimationFrame(this.checkRowHeightFrame_);\n    this.checkRowHeightFrame_ = requestAnimationFrame(() => this.setKeyHeights_());\n  }\n\n  setKeyHeights_() {\n    const newToolbarRowHeight = this.getRowHeight_();\n    if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {\n      this.calculations_.toolbarRowHeight = newToolbarRowHeight;\n      this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.flexibleExpansionHeight =\n        this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.maxTranslateYDistance =\n        this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.scrollThreshold =\n        this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;\n      this.updateAdjustElementStyles();\n      this.updateToolbarStyles_();\n    }\n  }\n\n  updateToolbarStyles_() {\n    cancelAnimationFrame(this.scrollFrame_);\n    this.scrollFrame_ = requestAnimationFrame(() => {\n      const scrollTop = this.adapter_.getViewportScrollY();\n      const hasScrolledOutOfThreshold = this.scrolledOutOfThreshold_(scrollTop);\n\n      if (hasScrolledOutOfThreshold && this.executedLastChange_) {\n        return;\n      }\n\n      const flexibleExpansionRatio = this.getFlexibleExpansionRatio_(scrollTop);\n\n      this.updateToolbarFlexibleState_(flexibleExpansionRatio);\n      if (this.fixedLastrow_) {\n        this.updateToolbarFixedState_(scrollTop);\n      }\n      if (this.hasFlexibleRow_) {\n        this.updateFlexibleRowElementStyles_(flexibleExpansionRatio);\n      }\n      this.executedLastChange_ = hasScrolledOutOfThreshold;\n      this.adapter_.notifyChange({flexibleExpansionRatio: flexibleExpansionRatio});\n    });\n  }\n\n  scrolledOutOfThreshold_(scrollTop) {\n    return scrollTop > this.calculations_.scrollThreshold;\n  }\n\n  initKeyRatio_() {\n    const toolbarRowHeight = this.getRowHeight_();\n    const firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;\n    this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;\n    this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;\n    this.calculations_.maxTranslateYRatio =\n      this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;\n    this.calculations_.scrollThresholdRatio =\n      (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;\n  }\n\n  getRowHeight_() {\n    const breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;\n    return this.adapter_.getViewportWidth() < breakpoint ?\n      MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;\n  }\n\n  updateToolbarFlexibleState_(flexibleExpansionRatio) {\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    if (flexibleExpansionRatio === 1) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    } else if (flexibleExpansionRatio === 0) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    }\n  }\n\n  updateToolbarFixedState_(scrollTop) {\n    const translateDistance = Math.max(0, Math.min(\n      scrollTop - this.calculations_.flexibleExpansionHeight,\n      this.calculations_.maxTranslateYDistance));\n    this.adapter_.setStyle('transform', `translateY(${-translateDistance}px)`);\n\n    if (translateDistance === this.calculations_.maxTranslateYDistance) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    } else {\n      this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    }\n  }\n\n  updateFlexibleRowElementStyles_(flexibleExpansionRatio) {\n    if (this.fixed_) {\n      const height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;\n      this.adapter_.setStyleForFlexibleRowElement('height',\n        `${height + this.calculations_.toolbarRowHeight}px`);\n    }\n    if (this.useFlexDefaultBehavior_) {\n      this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);\n    }\n  }\n\n  updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {\n    const maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;\n    const minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;\n    const currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;\n\n    this.adapter_.setStyleForTitleElement('font-size', `${currentTitleSize}rem`);\n  }\n}\n","export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","export function autoInit(plugin) {\r\n  // Auto-install\r\n  let _Vue = null\r\n  if (typeof window !== 'undefined') {\r\n    _Vue = window.Vue\r\n  } else if (typeof global !== 'undefined') {\r\n    /*global global*/\r\n    _Vue = global.Vue\r\n  }\r\n  if (_Vue) {\r\n    _Vue.use(plugin)\r\n  }\r\n}\r\n","import './styles.scss'\r\nimport { autoInit } from '../base'\r\nimport plugin from './index.js'\r\nexport default plugin\r\n\r\nautoInit(plugin)\r\n"],"names":["DispatchEventMixin","String","Object","Array","evt","this","$emit","type","event","target","eventTarget","$root","args","eventArgs","$listeners","_this","dispatchEvent","e","MDCFoundation","Math","floor","random","toString","adapter","adapter_","cssClasses","strings","numbers","MDCToolbarFoundation","babelHelpers.extends","defaultAdapter","resizeHandler_","checkRowHeight_","scrollHandler_","updateToolbarStyles_","checkRowHeightFrame_","scrollFrame_","executedLastChange_","calculations_","fixed_","fixedLastrow_","hasFlexibleRow_","useFlexDefaultBehavior_","hasClass","FIXED","FIXED_LASTROW","TOOLBAR_ROW_FLEXIBLE","FLEXIBLE_DEFAULT_BEHAVIOR","initKeyRatio_","setKeyHeights_","registerResizeHandler","registerScrollHandler","deregisterResizeHandler","deregisterScrollHandler","setStyleForFixedAdjustElement","toolbarHeight","scrollTop","max","flexibleExpansionHeight","requestAnimationFrame","_this2","newToolbarRowHeight","getRowHeight_","toolbarRowHeight","toolbarRatio","flexibleExpansionRatio","maxTranslateYDistance","maxTranslateYRatio","scrollThreshold","scrollThresholdRatio","updateAdjustElementStyles","_this3","getViewportScrollY","hasScrolledOutOfThreshold","scrolledOutOfThreshold_","getFlexibleExpansionRatio_","updateToolbarFlexibleState_","updateToolbarFixedState_","updateFlexibleRowElementStyles_","notifyChange","firstRowMaxRatio","getFirstRowElementOffsetHeight","getOffsetHeight","breakpoint","TOOLBAR_MOBILE_BREAKPOINT","getViewportWidth","TOOLBAR_ROW_MOBILE_HEIGHT","TOOLBAR_ROW_HEIGHT","removeClass","FLEXIBLE_MAX","FLEXIBLE_MIN","addClass","translateDistance","min","setStyle","FIXED_AT_LAST_ROW","height","setStyleForFlexibleRowElement","updateElementStylesDefaultBehavior_","maxTitleSize","MAX_TITLE_SIZE","minTitleSize","MIN_TITLE_SIZE","currentTitleSize","setStyleForTitleElement","components","key","component","name","plugin","_Vue","window","Vue","global","use"],"mappings":"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"}
{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/dispatch-focus-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/switch/adapter.js","../../node_modules/@material/switch/constants.js","../../node_modules/@material/switch/foundation.js","../../components/switch/mdc-switch.vue","../../components/switch/index.js"],"sourcesContent":["export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","/* global CustomEvent */\r\n\r\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\r\n  let evt\r\n  if (typeof CustomEvent === 'function') {\r\n    evt = new CustomEvent(evtType, {\r\n      detail: evtData,\r\n      bubbles: shouldBubble\r\n    })\r\n  } else {\r\n    evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\r\n  }\r\n  el.dispatchEvent(evt)\r\n}\r\n","export const DispatchFocusMixin = {\r\n  data() {\r\n    return { hasFocus: false }\r\n  },\r\n  methods: {\r\n    onMouseDown() {\r\n      this._active = true\r\n    },\r\n    onMouseUp() {\r\n      this._active = false\r\n    },\r\n    onFocusEvent() {\r\n      // dispatch async to let time to other focus event to propagate\r\n      setTimeout(() => this.dispatchFocusEvent(), 0)\r\n    },\r\n    onBlurEvent() {\r\n      // dispatch async to let time to other focus event to propagate\r\n      // also filtur blur if mousedown\r\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\r\n    },\r\n    dispatchFocusEvent() {\r\n      let hasFocus =\r\n        this.$el === document.activeElement ||\r\n        this.$el.contains(document.activeElement)\r\n      if (hasFocus != this.hasFocus) {\r\n        this.$emit(hasFocus ? 'focus' : 'blur')\r\n        this.hasFocus = hasFocus\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$el.addEventListener('focusin', this.onFocusEvent)\r\n    this.$el.addEventListener('focusout', this.onBlurEvent)\r\n    this.$el.addEventListener('mousedown', this.onMouseDown)\r\n    this.$el.addEventListener('mouseup', this.onMouseUp)\r\n  },\r\n  beforeDestroy() {\r\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\r\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\r\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\r\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\r\n  }\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Switch. Provides an interface for managing\n * - classes\n * - dom\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCSwitchAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {boolean} checked */\n  setNativeControlChecked(checked) {}\n\n  /** @return {boolean} checked */\n  isNativeControlChecked() {}\n\n  /** @param {boolean} disabled */\n  setNativeControlDisabled(disabled) {}\n\n  /** @return {boolean} disabled */\n  isNativeControlDisabled() {}\n}\n\nexport default MDCSwitchAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKED: 'mdc-switch--checked',\n  DISABLED: 'mdc-switch--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-switch__native-control',\n  RIPPLE_SURFACE_SELECTOR: '.mdc-switch__thumb-underlay',\n};\n\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSwitchAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSwitchAdapter>}\n */\nclass MDCSwitchFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return {!MDCSwitchAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSwitchAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlChecked: (/* checked: boolean */) => {},\n      isNativeControlChecked: () => /* boolean */ {},\n      setNativeControlDisabled: (/* disabled: boolean */) => {},\n      isNativeControlDisabled: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSwitchFoundation.defaultAdapter, adapter));\n  }\n\n  /** @override */\n  init() {\n    // Do an initial state update based on the state of the native control.\n    this.handleChange();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.adapter_.isNativeControlChecked();\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.adapter_.setNativeControlChecked(checked);\n    this.updateCheckedStyling_(checked);\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.adapter_.isNativeControlDisabled();\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.adapter_.setNativeControlDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /**\n   * Handles the change event for the switch native control.\n   */\n  handleChange() {\n    this.updateCheckedStyling_(this.isChecked());\n  }\n\n  /**\n   * Updates the styling of the switch based on its checked state.\n   * @param {boolean} checked\n   * @private\n   */\n  updateCheckedStyling_(checked) {\n    if (checked) {\n      this.adapter_.addClass(cssClasses.CHECKED);\n    } else {\n      this.adapter_.removeClass(cssClasses.CHECKED);\n    }\n  }\n}\n\nexport default MDCSwitchFoundation;\n","<template>\r\n  <div\r\n    :class=\"{\r\n      'mdc-form-field': hasLabel,\r\n      'mdc-form-field--align-end': hasLabel && alignEnd\r\n    }\"\r\n    class=\"mdc-switch-wrapper\" >\r\n\r\n    <div\r\n      :class=\"classes\"\r\n      :styles=\"styles\"\r\n      class=\"mdc-switch\">\r\n      <div class=\"mdc-switch__track\" />\r\n      <div class=\"mdc-switch__thumb-underlay\">\r\n        <div class=\"mdc-switch__thumb\">\r\n          <input\r\n            ref=\"control\"\r\n            :name=\"name\"\r\n            :id=\"vma_uid_\"\r\n            :value=\"value\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            class=\"mdc-switch__native-control\"\r\n            @change=\"onChanged\" >\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <label\r\n      v-if=\"hasLabel\"\r\n      :for=\"vma_uid_\"\r\n      class=\"mdc-switch-label\">\r\n      <slot>{{ label }}</slot>\r\n    </label>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchFocusMixin, VMAUniqueIdMixin } from '../base'\r\nimport { RippleBase } from '../ripple'\r\nimport MDCSwitchFoundation from '@material/switch/foundation'\r\n\r\nexport default {\r\n  name: 'mdc-switch',\r\n  mixins: [DispatchFocusMixin, VMAUniqueIdMixin],\r\n  model: {\r\n    prop: 'checked',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    checked: Boolean,\r\n    disabled: Boolean,\r\n    value: String,\r\n    label: String,\r\n    alignEnd: Boolean,\r\n    name: String\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  computed: {\r\n    hasLabel() {\r\n      return this.label || this.$slots.default\r\n    }\r\n  },\r\n  watch: {\r\n    checked(value) {\r\n      this.foundation && this.foundation.setChecked(value)\r\n    },\r\n    disabled(value) {\r\n      this.foundation && this.foundation.setDisabled(value)\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.foundation = new MDCSwitchFoundation({\r\n      addClass: className => this.$set(this.classes, className, true),\r\n      removeClass: className => this.$delete(this.classes, className),\r\n      setNativeControlChecked: checked =>\r\n        (this.$refs.control.checked = checked),\r\n      isNativeControlChecked: () => this.$refs.control.checked,\r\n      setNativeControlDisabled: disabled =>\r\n        (this.$refs.control.disabled = disabled),\r\n      isNativeControlDisabled: () => this.nativeControl_.disabled\r\n    })\r\n    this.foundation.init()\r\n    this.foundation.setChecked(this.checked)\r\n    this.foundation.setDisabled(this.disabled)\r\n\r\n    this.ripple = new RippleBase(this)\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation && this.foundation.destroy()\r\n    this.ripple && this.ripple.destroy()\r\n  },\r\n  methods: {\r\n    onChanged(event) {\r\n      this.foundation && this.foundation.handleChange()\r\n      this.$emit('change', event.target.checked)\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { BasePlugin } from '../base'\r\nimport mdcSwitch from './mdc-switch.vue'\r\n\r\nexport { mdcSwitch }\r\n\r\nexport default BasePlugin({\r\n  mdcSwitch\r\n})\r\n"],"names":["BasePlugin","components","key","component","name","DispatchFocusMixin","hasFocus","_active","dispatchFocusEvent","setTimeout","$el","document","activeElement","contains","$emit","addEventListener","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","scope","Math","floor","random","toString","VMAUniqueIdMixin","vma_uid_","_uid","MDCFoundation","adapter","adapter_","MDCSwitchAdapter","className","checked","disabled","cssClasses","strings","MDCSwitchFoundation","babelHelpers.extends","defaultAdapter","handleChange","isNativeControlChecked","setNativeControlChecked","updateCheckedStyling_","isNativeControlDisabled","setNativeControlDisabled","addClass","DISABLED","removeClass","isChecked","CHECKED"],"mappings":"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"}
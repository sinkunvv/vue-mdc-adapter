{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-element.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../components/theme/mdc-theme.vue","../../components/theme/index.js"],"sourcesContent":["export function BasePlugin(components) {\r\n  return {\r\n    version: '__VERSION__',\r\n    install: vm => {\r\n      for (let key in components) {\r\n        let component = components[key]\r\n        vm.component(component.name, component)\r\n      }\r\n    },\r\n    components\r\n  }\r\n}\r\n","export const CustomElement = {\r\n  functional: true,\r\n  render(createElement, context) {\r\n    return createElement(\r\n      context.props.is || context.props.tag || 'div',\r\n      context.data,\r\n      context.children\r\n    )\r\n  }\r\n}\r\n\r\nexport const CustomElementMixin = {\r\n  components: {\r\n    CustomElement\r\n  }\r\n}\r\n","/* global CustomEvent */\r\n\r\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\r\n  let evt\r\n  if (typeof CustomEvent === 'function') {\r\n    evt = new CustomEvent(evtType, {\r\n      detail: evtData,\r\n      bubbles: shouldBubble\r\n    })\r\n  } else {\r\n    evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\r\n  }\r\n  el.dispatchEvent(evt)\r\n}\r\n","const scope =\r\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\r\n\r\nexport const VMAUniqueIdMixin = {\r\n  beforeCreate() {\r\n    this.vma_uid_ = scope + this._uid\r\n  }\r\n}\r\n","<template>\r\n  <custom-element \r\n    :tag=\"tag\" \r\n    :class=\"classes\"\r\n    class=\"mdc-theme\">\r\n    <slot />\r\n  </custom-element>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { CustomElement } from '../base'\r\n\r\nconst THEME_COLORS = [\r\n  'primary',\r\n  'secondary',\r\n  'background',\r\n  'primary-light',\r\n  'secondary-light',\r\n  'secondary-dark',\r\n  'primary-dark'\r\n]\r\n\r\nconst THEME_STYLES = [\r\n  'text-primary',\r\n  'text-secondary',\r\n  'text-hint',\r\n  'text-icon',\r\n  'text-disabled'\r\n]\r\n\r\nexport default {\r\n  name: 'mdc-theme',\r\n  components: {\r\n    CustomElement\r\n  },\r\n  props: {\r\n    tag: { type: String, default: 'div' },\r\n    color: String,\r\n    background: String\r\n  },\r\n  computed: {\r\n    classes() {\r\n      let classes = {}\r\n\r\n      if (this.color && THEME_COLORS.indexOf(this.color) !== -1) {\r\n        classes[`mdc-theme--${this.color}`] = true\r\n      }\r\n\r\n      if (this.background && THEME_COLORS.indexOf(this.background) !== -1) {\r\n        classes[`mdc-theme--${this.background}-bg`] = true\r\n\r\n        if (this.color && THEME_STYLES.indexOf(this.color) !== -1) {\r\n          classes[`mdc-theme--${this.color}-on-${this.background}`] = true\r\n        }\r\n      }\r\n      return classes\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { BasePlugin } from '../base'\r\nimport mdcTheme from './mdc-theme.vue'\r\n\r\nexport { mdcTheme }\r\n\r\nexport default BasePlugin({\r\n  mdcTheme\r\n})\r\n"],"names":["BasePlugin","components","key","component","name","CustomElement","createElement","context","props","is","tag","data","children","scope","Math","floor","random","toString"],"mappings":";;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,UAApB,EAAgC;SAC9B;aACI,QADJ;aAEI,qBAAM;WACR,IAAIC,GAAT,IAAgBD,UAAhB,EAA4B;YACtBE,YAAYF,WAAWC,GAAX,CAAhB;WACGC,SAAH,CAAaA,UAAUC,IAAvB,EAA6BD,SAA7B;;KALC;;GAAP;;;ACDK,IAAME,gBAAgB;cACf,IADe;QAAA,kBAEpBC,aAFoB,EAELC,OAFK,EAEI;WACtBD,cACLC,QAAQC,KAAR,CAAcC,EAAd,IAAoBF,QAAQC,KAAR,CAAcE,GAAlC,IAAyC,KADpC,EAELH,QAAQI,IAFH,EAGLJ,QAAQK,QAHH,CAAP;;CAHG;;ACAP;;ACAA,IAAMC,QACJC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBF,KAAKC,KAAL,CAAW,UAAX,CAA3B,EAAmDE,QAAnD,KAAgE,GADlE;;;;ACaA,+HAAA;;AAUA,gGAAA;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;;;AA5BY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEZ,YAAejB,WAAW;;CAAX,CAAf;;;;;"}